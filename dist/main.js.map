{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@webqit/util/js/isArray.js","webpack:///./node_modules/@webqit/util/js/isObject.js","webpack:///./node_modules/@webqit/util/js/isString.js","webpack:///./node_modules/@webqit/util/js/isUndefined.js","webpack:///./node_modules/@webqit/util/js/isNull.js","webpack:///./node_modules/@webqit/util/js/isTypeFunction.js","webpack:///./node_modules/@webqit/util/js/isTypeObject.js","webpack:///./node_modules/@webqit/util/js/isEmpty.js","webpack:///./node_modules/@webqit/util/arr/from.js","webpack:///./node_modules/@webqit/util/js/isTypeArray.js","webpack:///./node_modules/@webqit/util/js/isNumber.js","webpack:///./node_modules/@webqit/util/js/isNumeric.js","webpack:///./node_modules/@webqit/util/obj/each.js","webpack:///./src/database/_Database.js","webpack:///./src/database/_Factory.js","webpack:///./node_modules/@webqit/util/js/isFunction.js","webpack:///./node_modules/@webqit/util/arr/pushUnique.js","webpack:///./node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///./node_modules/@webqit/util/obj/mergeCallback.js","webpack:///./node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@webqit/util/obj/merge.js","webpack:///./src/database/DuplicateKeyViolationError.js","webpack:///./node_modules/@webqit/util/arr/intersect.js","webpack:///./node_modules/@webqit/util/arr/all.js","webpack:///./node_modules/@webqit/util/str/wrapped.js","webpack:///./src/database/_Store.js","webpack:///./src/database/_Cursor.js","webpack:///./src/database/odb/ODBCursor.js","webpack:///./src/database/odb/ODBStore.js","webpack:///./src/database/odb/ODBDatabase.js","webpack:///./node_modules/@webqit/util/arr/remove.js","webpack:///./node_modules/@webqit/util/js/isPlainObject.js","webpack:///./node_modules/@webqit/util/js/isBoolean.js","webpack:///./node_modules/@webqit/util/obj/even.js","webpack:///./node_modules/@webqit/util/obj/compareCallback.js","webpack:///./node_modules/@webqit/subscript/src/ExprInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ReferenceInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/CallInterface.js","webpack:///./node_modules/@webqit/subscript/src/IndependentExprInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/IfInterface.js","webpack:///./node_modules/@webqit/subscript/src/SyntaxError.js","webpack:///./node_modules/@webqit/subscript/src/Parser.js","webpack:///./node_modules/@webqit/util/str/after.js","webpack:///./node_modules/@webqit/util/str/before.js","webpack:///./node_modules/@webqit/util/str/beforeLast.js","webpack:///./node_modules/@webqit/util/str/unwrap.js","webpack:///./node_modules/@webqit/util/arr/flatten.js","webpack:///./node_modules/@webqit/util/arr/first.js","webpack:///./node_modules/@webqit/util/arr/last.js","webpack:///./node_modules/@webqit/util/obj/copyPlain.js","webpack:///./node_modules/@webqit/util/str/Lexer.js","webpack:///./node_modules/@webqit/subscript/src/grammar/AbstractionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Abstraction.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ArrInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Arr.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ArgumentsInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Arguments.js","webpack:///./node_modules/@webqit/util/arr/unique.js","webpack:///./node_modules/@webqit/subscript/src/grammar/AssertionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Assertion.js","webpack:///./node_modules/@webqit/subscript/src/grammar/AssignmentInterface.js","webpack:///./node_modules/@webqit/subscript/src/ReferenceError.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Assignment.js","webpack:///./node_modules/@webqit/subscript/src/grammar/BlockInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ReturnInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/DeletionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/NumInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/StrInterface.js","webpack:///./node_modules/@webqit/subscript/src/util.js","webpack:///./node_modules/@webqit/subscript/src/Scope.js","webpack:///./node_modules/@webqit/util/js/isClass.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Block.js","webpack:///./node_modules/@webqit/subscript/src/grammar/BoolInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Bool.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Call.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ComparisonInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Comparison.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ConditionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Condition.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Deletion.js","webpack:///./node_modules/@webqit/subscript/src/grammar/FuncInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Func.js","webpack:///./node_modules/@webqit/subscript/src/grammar/If.js","webpack:///./node_modules/@webqit/subscript/src/grammar/MathInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Math.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Num.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ObjInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Obj.js","webpack:///./node_modules/@webqit/subscript/src/grammar/PresenceInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Presence.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Reference.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Return.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Str.js","webpack:///./node_modules/@webqit/subscript/src/grammar/VoidInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Void.js","webpack:///./node_modules/@webqit/subscript/src/grammar.js","webpack:///./node_modules/@webqit/subscript/src/index.js","webpack:///./src/Parser.js","webpack:///./src/grammar/Assertion.js","webpack:///./src/grammar/Comparison.js","webpack:///./src/grammar/Reference.js","webpack:///./node_modules/@webqit/util/js/mixin.js","webpack:///./node_modules/@webqit/util/obj/find.js","webpack:///./src/grammar/AggrInterface.js","webpack:///./node_modules/@webqit/util/obj/inherit.js","webpack:///./src/grammar/WindowInterface.js","webpack:///./src/grammar/OrderByInterface.js","webpack:///./src/grammar/OrderBy.js","webpack:///./node_modules/@webqit/util/arr/sort.js","webpack:///./src/grammar/Window.js","webpack:///./src/grammar/Aggr.js","webpack:///./node_modules/@webqit/util/obj/first.js","webpack:///./src/grammar/ArrowReferenceInterface.js","webpack:///./src/grammar/ArrowReference.js","webpack:///./src/statement/DeleteInterface.js","webpack:///./node_modules/@webqit/util/obj/from.js","webpack:///./src/grammar/LiteralInterface.js","webpack:///./src/grammar/Literal.js","webpack:///./src/grammar/TableInterface.js","webpack:///./src/database/View.js","webpack:///./src/grammar/Table.js","webpack:///./node_modules/@webqit/util/arr/sum.js","webpack:///./node_modules/@webqit/util/arr/max.js","webpack:///./src/database/Row.js","webpack:///./node_modules/@webqit/util/arr/avg.js","webpack:///./node_modules/@webqit/util/arr/min.js","webpack:///./node_modules/@webqit/util/arr/rand.js","webpack:///./node_modules/@webqit/util/obj/get.js","webpack:///./src/database/Base.js","webpack:///./src/uac/Query.js","webpack:///./src/uac/Client.js","webpack:///./src/statement/Stmt.js","webpack:///./src/statement/Delete.js","webpack:///./src/grammar/FieldInterface.js","webpack:///./src/grammar/Field.js","webpack:///./src/grammar/GroupByInterface.js","webpack:///./src/grammar/GroupBy.js","webpack:///./node_modules/@webqit/util/obj/copy.js","webpack:///./src/statement/InsertInterface.js","webpack:///./src/statement/Insert.js","webpack:///./src/grammar/JoinInterface.js","webpack:///./src/grammar/Join.js","webpack:///./src/grammar/PlaceholderInterface.js","webpack:///./src/statement/SelectInterface.js","webpack:///./src/statement/Select.js","webpack:///./src/statement/UnionInterface.js","webpack:///./src/statement/UpdateInterface.js","webpack:///./src/statement/Update.js","webpack:///./src/grammar.js","webpack:///./src/statement/Union.js","webpack:///./src/grammar/Condition.js","webpack:///./src/grammar/Placeholder.js","webpack:///./src/index.js","webpack:///./src/database/odb/ODBFactory.js","webpack:///./src/database/idb/IDBCursor.js","webpack:///./src/database/idb/IDBProgressiveCursor.js","webpack:///./src/database/idb/IDBStore.js","webpack:///./src/database/idb/IDBDatabase.js","webpack:///./src/database/idb/IDBFactory.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","String","arguments","length","undefined","keys","castObject","slice","values","Number","isNaN","returnValue","obj","forEach","k","callback","parseFloat","_Database","database","schema","this","storeName","list","includes","onExists","has","Error","drop","schemaCreateStores","_create","_drop","base","map","_schema","validateTableSchema","table","autoIncrement","primaryKey","fields","fieldName","field","referencedEntity","query","args","params","vars","shift","_query","databaseName","defaultDB","filter","onExist","currentDatabases","existingVersions","version","join","payload","Promise","all","data","async","open","addAll","_export","storeNames","store","getAll","factoryGetSchema","DB_FACTORY","toString","items","itm","arr","indexOf","push","until","prototypalChain","getPrototypeOf","mergeCallback","objs","deepProps","isReplace","withSymbols","depth","obj1","obj2","keysAll","getOwnPropertyNames","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","arr2","val1","val2","reduce","prevTest","subject","startsWith","openingTag","endsWith","closingTag","uniqueKeys","cursor","putAll","cache","rowObj","existing","match","readKeyPath","matchingKey","row","existingRow","constraintName","keyPath","multiValues","columns","duplicateKeyCallback","forceAutoIncrement","ongoingAdd","forUpdates","inserts","line","_columns","columnName","handleInput","shouldMatchInput","duplicateRow","resolve","beforeAdd","add","concat","timestamp","Date","toISOString","type","default","multiRows","ongoingPut","beforePut","put","onupdate","multiIDs","delete","beforeDelete","applyDefaults","rowObjColumns","schemaColumns","unknownFields","col","_value","nullable","v","_Cursor","rows","flags","_onfinish","__eof","super","ongoingWrite","_store","rowID","DuplicateKeyViolationError","processPrimaryKey","reject","assertExisting","splice","canAutoIncrement","primaryKeyVal","primaryKeyPath","replace","storeSchema","driver","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","Super","comments","meta","Interface","ExprInterface","expr","grammar","_parsed","allowCache","parseOne","_grammar","parsed","assert","SyntaxError","reads","writes","deletes","calls","others","deep","parse","_expr","_params","subStmt","ReferenceInterface","hasCallHead","_context","context","CallInterface","role","_var","IndependentExprInterface","reference","IfInterface","branch","onTrue","limit","explain","search","pos","afterLast","lastIndexOf","substr","beforeLast","_flatten","withObjects","acc","count","firsts","amount","reverse","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","_evalCharsAt","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","nextIndex","quote","block","Math","max","testList","test","ret","useRegex","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","stringify","parseCallback","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","trim","split","ArgumentsInterface","arg","index","self","AssertionInterface","logic","Assertion","constructor","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","initKeyword","operator","postIncrDecr","initialVal","getEval","operandA","operandB","set","references","_pushUnique","ReferenceError","message","testBlockEnd","isIncrDecr","a","b","pathStartsWith","prev","referencesToPaths","seg","pathArray","unshift","NumInterface","int","StrInterface","stack","errorLevel","local","$local","trap","observe","props","prop","_has","main","scope","subtree","tags","changes","delta","path","oldValue","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","Function","_set","cntxt","localContxtMeta","LogicalError","strictMode","deleteProperty","del","prop2","contextObj2","fn","exec","apply","execUnknown","BlockInterface","stmts","delim","returned","returnCallback","flag","callEval","stmt","catch","results","deepReads","isDirectEventTarget","f","isIndirectEventTarget","ReturnInterface","abortive","DeletionInterface","BoolInterface","state","pop","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","onFalse","splits","Deletion","red","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","onTrueIsBlock","onFalseIsBlock","rest","MathInterface","currentTotal","sub","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","backticks","sourceContext","subjectContext","separator","nameSplit","exprLc","VoidInterface","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","Call","Reference","Parsers","mutates","placeholdersTransformed","opts","AND","OR","like","interpreted","ref","tempRow","$","mixin","classes","Traps","supersMap","Mixin","_this","_class","__this","Reflect","construct","setPrototypeOf","WQSubclassesSymbolKey","for","getPrototypeChain","__class","originalInstanceChecker","hasInstance","yes","_mixin","supers","supersReturnValues","supr","_find","subKey","curr","OrderByInterface","withRollup","tempRows","order","by","grouping","_for","_arr","sort","localeCompare","WindowInterface","dfn","definitions","uuid","partitionBy","partitioning","partition","orderBy","WINDOWS","clauseType","AggrInterface","window","AGGR","aggrFlag","aggrMatch","funcFlagMatch","aggrMatchRegex","funcs","funcName","funcCategory","normal","explicitOver","support","ArrowReferenceInterface","schema1","process","isReference","arrLeft","arrRight","schema2","SCHEMAS","isIncoming","actingKey","sourceTable","select","_sourceTable","foreignKey","LiteralInterface","syncCursors","TableInterface","alias","claused","associatedReferences","isDerivedQuery","getDerivedQuery","getTable","getName","derivedName","getAlias","derivedQuery","derivedQuerySources","getSources","getAliasOfField","getFields","ALL_SCHEMAS","source","getSchema","MAIN_SCHEMA","derivedSchema","derived","getContextName","keyPathAliased","then","derivedStore","getDatabaseName","SCHEMA","tableParse","DB_SCHEMA","fullTableName","tableName","validation","assertTableValidity","total","next","column","COLUMN","min","rand","floor","random","onColumns","isRollup","cum","byStr","columnStr","width","_v","doc","reciever","_ctxt","ctxt","_key","exists","JSON","doc1","doc2","joins","where","mainCursor","getCursor","joinCursors","j","lastJoinCursor","prevCursor","currentCursor","onfinish","eof","rowComposition","rowCompositionRejection","__main","__mainCursor","__mainFetch","fetch","__mainAlias","__joins","__joinCursors","joinFetches","__joinCursor","__joinFetch","__joinAlias","conditionClause","condition","conditionRowComposition","__joinFetches","_rowComposition","rowMember","__tables","__cursors","syncCursor","Query","tableXSchema","user","UAC_PARAMS","createParams","id","parent","lineage","privileges","uac","EXPLICIT_TABLE_ACCESS_QUERY","getExplicitRulesQuery","on","CONTROL_LEVEL","EXPLICIT_ROW_ACCESS_QUERY","attributionKey","account","ownerGuestRelationshipQuery","getOwnerGuestRelationshipQuery","AUTHOR_user_RELATIONSHIP_QUERY","deriveEntityAccess","accessType","withActingRights","entityAccess","getRightsRulesIntersectionExpression","getGuestRightsExpression","fieldsAccesses","fieldAccess","rights","AUTHOR_user_TOKEN_QUERY","tableSpecifiers","UAC","tableSpecifier","TABLE_SPECIFIERS","tableNameSplit","tableXName","targetInLineageQuery","groupConcat","accessRightQueries","compiledAccessRights","right","rules","rightsExpression","explicitFirstRule","nodeAccessAssertions","rule","ruleSql","OBJECT_QUERY","organicRights","priorityAccounts","ACCOUNT_QUERY","AUTHOR_USER_RELATIONSHIP_QUERY","accesses","overObject","orAsRelatedTo","withFields","standardAccesses","entityJson","fieldsJson","deriveFieldsAccess","access","allFieldsJson","accessesDocs","databases","tables","TABLE_REFERENCES","JOIN_CLAUSE","WHERE_CLAUSE","_t","when","repeat","strArray","clause","clauses","x","_isFunction","withUac","stmtClauses","literalValidateCallback","EXPRS","CLAUSES","TABLES","VARS","_exprParse","USING_CLAUSE","tableAlias","tableSchema","_VARS","__exprParse","varsUnlodged","ref_name","ref_context","associateReference","impliedFields","_ref_context","arrowReferences","getAssociateReferences","_joins","_select","joinUUID","schemas","DeleteInterface","targetTableNames","mainTable","DELETE_LIST","getBase","targetTables","deletionIDs","_rowID","deleteAll","getToString","stmtParse","getParse","FieldInterface","multiple","exprParse","isFieldName","GroupByInterface","having","groupBy","group","summaryRow","InsertInterface","COLUMNS_LIST","VALUES_LIST","WITH_UAC","IGNORE","INSERT_TYPE","UPDATE_CLAUSE","tableBase","insertType","assignment","newRow","ignore","tableColumnSplit","onDuplicateKeyUpdate","JoinInterface","SelectInterface","SELECT_LIST","getJoins","GROUP_BY_CLAUSE","WINDOWS_CLAUSE","ORDER_BY_CLAUSE","OFFSET_CLAUSE","LIMIT_CLAUSE","applyFields","collectAggrs","aggr","win","aggrs","getAggrExprs","fieldValObject","aggrExprs","aggrFields","completed","_tempRow","_even","offset","windowName","aliases","windowsByName","windowSplit","literal","UpdateInterface","ASSIGNMENT_LIST","__keys","Union","UnionInterface","queries","q","onDuplicate","paramsRegex","selects","lastStmtSplit","Select","Insert","Update","Delete","Join","Aggr","Placeholder","PlaceholderInterface","notation","ArrowReference","_storeFetch","onsuccess","IDBProgressiveCursor","_eof","_cursorRequest","_countRequest","_handleCursorFetch","_continueCursor","_count","openCursor","_cursor","continue","getAllRequest","tx_store","onerror","error","getRequest","countRequest","addRequest","putRequest","delRequest","objectStoreNames","_mode","transaction","objectStore","openDatabase","databaseCreateSchema","upgradeneeded","deleteObjectStore","databaseVersion","onupgradeneeded","forceUpgrade","indexedDB","exisitingVersions","IDBSchema","_getDatabases","maxExistingVersion","dbOpenRequest","storeExistence","storeParams","createObjectStore","indexName","keyPaths","indexNames","deleteIndex","createIndex","unique","assertIndexedDBSupport","WQ","ObjectiveSQL","ODB","IDB","deleteDatabase"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * _Database class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class _Database {\r\n\t\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor(database, schema = {}) {\r\n\t\tthis.database = database;\r\n\t\tthis.schema = schema;\r\n\t\t// --------------\r\n\t\tthis.name = database.name;\r\n\t}\r\n\r\n    /**\r\n     * Store existence.\r\n     * \r\n     * @param String storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    async has(storeName) {\r\n        var stores = await this.list();\r\n        return stores.includes(storeName);\r\n    }\r\n\t\r\n    /**\r\n     * Creates a store.\r\n     * \r\n     * @param String storeName\r\n     * @param Object schema\r\n     * @param String onExists\r\n     * \r\n     * @return _Store\r\n     */\r\n    async create(storeName, schema, onExists = null) {\r\n        if (await this.has(storeName)) {\r\n            if (!onExists) {\r\n                throw new Error('Table \"' + storeName + '\" already exists.');\r\n            }\r\n            if (onExists === 'drop') {\r\n                await this.drop(storeName);\r\n            }\r\n\t\t}\r\n\t\tschema.name = storeName;\r\n        // ------------------\r\n        schemaCreateStores(this.schema, [schema], onExists);\r\n        // ------------------\r\n        return await this._create(storeName, schema, onExists);\r\n    }\r\n\r\n    /**\r\n     * Drops a store.\r\n     * \r\n     * @param String storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    async drop(storeName) {\r\n        if (!(await this.has(storeName))) {\r\n            throw new Error('Table \"' + storeName + '\" has not been defined.');\r\n        }\r\n        // ------------------\r\n        delete this.schema[storeName];\r\n        // ------------------\r\n        return await this._drop(storeName);\r\n    }\r\n};\r\n\r\n/**\r\n * ---------\r\n * HELPERS\r\n * ---------\r\n */\r\n\r\n/**\r\n * Helps create Object Stores\r\n * \r\n * @param Object base \r\n * @param Array schema \r\n * @param String onExists\r\n * \r\n * @return void\r\n */\r\nexport const schemaCreateStores = (base, schema, onExists) => {\r\n    return schema.map(_schema => {\r\n        validateTableSchema(_schema);\r\n        if (base[_schema.name]) {\r\n            if (!onExists) {\r\n                throw new Error('Store name \"' + _schema.name + '\" already exists!');\r\n            }\r\n        }\r\n        if (!base[_schema.name] || onExists === 'drop') {\r\n            base[_schema.name] = _schema;\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Helps validate a Table schema definition.\r\n * \r\n * @param Object table \r\n * \r\n * @return void\r\n */\r\nconst validateTableSchema = (table) => {\r\n    if (!_isObject(table)) {\r\n        throw new Error('Table definition must be an object.');\r\n    }\r\n    if (!table.name) {\r\n        throw new Error('Table must have a name.');\r\n    }\r\n    if (table.autoIncrement) {\r\n        if (!table.primaryKey) {\r\n            throw new Error('The Auto-Increment directive cannot be used without a Primary Key.');\r\n        }\r\n        if (_arrFrom(table.primaryKey).length > 1) {\r\n            throw new Error('The Auto-Increment directive cannot be used with a composite Primary Key.');\r\n        }\r\n    }\r\n    if (!_isObject(table.fields)) {\r\n        throw new Error('Table must have a valid \"fields\" list.');\r\n    }\r\n    _each(table.fields, (fieldName, field) => {\r\n        if (!_isObject(field)) {\r\n            throw new Error('Invalid field definition: \"' + fieldName + '\" at \"' + table.name + '\".');\r\n        }\r\n        if (field.referencedEntity\r\n            && !(_isObject(field.referencedEntity) && field.referencedEntity.name)) {\r\n            throw new Error('Invalid foreign key definition: \"' + fieldName + '\" at \"' + table.name + '\".');\r\n        }\r\n    });\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport { schemaCreateStores } from './_Database.js';\r\n\r\n/**\r\n * --------------------------\r\n * Programmatic API for database management.\r\n * --------------------------\r\n * .list()\r\n * .has()\r\n * .open()\r\n * .create()\r\n * .drop()\r\n */\r\nexport default class _Factory {\r\n\r\n    /**\r\n     * ---------\r\n     * QUERY\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * Parses and evaluates a query.\r\n     * \r\n     * @param String query\r\n     * @param Array ...args\r\n     * \r\n     * @return Any\r\n\t */\r\n\tstatic async query(query, ...args) {\r\n        // -----------------\r\n        var params, vars;\r\n        if (_isArray(args[0])) {\r\n            vars = args.shift();\r\n        }\r\n        params = args.shift() || {};\r\n        if (vars) {\r\n            params.vars = vars;\r\n        }\r\n        // -----------------\r\n        return this._query(query, params);\r\n    }\r\n\r\n    /**\r\n     * Has a database?\r\n     * \r\n     * @param String databaseName\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async has(databaseName = this.defaultDB) {\r\n        var databases = await this.list();\r\n        return databases.filter(database => database.name === databaseName).length > 0;\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array  tables\r\n     * @param String  onExist\r\n     * \r\n     * @return Object\r\n     */\r\n    static async create(databaseName = this.defaultDB, schema = [], onExist = null) {\r\n        var currentDatabases = await this.list();\r\n        var existingVersions = _arrFrom(currentDatabases).filter(d => d.name === databaseName).map(d => d.version);\r\n        if (existingVersions.length) {\r\n            if (!onExist) {\r\n                throw new Error('Database \"' + databaseName + '\" already exists at versions: ' + existingVersions.join(',') + '!');\r\n            } else if (onExist === 'drop') {\r\n                await this.drop(databaseName);\r\n            }\r\n        }\r\n        // ------------------\r\n        if (!this.schema[databaseName] || onExist === 'drop') {\r\n            this.schema[databaseName] = {};\r\n        }\r\n        if (Object.keys(schema || {}).length) {\r\n            if (_isObject(schema)) {\r\n                _each(schema, (name, _schema) => {\r\n                    // Replace\r\n                    _schema.name = name;\r\n                });\r\n                schema = Object.values(schema);\r\n            }\r\n            schemaCreateStores(this.schema[databaseName], schema, onExist);\r\n        }\r\n        // ------------------\r\n        return await this._create(databaseName, schema, onExist);\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async drop(databaseName = this.defaultDB) {\r\n        if (!(await this.has(databaseName))) {\r\n            throw new Error('Database \"' + databaseName + '\" has not been defined.');\r\n        }\r\n        // ------------------\r\n        delete this.schema[databaseName];\r\n        // ------------------\r\n        return await this._drop(databaseName);;\r\n    }\r\n    \r\n    /**\r\n     * ---------\r\n     * IMPORT/EXPORT\r\n     * ---------\r\n     */\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Object payload\r\n     * @param String onExists\r\n     * \r\n     * @return Array\r\n     */\r\n    static async import(databaseName, payload, onExists = null) {\r\n        var database = await this.create(databaseName, payload.schema, onExists);\r\n        return Promise.all(Object.keys(payload.data || {}).map(async storeName => {\r\n            var store = await database.open(storeName, 'readwrite');\r\n            return store.addAll(payload.data[storeName]);\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array ...args\r\n     * \r\n     * @return Object\r\n     */\r\n    static async export(databaseName, ...args) {\r\n        var database = await this.open(databaseName, ...args);\r\n        // -------------------\r\n        var _export = {schema: database.schema, data: {}};\r\n        // -------------------\r\n        var storeNames = await database.list();\r\n        await Promise.all(storeNames.map(async name => {\r\n            var store = await database.open(name);\r\n            _export.data[name] = await store.getAll();\r\n        }));\r\n        return _export;\r\n    }\r\n};\r\n\r\n/**\r\n * Databases definitions.\r\n * \r\n * @var Object\r\n */\r\n_Factory.schema = {};\r\n\r\n/**\r\n * Default Database name.\r\n * \r\n * @var String\r\n */\r\n_Factory.defaultDB = 'db1';\r\n\r\n/**\r\n * DB Schema\r\n */\r\nexport const factoryGetSchema = (DB_FACTORY = null, databaseName = null) => {\r\n    //DB_FACTORY = DB_FACTORY || _Factory;\r\n    if (DB_FACTORY && (DB_FACTORY.prototype instanceof _Factory || DB_FACTORY === _Factory)) {\r\n        return DB_FACTORY.schema[databaseName || DB_FACTORY.defaultDB];\r\n    }\r\n    if (!databaseName && DB_FACTORY) {\r\n        return DB_FACTORY;\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","export default class extends Error {};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * Tells if ALL items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest && callback(itm, i), true);\r\n};\r\n","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _all from '@webqit/util/arr/all.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Store class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class _Store {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(store, name, schema = {}, params = {}) {\r\n\t\t// -----------------\r\n\t\tthis.store = store;\r\n\t\tthis.name = name;\r\n\t\tthis.schema = !_isEmpty(schema) ? schema : {\r\n\t\t\tname: store.name,\r\n\t\t\tprimaryKey: '',\r\n\t\t\tfields: {},\r\n\t\t\tuniqueKeys: {},\r\n\t\t};\r\n\t\tthis.params = params;\r\n\t\t// -----------------\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs a cursor.\r\n\t * \r\n\t * @param Cursor cursor\r\n\t * \r\n\t * @return Number\r\n\t */\r\n\tasync syncCursor(cursor) {\r\n\t\treturn await this.putAll(cursor.cache);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync match(rowObj) {\r\n\t\t// -----------\r\n\t\tvar primaryKey, existing;\r\n\t\tif (this.schema.primaryKey \r\n\t\t&& (primaryKey = readKeyPath(rowObj, this.schema.primaryKey)) \r\n\t\t&& (existing = await this.get(primaryKey))) {\r\n\t\t\treturn {\r\n\t\t\t\tmatchingKey: 'PRIMARY_KEY',\r\n\t\t\t\tprimaryKey,\r\n\t\t\t\trow: existing,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// -----------\r\n\t\tvar match;\r\n\t\tif (this.schema.uniqueKeys) {\r\n\t\t\t(await this.getAll()).forEach((existingRow, i) => {\r\n\t\t\t\tif (match) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t_each(this.schema.uniqueKeys, (constraintName, keyPath) => {\r\n\t\t\t\t\tif (existingRow && readKeyPath(rowObj, keyPath) === readKeyPath(existingRow, keyPath)) {\r\n\t\t\t\t\t\tmatch = {\r\n\t\t\t\t\t\t\tmatchingKey: constraintName,\r\n\t\t\t\t\t\t\tprimaryKey: this.schema.primaryKey ? readKeyPath(existingRow, this.schema.primaryKey) : i,\r\n\t\t\t\t\t\t\trow: {...existingRow},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------\r\n\t */\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync addAll(multiValues, columns = [], duplicateKeyCallback = null, forceAutoIncrement = false) {\r\n\r\n\t\tvar ongoingAdd;\r\n\t\tvar forUpdates = [];\r\n\r\n\t\tvar inserts = await Promise.all(multiValues.map(async (values, line) => {\r\n\r\n\r\n\t\t\tvar rowObj = {};\r\n\t\t\tif (_isObject(values)) {\r\n\t\t\t\trowObj = values;\r\n\t\t\t} else {\r\n\t\t\t\tvar _columns = columns.length ? columns : Object.keys(this.schema.fields);\r\n\t\t\t\tif (_columns.length && _columns.length !== values.length) {\r\n\t\t\t\t\tthrow new Error('Column/values count mismatch at line ' + line + '!');\r\n\t\t\t\t}\r\n\t\t\t\t_columns.forEach((columnName, i) => {\r\n\t\t\t\t\trowObj[columnName] = values[i];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// -------------\r\n\t\t\tthis.handleInput(rowObj, true);\t\t\t\t\t\r\n\t\t\t// -------------\r\n\r\n\t\t\tif (this.shouldMatchInput(rowObj) || duplicateKeyCallback) {\r\n\t\t\t\tongoingAdd/* block next iteration */ = new Promise(async resolve => {\r\n\t\t\t\t\tawait ongoingAdd;/* wait prev iteration */\r\n\r\n\t\t\t\t\tvar match = await this.match(rowObj);\r\n\t\t\t\t\tif (match && duplicateKeyCallback) {\r\n\t\t\t\t\t\tvar duplicateRow = {...match.row};\r\n\t\t\t\t\t\tif (duplicateKeyCallback(duplicateRow, rowObj)) {\r\n\t\t\t\t\t\t\tforUpdates.push(duplicateRow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// The duplicate situation had been handled\r\n\t\t\t\t\t\t// ...positive or negative\r\n\t\t\t\t\t\treturn resolve(0);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// We're finally going to add!\r\n\t\t\t\t\t// We must not do this earlier...\r\n\t\t\t\t\t// as \"onupdate\" rows will erronously take on a new timestamp on this column\r\n\t\t\t\t\tawait this.beforeAdd(rowObj, match);\r\n\t\t\t\t\tresolve(this.add(rowObj));\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ongoingAdd;\r\n\t\t\t}\r\n\r\n\t\t\tawait this.beforeAdd(rowObj);\r\n\t\t\treturn this.add(rowObj);\r\n\t\t}));\r\n\r\n\t\t// OnDuplicateKey updates\r\n\t\tif (forUpdates.length) {\r\n\t\t\tinserts = inserts.concat(await this.putAll(forUpdates));\r\n\t\t}\r\n\r\n\t\treturn inserts;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforeAdd(rowObj, match) {\r\n\t\tvar timestamp = (new Date).toISOString();\r\n\t\t_each(this.schema.fields || {}, (name, field) => {\r\n\t\t\tif ((field.type === 'datetime' || field.type === 'timestamp') && field.default === 'CURRENT_TIMESTAMP') {\r\n\t\t\t\trowObj[name] = timestamp;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync putAll(multiRows) {\r\n\t\tvar ongoingPut;\r\n\t\tvar updates = await Promise.all(multiRows.map(async rowObj => {\r\n\r\n\t\t\t// -------------\r\n\t\t\tthis.handleInput(rowObj);\t\t\t\t\t\r\n\t\t\t// -------------\r\n\t\t\tif (this.shouldMatchInput(rowObj)) {\r\n\t\t\t\tongoingPut/* block next iteration */ = new Promise(async resolve => {\r\n\t\t\t\t\tawait ongoingPut;/* wait prev iteration */\r\n\r\n\t\t\t\t\tawait this.beforePut(rowObj, await this.match(rowObj));\r\n\t\t\t\t\tresolve(this.put(rowObj));\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ongoingPut;\r\n\t\t\t}\r\n\r\n\t\t\tawait this.beforePut(rowObj);\r\n\t\t\treturn this.put(rowObj);\r\n\t\t}));\r\n\r\n\t\treturn updates;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforePut(rowObj, match) {\r\n\t\tif (match && !_all(Object.keys(rowObj), key => rowObj[key] === match.row[key])) {\r\n\t\t\tvar timestamp = (new Date).toISOString();\r\n\t\t\t_each(this.schema.fields || {}, (name, field) => {\r\n\t\t\t\tif ((field.type === 'datetime' || field.type === 'timestamp') && field.onupdate === 'CURRENT_TIMESTAMP') {\r\n\t\t\t\t\trowObj[name] = timestamp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync deleteAll(multiIDs) {\r\n\t\tvar deletes = await Promise.all(multiIDs.map(async primaryKey => {\r\n\t\t\treturn this.delete(await this.beforeDelete(primaryKey));\r\n\t\t}));\r\n\r\n\t\treturn deletes;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforeDelete(primaryKey) {\t\r\n\t\treturn primaryKey;\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------\r\n\t */\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\thandleInput(rowObj, applyDefaults = false) {\r\n\t\tvar rowObjColumns = Object.keys(rowObj);\r\n\t\tvar schemaColumns = Object.keys(this.schema.fields);\r\n\t\t// ------------------\r\n\t\tvar unknownFields = rowObjColumns.filter(col => schemaColumns.indexOf(col) === -1);\r\n\t\tif (unknownFields.length) {\r\n\t\t\tthrow new Error('Unknown column: ' + unknownFields[0]);\r\n\t\t}\r\n\t\t// ------------------\r\n\t\tschemaColumns.forEach(columnName => {\r\n\t\t\tvar value = rowObj[columnName];\r\n\t\t\tvar field = _isObject(this.schema.fields[columnName]) ? this.schema.fields[columnName] : {};\r\n\t\t\tif (rowObjColumns.includes(columnName)) {\r\n\t\t\t\t// TODO: Validate supplied value\r\n\t\t\t\tif (field.type === 'json') {\r\n\t\t\t\t\tif (!_isTypeObject(_value) && (!_isString(value) || (!_wrapped(value, '[', ']') && !_wrapped(value, '{', '}')))) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['char', 'tinytext', 'smalltext', 'text', 'bigtext', 'varchar'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isString(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['bit', 'tinyint', 'smallint', 'int', 'bigint', 'decimal', 'number', 'float', 'real'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isNumeric(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['enum', 'set'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isNumeric(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['date', 'datetime', 'timestamp'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isString(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (applyDefaults && !_intersect(_arrFrom(columnName), _arrFrom(this.schema.primaryKey)).length) {\r\n\t\t\t\t// DONE: Apply defaults...\r\n\t\t\t\trowObj[columnName] = ('default' in field) && !(['date', 'datetime', 'timestamp'].includes(field.type) && field.default === 'CURRENT_TIMESTAMP') \r\n\t\t\t\t\t? field.default \r\n\t\t\t\t\t: null;\r\n\t\t\t}\r\n\t\t\t// Non-nullable\r\n\t\t\tif (field.nullable === false && (_isNull(rowObj[columnName]) || _isUndefined(rowObj[columnName]))) {\r\n\t\t\t\tthrow new Error('Inserting NULL on non-nullable column: ' + columnName);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tshouldMatchInput(rowObj) {\r\n\t\treturn Object.keys(this.schema.fields).filter(name => {\r\n\t\t\tvar field = this.schema.fields[name];\r\n\t\t\treturn ['datetime', 'timestamp'].includes(field.type) \r\n\t\t\t\t&& (field.default === 'CURRENT_TIMESTAMP' || field.onupdate === 'CURRENT_TIMESTAMP')\r\n\t\t}).length;\r\n\t}\r\n};\r\n\r\n/**\r\n * @AutoIncremen\r\n */\r\nconst readKeyPath = (rowObj, keyPath) => {\r\n\treturn _arrFrom(keyPath).map(key => rowObj[key]).filter(v => v).join('-');\r\n};\r\n","\r\n\r\n/**\r\n * ---------------------------\r\n * _Cursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class _Cursor {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(rows) {\r\n\t\tthis.cache = rows;\r\n\t\tthis.key = 0;\r\n\t\tthis.flags = {};\r\n\t\tthis._onfinish = [];\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tnext() {\r\n\t\tif (!this.cache.length || this.key === this.cache.length - 1) {\r\n\t\t\tthis.__eof = true;\r\n\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t\tthis.key = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n        this.key ++;\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teof() {\r\n\t\treturn !this.cache.length || this.key === this.cache.length - 1;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync fetch() {\r\n\t\tif (this.key < this.cache.length) {\r\n\t\t\treturn this.cache[this.key];\r\n\t\t}\r\n\t}\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Cursor from '../_Cursor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBCursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBCursor extends _Cursor {};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport DuplicateKeyViolationError from '../DuplicateKeyViolationError.js';\r\nimport _Store from '../_Store.js';\r\nimport ODBCursor from './ODBCursor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBStore class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBStore extends _Store {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(store, name, schema = {}, params = {}) {\r\n\t\tsuper(...arguments);\r\n\t\tthis.ongoingWrite = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t * \r\n\t * @return Cursor\r\n\t */\r\n\tgetCursor() {\r\n\t\treturn new ODBCursor(\r\n\t\t\t// IMPORTANT: Deep copy... that is... copy each row\r\n\t\t\t(this.store || []).reduce((_store, row) => _store.concat(row ? {...row} : undefined), []).filter(row => row)\r\n\t\t);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync getAll() {\r\n\t\t// IMPORTANT: Deep copy... that is... copy each row\r\n\t\treturn (this.store || []).reduce((_store, row) => _store.concat(row ? {...row} : undefined), []);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync get(rowID) {\r\n\t\tif (!this.schema.primaryKey) {\r\n\t\t\tthrow new Error('Table must define a Primary Key to fetch an item by Primary Key.');\r\n\t\t}\r\n\t\tvar store = this.store;\r\n\t\trowID = _arrFrom(rowID).join('-');\r\n\t\tif (this.schema.autoIncrement) {\r\n\t\t\treturn store[rowID - 1] ? {...store[rowID - 1]} : undefined;\r\n\t\t}\r\n\t\treturn store[rowID] ? {...store[rowID]} : undefined;\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync count() {\r\n\t\tvar store = this.store;\r\n\t\treturn store.length;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tshouldMatchInput(rowObj) {\r\n\t\treturn this.schema.primaryKey || super.shouldMatchInput(rowObj);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforeAdd(rowObj, match) {\r\n\t\tif (match) {\r\n\t\t\tthrow new DuplicateKeyViolationError('Inserting duplicate values on unique key constraint: ' + match.matchingKey);\r\n\t\t} else {\r\n\t\t\tvar store = this.store;\r\n\t\t\tprocessPrimaryKey(store, rowObj, this.schema.primaryKey, this.schema.autoIncrement);\r\n\t\t}\r\n\r\n\t\tawait super.beforeAdd(rowObj, match);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(rowObj) {\r\n\t\tthis.ongoingWrite = new Promise(async (resolve, reject) => {\r\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\r\n\t\t\tvar store = this.store;\r\n\t\t\tvar primaryKey = readKeyPath(rowObj, this.schema.primaryKey);\r\n\t\t\tif (this.schema.autoIncrement) {\r\n\t\t\t\tstore[primaryKey - 1] = rowObj;\r\n\t\t\t} else {\r\n\t\t\t\tstore[primaryKey] = rowObj;\r\n\t\t\t}\r\n\t\t\tresolve(primaryKey);\r\n\t\t});\r\n\r\n\t\treturn this.ongoingWrite;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforePut(rowObj, match) {\r\n\t\tif (match) {\r\n\t\t\t_each(match.row, (key, value) => {\r\n\t\t\t\tif (!(key in rowObj)) {\r\n\t\t\t\t\trowObj[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvar store = this.store;\r\n\t\t\tprocessPrimaryKey(store, rowObj, this.schema.primaryKey, this.schema.autoIncrement);\r\n\t\t}\r\n\r\n\t\tawait super.beforePut(rowObj, match);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tput(rowObj) {\r\n\t\tthis.ongoingWrite = new Promise(async resolve => {\r\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\r\n\t\t\tvar store = this.store,\r\n\t\t\t\tprimaryKey = readKeyPath(rowObj, this.schema.primaryKey);\r\n\t\t\tif (this.schema.autoIncrement) {\r\n\t\t\t\tstore[primaryKey - 1] = rowObj;\r\n\t\t\t} else {\r\n\t\t\t\tstore[primaryKey] = rowObj;\r\n\t\t\t}\r\n\t\t\tresolve(primaryKey);\r\n\t\t});\r\n\r\n\t\treturn this.ongoingWrite;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tdelete(rowID, assertExisting = true) {\r\n\t\tthis.ongoingWrite = new Promise(async (resolve, reject) => {\r\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\r\n\t\t\tvar primaryKey, store = this.store;\r\n\t\t\tif (this.schema.autoIncrement) {\r\n\t\t\t\tif (store[rowID - 1]) {\r\n\t\t\t\t\tdelete store[rowID - 1];\r\n\t\t\t\t\tprimaryKey = rowID;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (store[rowID]) {\r\n\t\t\t\t\tdelete store[rowID];\r\n\t\t\t\t\tprimaryKey = rowID;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!primaryKey && assertExisting) {\r\n\t\t\t\treturn reject(new Error('The given row (with ' + _arrFrom(this.schema.primaryKey).join(',') + ' = ' + primaryKey + ') does not exist in the store.'));\r\n\t\t\t}\r\n\t\t\tresolve(primaryKey);\r\n\t\t});\r\n\r\n\t\treturn this.ongoingWrite;\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync clear() {\r\n\t\tvar store = this.store;\r\n\t\tstore.splice(0);\r\n\t\treturn true;\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @AutoIncremen\r\n */\r\nvar readKeyPath = (rowObj, keyPath) => {\r\n\treturn _arrFrom(keyPath).map(key => rowObj[key]).filter(v => v).join('-');\r\n};\r\n\r\n/**\r\n * @AutoIncremen\r\n */\r\nexport function processPrimaryKey(store, rowObj, primaryKey, canAutoIncrement) {\r\n\tif (!primaryKey) {\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvar primaryKeyVal = readKeyPath(rowObj, primaryKey);\r\n\tif (!primaryKeyVal && canAutoIncrement) {\r\n\t\tvar primaryKeyPath = _arrFrom(primaryKey);\r\n\t\tif (primaryKeyPath.length > 1) {\r\n\t\t\tthrow new Error('The Auto-Increment flag cannot be used with Composite Primary Keys.');\r\n\t\t}\r\n\t\tprimaryKeyVal = store.length + 1;\r\n\t\trowObj[primaryKeyPath[0]] = primaryKeyVal;\r\n\t}\r\n\r\n\treturn primaryKeyVal;\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Database from '../_Database.js';\r\nimport ODBStore from './ODBStore.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBDatabase class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBDatabase extends _Database {\r\n\r\n    /**\r\n     * Returns store names.\r\n     * \r\n     * @return Array\r\n     */\r\n    async list() {\r\n        return Object.keys(this.database);\r\n    }\r\n\t \r\n\t/**\r\n\t * Opens a store.\r\n     * \r\n     * @param String  storeName\r\n     * @param String  mode\r\n     * @param Object params\r\n     * \r\n     * @return ODBStore\r\n\t */\r\n\topen(storeName, mode = 'readonly', params = {}) {\r\n\t\tvar store = this.database[storeName];\r\n\t\tparams.mode = mode;\r\n\t\treturn new ODBStore(store, storeName, this.schema[storeName], params);\r\n\t}\r\n\t\r\n    /**\r\n     * Creates a store\r\n     * \r\n     * @param String  storeName\r\n     * @param Object schema\r\n     * @param Bool  replace\r\n     * \r\n     * @return ODBStore\r\n     */\r\n    async _create(storeName, schema, replace) {\r\n        var store = [];\r\n        this.database[storeName] = store;\r\n        if ((schema || []).length) {\r\n            Object.values(schema).forEach(storeSchema => {\r\n                if (!storeSchema.driver) {\r\n                    storeSchema.driver = 'ODB';\r\n                }\r\n            });\r\n        }\r\n        return new ODBStore(store, this.schema[storeName]);\r\n\t}\r\n\t\r\n    /**\r\n     * Drops a store.\r\n     * \r\n     * @param String  storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    async _drop(storeName) {\r\n        delete this.database[storeName];\r\n        return true;\r\n    }\r\n};","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConstruct'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Parser class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Parser {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, grammar, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !grammar && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _grammar = Object.values(grammar || this.grammar);\r\n\t\t\tfor (var i = 0; i < _grammar.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, _grammar[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!grammar && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = _grammar[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Expr, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar meta = createMeta();\r\n\t\tvar parsed = Expr.parse(expr, (_expr, _grammar, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _grammar, _params ? _merge({}, params, _params) : params);\r\n\t\t\tif (subStmt instanceof ReferenceInterface) {\r\n\t\t\t\tvar hasCallHead, _context = subStmt;\r\n\t\t\t\twhile(_context = _context.context) {\r\n\t\t\t\t\tif (_context instanceof CallInterface) {\r\n\t\t\t\t\t\thasCallHead = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsubStmt.role = _params.role;\r\n\t\t\t\tif (!hasCallHead && _params.role !== 'CONTEXT') {\r\n\t\t\t\t\tvar type = _params.role === 'ASSIGNMENT_SPECIFIER' ? 'writes' \r\n\t\t\t\t\t\t: (_params.role === 'DELETION_SPECIFIER' ? 'deletes' \r\n\t\t\t\t\t\t\t: (_params.role === 'CALL_SPECIFIER' ? 'calls' : 'reads'));\r\n\t\t\t\t\tmeta[type].push(subStmt);\r\n\t\t\t\t}\r\n\t\t\t} else if (subStmt instanceof CallInterface) {\r\n\t\t\t\tmeta.others.push(subStmt);\r\n\t\t\t}\r\n\t\t\tif (subStmt) {\r\n\t\t\t\tObject.keys(subStmt.meta).forEach(type => {\r\n\t\t\t\t\tsubStmt.meta[type].forEach(_var => meta[type].push(_var));\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(subStmt.meta.deep).forEach(type => {\r\n\t\t\t\t\tif (!meta.deep[type]) {\r\n\t\t\t\t\t\tmeta.deep[type] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsubStmt.meta.deep[type].forEach(_var => meta.deep[type].push(_var));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (parsed instanceof IndependentExprInterface) {\r\n\t\t\t\tparsed.meta = createMeta();\r\n\t\t\t} else {\r\n\t\t\t\tparsed.meta = meta;\r\n\t\t\t}\r\n\t\t\tif ((parsed instanceof CallInterface)) {\r\n\t\t\t\tif (parsed.reference.context && !(parsed.reference.context instanceof CallInterface)) {\r\n\t\t\t\t\tparsed.meta.reads.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if ((parsed instanceof IfInterface)) {\r\n\t\t\t\t['onTrue', 'onFalse'].forEach(branch => {\r\n\t\t\t\t\tif (parsed[branch]) {\r\n\t\t\t\t\t\tObject.keys(createMeta()).forEach(type => {\r\n\t\t\t\t\t\t\tif (type === 'deep') return;\r\n\t\t\t\t\t\t\tvar variables = parsed.onTrue.meta[type].concat(parsed.onTrue.meta.deep[type] || []);\r\n\t\t\t\t\t\t\tvariables.forEach(_var => {\r\n\t\t\t\t\t\t\t\t_remove(parsed.meta[type], _var);\r\n\t\t\t\t\t\t\t\tif (!parsed.meta.deep[type]) {\r\n\t\t\t\t\t\t\t\t\tparsed.meta.deep[type] = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tparsed.meta.deep[type].push(_var);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};\r\n\r\nfunction createMeta() {\r\n\treturn {reads: [], writes: [], deletes: [], calls: [], others: [], deep: [],};\r\n};","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator, this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {role: 'ASSIGNMENT_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\n\r\n\r\n/**\r\n * UTILS\r\n */\r\nexport function pathStartsWith(a, b) {\r\n\treturn b.reduce((prev, value, i) => prev && value === a[i], true);\r\n};\r\nexport function pathAfter(a, b) {\r\n\treturn a.slice(b.length);\r\n};\r\nexport function pathIsSame(a, b) {\r\n\treturn a.length === b.length && a.reduce((prev, value, i) => prev && value === b[i], true);\r\n};\r\nexport function referencesToPaths(references) {\r\n    return references.map(expr => {\r\n        var seg = expr, pathArray = [];\r\n        do {\r\n            if (seg instanceof CallInterface) {\r\n                pathArray.splice(0);\r\n                seg = seg.reference;\r\n            }\r\n            if (_isString(seg.name)) {\r\n                pathArray.unshift(seg.name);\r\n            } else if (seg.name instanceof NumInterface) {\r\n                pathArray.unshift(seg.name.int);\r\n            } else if (seg.name instanceof StrInterface) {\r\n                pathArray.unshift(seg.name.expr);\r\n            } else {\r\n                pathArray.splice(0);\r\n            }\r\n        } while(seg = seg.context);\r\n        return pathArray;\r\n    });\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.params = params;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Scope.create(this.stack.super, {errorLevel: params.errorLevel});\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\tvar _params  = {...params};\r\n\t\t_params.subtree = 'auto';\r\n\t\t_params.tags = [this, 'jsen-context',];\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\tchanges = changes.filter(delta => delta.name === 'main');\r\n\t\t\tvar references = changes.map(delta => delta.path.slice(1)).filter(path => path.length);\r\n\t\t\tvar props = references.map(path => path[0]);\r\n\t\t\tif (!references.length && changes.length && changes[0].value) {\r\n\t\t\t\tprops = _unique((\r\n\t\t\t\t\t\t_isTypeObject(changes[0].value) ? Object.keys(changes[0].value) : []\r\n\t\t\t\t\t).concat(changes[0].oldValue && _isTypeObject(changes[0].oldValue) ? Object.keys(changes[0].oldValue) : [])\r\n\t\t\t\t);\r\n\t\t\t\treferences = props.map(prop => [prop]);\r\n\t\t\t}\r\n\t\t\tif (props.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope:'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree: 'auto',\r\n\t\t\ttags: [this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance, level) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn advance();\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif ((e instanceof ReferenceError) && !localContxtMeta && level === 0 && this.params.strictMode === false) {\r\n\t\t\t\t\t// Assign to undeclared variables\r\n\t\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" does not exist in scope!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}) {\r\n\t\treturn cntxt instanceof Scope ? cntxt : new Scope({\r\n\t\t\tmain: cntxt,\r\n\t\t}, params);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport { referencesToPaths, pathStartsWith } from '../util.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\r\n\t\tvar returned, returnCallback = params.returnCallback;\r\n\t\tparams = {...params};\r\n\t\tparams.returnCallback = flag => {\r\n\t\t\treturned = flag;\r\n\t\t};\r\n\r\n\t\t// Current!\r\n\t\tcontext = Scope.create(context);\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar results = [], skippedAbort;\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar reads = referencesToPaths(stmt.meta.reads);\r\n\t\t\tvar deepReads = referencesToPaths(stmt.meta.deep.reads || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(f => reads.filter(v => pathStartsWith(v, f)).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(f => deepReads.filter(v => pathStartsWith(v, f)).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = {...params};\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\tif (stmt instanceof ReturnInterface || returned) {\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn results[i];\r\n\t\t\t\t}\r\n\t\t\t\tif (stmt instanceof IfInterface)\r\n\t\t\t\tif (((stmt instanceof IfInterface) && stmt.abortive) || returned === false) {\r\n\t\t\t\t\tskippedAbort = true;\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\t// This is a local change!\r\n\t\t\t\tif (params.references && ((stmt instanceof AssignmentInterface) || (stmt instanceof DeletionInterface))) {\r\n\t\t\t\t\tparams.references = params.references.concat(referencesToPaths([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {role: 'CALL_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim(), null, {role: 'DELETION_SPECIFIER'})) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport IndependentExprInterface from '../IndependentExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\tparams = {...params};\r\n\t\tdelete params.returnCallback;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var abortive;\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            } else {\r\n                abortive = onTrue.stmts.filter(stmt => stmt instanceof ReturnInterface).length;\r\n            }\r\n\t\t\tconst instance = new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock\r\n                }\r\n            );\r\n            instance.abortive = abortive;\r\n            return instance;\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''), null, {role: 'CONTEXT'});\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr ? 'return ' + this.expr.stringify(params) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport Abstraction from './grammar/Abstraction.js';\r\nimport AbstractionInterface from './grammar/AbstractionInterface.js';\r\nimport Arr from './grammar/Arr.js';\r\nimport ArrInterface from './grammar/ArrInterface.js';\r\nimport Arguments from './grammar/Arguments.js';\r\nimport ArgumentsInterface from './grammar/ArgumentsInterface.js';\r\nimport Assertion from './grammar/Assertion.js';\r\nimport AssertionInterface from './grammar/AssertionInterface.js';\r\nimport Assignment from './grammar/Assignment.js';\r\nimport AssignmentInterface from './grammar/AssignmentInterface.js';\r\nimport Block from './grammar/Block.js';\r\nimport BlockInterface from './grammar/BlockInterface.js';\r\nimport Bool from './grammar/Bool.js';\r\nimport BoolInterface from './grammar/BoolInterface.js';\r\nimport Call from './grammar/Call.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport Comparison from './grammar/Comparison.js';\r\nimport ComparisonInterface from './grammar/ComparisonInterface.js';\r\nimport Condition from './grammar/Condition.js';\r\nimport ConditionInterface from './grammar/ConditionInterface.js';\r\nimport Deletion from './grammar/Deletion.js';\r\nimport DeletionInterface from './grammar/DeletionInterface.js';\r\nimport Func from './grammar/Func.js';\r\nimport FuncInterface from './grammar/FuncInterface.js';\r\nimport If from './grammar/If.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport Math from './grammar/Math.js';\r\nimport MathInterface from './grammar/MathInterface.js';\r\nimport Num from './grammar/Num.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport Obj from './grammar/Obj.js';\r\nimport ObjInterface from './grammar/ObjInterface.js';\r\nimport Presence from './grammar/Presence.js';\r\nimport PresenceInterface from './grammar/PresenceInterface.js';\r\nimport Reference from './grammar/Reference.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport Return from './grammar/Return.js';\r\nimport ReturnInterface from './grammar/ReturnInterface.js';\r\nimport Str from './grammar/Str.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\nimport Void from './grammar/Void.js';\r\nimport VoidInterface from './grammar/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nexport default {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tIndependentExprInterface,\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Parser from './Parser.js';\r\nimport grammar from './grammar.js';\r\nimport Scope from './Scope.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nParser.grammar = grammar;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Parser;\r\nexport {\r\n\tScope,\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _Parser from '@webqit/subscript';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Mql (base) class\r\n *\r\n * TODO:\r\n *\t\tSELECT *\r\n *\t\tSELECT ... FROM (SELECT ...)\r\n *\t\tPREPARED STATEMENTS PLACEHOLDERS\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Parser extends _Parser {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}) {\r\n\t\tif (!('mutates' in params)) {\r\n\t\t\tparams.mutates = true;\r\n\t\t}\r\n\t\tif (!params.placeholdersTransformed && expr.indexOf('?') > 0) {\r\n\t\t\texpr = Lexer.split(expr, ['?'], {blocks:[]}).reduce((expr, t, i) => expr ? expr + '?' + (i - 1) + t : t, null);\r\n\t\t\tparams.placeholdersTransformed = true;\r\n\t\t}\r\n\t\tif (!params.opts) {\r\n\t\t\tparams.opts = {};\r\n\t\t}\r\n\t\tif (!('ci' in params.opts)) {\r\n\t\t\tparams.opts.ci = true;\r\n\t\t}\r\n\t\tparams.allowCache = false;\r\n\t\treturn super.parse(expr, Parsers, params);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAssertion as _Assertion\r\n} from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * @extends\r\n */\r\nexport default class Assertion extends _Assertion {};\r\n\r\n/**\r\n * @var string\r\n */\r\nAssertion.negation = 'NOT ';\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssertion.operators = {\r\n\tand: ' and ',\r\n\tor: ' or ',\r\n\tAND: ' AND ',\r\n\tOR: ' OR ',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tComparison as _Comparison\r\n} from '@webqit/subscript/src/grammar.js';\r\n\r\n\r\n/**\r\n * @extends\r\n */\r\nexport default class Comparison extends _Comparison {};\r\n\r\n/**\r\n * @prop array\r\n */\r\nComparison.operators = {\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t},\r\n\tpartial: {\r\n\t\tany: 'any',\r\n\t\tin: 'in',\r\n\t\tlike: 'like',\r\n\t},\r\n\texact: {\r\n\t\tnotEqualsTo: '<>',\r\n\t\t// must be after all ocurrencies of \"=\"\r\n\t\tis: '=',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { Scope } from '@webqit/subscript';\r\nimport { Reference as _Reference } from '@webqit/subscript/src/grammar.js';\r\n\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Reference extends _Reference {\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (this.interpreted && params.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.map(ref => ref.stringify(params)).join(', ');\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.stringify(params);\r\n\t\t}\r\n\t\t// -----------\r\n\t\treturn super.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(tempRow, params = {}) {\r\n\t\t// ------------\r\n\t\t// For those calling getEval() directly\r\n\t\tif (this.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.reduce((map, ref) => {\r\n\t\t\t\t\tmap[ref.name] = ref.getEval(tempRow, params);\r\n\t\t\t\t\treturn map;\r\n\t\t\t\t}, {});\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.getEval(tempRow, params);\r\n\t\t}\r\n\t\t// -----------\r\n\t\t// Lets find the table that contains the column\r\n\t\tvar sourceContext = tempRow, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tsourceContext = this.context.eval(tempRow, params);\r\n\t\t} else if (!(this.role === 'CONTEXT' || this.role === 'CALL_SPECIFIER')) {\r\n\t\t\tif (!tempRow.$) {\r\n\t\t\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t\t\t}\r\n\t\t\tsourceContext = tempRow.$;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name.toUpperCase(), args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, params = {}) {\r\n\t\tif (this.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.map(ref => ref.eval(tempRow, params))\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.eval(tempRow, params);\r\n\t\t}\r\n\t\treturn this.getEval(tempRow, params).get();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, ...args) {\r\n\t\treturn super.parse(expr, ...args);\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from './isArray.js';\r\nimport _isFunction from './isFunction.js';\r\nimport _arrLast from '../arr/last.js';\r\nimport _mergeCallback from '../obj/mergeCallback.js';\r\nimport getPrototypeChain from '../obj/getPrototypeChain.js';\r\nimport _each from '../obj/each.js';\r\n\r\n/**\r\n * A multi-inheritance implementstion.\r\n *\r\n * @param array\t \t...classes\r\n *\r\n * @return object\r\n */\r\nexport default function mixin(...classes) {\r\n\t\r\n\tvar Traps = {};\r\n\tvar RetrnDirective = 'last';\r\n\tif (_isArray(arguments[0])) {\r\n\t\tclasses = arguments[0];\r\n\t\tTraps = arguments[1];\r\n\t\tif (arguments[2]) {\r\n\t\t\tRetrnDirective = arguments[2];\r\n\t\t}\r\n\t}\r\n\t// -----------------------\r\n\tvar Base = _arrLast(classes);\r\n\tvar supersMap = {};\r\n\t// -----------------------\r\n\t// Create the Mixin\r\n\t// ...with a special constructor.\r\n\t// -----------------------\r\n\tvar Mixin = class {\r\n\t\tconstructor(...args) {\r\n\t\t\tvar _this = null;\r\n\t\t\tclasses.reverse().forEach((_class, i) => {\r\n\t\t\t\tvar __this = Reflect.construct(_class, args, this.constructor);\r\n\t\t\t\tif (_this) {\r\n\t\t\t\t\tObject.setPrototypeOf(__this, _this);\r\n\t\t\t\t}\r\n\t\t\t\t_this = __this;\r\n\t\t\t});\r\n\t\t\tObject.setPrototypeOf(this, _this);\r\n\t\t}\r\n\t};\r\n\t// -----------------------\r\n\t// Implement a special handler of the \"instanceof\" operator.\r\n\t// -----------------------\r\n\tvar WQSubclassesSymbolKey = Symbol.for('webqit/util/mixin');\r\n\tclasses.forEach((_class, i) => {\r\n\t\tgetPrototypeChain(_class).forEach(__class => {\r\n\t\t\tif (!__class[WQSubclassesSymbolKey]) {\r\n\t\t\t\tObject.defineProperty(__class, WQSubclassesSymbolKey, {value: []});\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar originalInstanceChecker = __class[Symbol.hasInstance].bind(__class);\r\n\t\t\t\t\tObject.defineProperty(__class, Symbol.hasInstance, {value: function(instance) {\r\n\t\t\t\t\t\tif (originalInstanceChecker(instance)) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn __class[WQSubclassesSymbolKey].reduce((yes, _mixin) => yes || (instance instanceof _mixin), false);\r\n\t\t\t\t\t}});\r\n\t\t\t\t} catch (e) {}\r\n\t\t\t}\r\n\t\t\t__class[WQSubclassesSymbolKey].push(Mixin);\r\n\t\t});\r\n\t});\r\n\t// ---------------------\r\n\t// Mixin both static and instance properties and methods\r\n\t// ---------------------\r\n\tclasses.forEach(_class => {\r\n\t\t// Copy const members\r\n\t\t_mergeCallback([Mixin, _class], (prop, obj1, obj2) => ![\r\n\t\t\t'name', 'prototype', 'prototypes', 'length', 'caller', 'callee', 'arguments', 'constructor', 'apply', \"bind\", 'call', 'toString',/**/\r\n\t\t].includes(prop), true/*deepProps*/);\r\n\t\t_mergeCallback([Mixin.prototype, _class.prototype], (prop, obj1, obj2) => {\r\n\t\t\tif (!['prototype', 'prototypes'].includes(prop)) {\r\n\t\t\t\tif (_isFunction(obj2[prop])) {\r\n\t\t\t\t\tif (_isArray(supersMap[prop])) {\r\n\t\t\t\t\t\tsupersMap[prop].push(obj2[prop]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsupersMap[prop] = [obj2[prop]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}, true/*deepProps*/);\r\n\t});\r\n\t// Extend (proxy) methods\r\n\t_each(supersMap, (prop, supers) => {\r\n\t\tif (prop === 'constructor') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// NOTE: this must not be defined as an arrow function\r\n\t\t// for the benefit of the \"this\".\r\n\t\tMixin.prototype[prop] = function(...args) {\r\n\t\t\tif (Object.hasOwnProperty(Traps, prop) && _isFunction(Traps[prop])) {\r\n\t\t\t\t// Wrap a call to the trap...\r\n\t\t\t\t// So mixin supers are passed to traps\r\n\t\t\t\treturn Traps[prop].call(this, supers, ...args);\r\n\t\t\t} else {\r\n\t\t\t\t// Call each super and return\r\n\t\t\t\t// the last one's return value\r\n\t\t\t\tvar supersReturnValues = [];\r\n\t\t\t\tsupers.forEach(supr => {\r\n\t\t\t\t\tsupersReturnValues.push(supr.call(this, ...args));\r\n\t\t\t\t})\r\n\t\t\t\treturn _arrLast(supersReturnValues);\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn Mixin;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Finds a value in an array/object and returns the key (or path when found deep).\r\n *\r\n * @param array}object \tobj\r\n * @param function\t\tcallback\r\n * @param bool\t\t\tdeep\r\n *\r\n * @return number|string|array\r\n */\r\nconst _find = function(obj, callback, deep = false) {\r\n\tvar keys = null;\r\n\tvar values = obj;\r\n\tif (!_isArray(obj)) {\r\n\t\tkeys = Object.keys(obj);\r\n\t\tvalues = Object.values(obj);\r\n\t}\r\n\tvar subKey = undefined;\r\n\tvar value = values.reduce((prev, curr) => {\r\n\t\tif (subKey === undefined) {\r\n\t\t\tif (callback(curr, prev)) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t\tif (deep && (_isTypeObject(curr) || _isFunction(curr)) && (subKey = _find(curr, callback, deep)) !== undefined) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn prev;\r\n\t}, undefined);\r\n\tif (value !== undefined) {\r\n\t\tvar key = keys ? keys[values.indexOf(value)] : values.indexOf(value);\r\n\t\treturn subKey !== undefined ? [key].concat(_arrFrom(subKey)) : key;\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _find;","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AggrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AggregateExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects into first array/object but only when not set;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (key, obj1, obj2) => {\r\n\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\tif (obj1.indexOf(obj2[key]) === -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else if (!(key in obj1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * WindowInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'WindowConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * OrderByInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'OrderByExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _sort from '@webqit/util/arr/sort.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _beforeLast from '@webqit/util/str/beforeLast.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport OrderByInterface from './OrderByInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * OrderBy class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class OrderBy extends OrderByInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(columns, withRollup = false) {\r\n\t\tsuper();\r\n\t\tthis.columns = columns;\r\n\t\tthis.withRollup = withRollup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, params = {}) {\r\n\t\tvar order = (rows, by) => {\r\n\t\t\t// Drilldown...\r\n\t\t\tvar grouping = {};\r\n\t\t\trows.forEach(row => {\r\n\t\t\t\tvar _for = by[0].expr.eval(row, params);\r\n\t\t\t\tgrouping[_for] = grouping[_for] || [];\r\n\t\t\t\tgrouping[_for].push(row);\r\n\t\t\t});\r\n\t\t\t// Get esults flattened\r\n\t\t\tvar result = [];\r\n\t\t\t_sort(Object.keys(grouping), by[0].order).forEach(_for => {\r\n\t\t\t\tresult = result.concat(by.length > 1 ? order(grouping[_for], by.slice(1)) : grouping[_for]);\r\n\t\t\t});\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\treturn order(tempRows, this.columns);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [this.columns.map(\r\n\t\t\tc => c.expr.stringify(params) + (c.order ? ' ' + c.order : '')\r\n\t\t).join(', ')];\r\n\t\tif (this.withRollup) {\r\n\t\t\tstr.push('WITH ROLLUP');\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar columns = [];\r\n\t\tvar withRollup = false;\r\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP'], {useRegex:'i'});\r\n\t\tcolumns = Lexer.split(parse.tokens.shift().trim(), [',']).map(c => {\r\n\t\t\tvar order = c.match(/ASC|DESC/, 'i');\r\n\t\t\tif (order) {\r\n\t\t\t\torder = order[0];\r\n\t\t\t\tc = _beforeLast(c, order).trim();\r\n\t\t\t}\r\n\t\t\treturn {expr:parseCallback(c), order:order};\r\n\t\t});\r\n\t\tif (parse.matches.length === 1) {\r\n\t\t\twithRollup = true;\r\n\t\t}\r\n\t\treturn new this(columns, withRollup);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Sorts a list performantly.\r\n *\r\n * @param array\t \t\t\t\t\tarr\r\n * @param string\t \t\t\t\torder\t\t\tASC|DESC \r\n * @param function\t\t\t\t\tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, order, callback = null) {\r\n\tvar _arr = [];\r\n\t// Make a shallow copy\r\n\tvar length = arr.length;\r\n\tfor (var i = 0; i < length; i ++) {\r\n\t\t_arr.push({index: i, value: callback ? callback(arr[i]) : arr[i]});\r\n\t};\r\n\t_arr.sort(function(a, b) {\r\n\t\t// Using localeCompare if possible\r\n\t\tif (_isString(a.value) && \"\".localeCompare) {\r\n\t\t\treturn a.value.localeCompare(b.value);\r\n\t\t};\r\n\t\treturn a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\r\n\t});\r\n\tif ((order || '').trim().toLowerCase() === 'desc') {\r\n\t\t_arr = _arr.reverse();\r\n\t};\r\n\t// Fill the order with actual values\r\n\treturn _arr.map(itm => arr[itm.index]);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _inherit from '@webqit/util/obj/inherit.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport WindowInterface from './WindowInterface.js';\r\nimport OrderBy from './OrderBy.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Window class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Window extends WindowInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(dfn) {\r\n\t\tsuper();\r\n\t\tthis.dfn = dfn;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, definitions = {}, params = {}) {\r\n\t\tvar dfn = this.dfn;\r\n\t\tvar uuid = this.stringify();\r\n\t\tif (this.dfn.name) {\r\n\t\t\tif (!definitions || !definitions[this.dfn.name]) {\r\n\t\t\t\tthrow new Error('Window name \"' + this.dfn.name + '\" is undefined!');\r\n\t\t\t}\r\n\t\t\tdfn = _inherit({}, this.dfn, definitions[this.dfn.name]);\r\n\t\t}\r\n\t\tvar exec = (rows, partitionBy) => {\r\n\t\t\tif (partitionBy.length) {\r\n\t\t\t\t// Drilldown...\r\n\t\t\t\tvar partitioning = {};\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tvar _for = partitionBy[0].eval(row, params);\r\n\t\t\t\t\tpartitioning[_for] = partitioning[_for] || [];\r\n\t\t\t\t\tpartitioning[_for].push(row);\r\n\t\t\t\t});\r\n\t\t\t\tObject.values(partitioning).map(partition => exec(partition, partitionBy.slice(1)));\r\n\t\t\t} else {\r\n\t\t\t\tif (dfn.orderBy) {\r\n\t\t\t\t\trows = dfn.orderBy.eval(rows, params);\r\n\t\t\t\t}\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tif (!row.WINDOWS) {\r\n\t\t\t\t\t\trow.WINDOWS = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\trow.WINDOWS[uuid] = rows;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\ttry {\r\n\t\t\texec(tempRows, dfn.partitionBy || []);\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.stringify() + '\" in window definition]: ' + e.message);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar length = Object.keys(this.dfn).length;\r\n\t\tif (length === 1 && this.dfn.name) {\r\n\t\t\treturn this.dfn.name;\r\n\t\t}\r\n\t\tvar str = [this.dfn.name];\r\n\t\tif (this.dfn.partitionBy) {\r\n\t\t\tstr.push('PARTITION BY ' + this.dfn.partitionBy.map(expr => expr.stringify(params)).join(', '));\r\n\t\t}\r\n\t\tif (this.dfn.orderBy) {\r\n\t\t\tstr.push('ORDER BY ' + this.dfn.orderBy.stringify(params));\r\n\t\t}\r\n\t\treturn '(' + str.filter(a => a).join(' ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar dfn = {};\r\n\t\tif (_wrapped(expr, '(', ')')) {\r\n\t\t\tif (expr = _unwrap(expr, '(', ')')) {\r\n\t\t\t\tvar parse = Lexer.lex(expr, ['PARTITION[ ]+BY', 'ORDER[ ]+BY'], {useRegex:'i'});\r\n\t\t\t\tdfn.name = parse.tokens.shift().trim();\r\n\t\t\t\tparse.matches.forEach(clauseType => {\r\n\t\t\t\t\tif (clauseType.toLowerCase().startsWith('partition')) {\r\n\t\t\t\t\t\tdfn.partitionBy = Lexer.split(parse.tokens.shift().trim(), [','])\r\n\t\t\t\t\t\t\t.map(expr => parseCallback(expr));\r\n\t\t\t\t\t} else if (clauseType.toLowerCase().startsWith('order')) {\r\n\t\t\t\t\t\tdfn.orderBy = parseCallback(parse.tokens.shift().trim(), [OrderBy]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdfn.name = expr;\r\n\t\t}\r\n\t\treturn new this(dfn);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { Call } from '@webqit/subscript/src/grammar.js';\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _find from '@webqit/util/obj/find.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AggrInterface from './AggrInterface.js';\r\nimport Window from './Window.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Aggr class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Aggr extends _mixin(Call, AggrInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context, params = {}) {\r\n\t\tvar args = this.args.list.slice();\r\n\t\targs.unshift(this.window ? context.WINDOWS[this.window.stringify()] : context.AGGR.rows, this.aggrFlag);\r\n\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = super.stringify(params);\r\n\t\tif (this.aggrFlag) {\r\n\t\t\tstr = str.replace('(', '(' + this.aggrFlag + ' ');\r\n\t\t}\r\n\t\treturn str + (this.window ? ' OVER ' + this.window.stringify(params) : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar aggrMatch, funcFlagMatch, aggrFlag = '';\r\n\t\tvar aggrMatchRegex = _flatten(this.funcs).join(\"\\\\(|\") + \"\\\\(\";\r\n\t\tif (aggrMatch = expr.trim().match(new RegExp('^(' + aggrMatchRegex + ')', 'i'))) {\r\n\t\t\tvar funcName = _before(aggrMatch[0], '(').toUpperCase();\r\n\t\t\tvar funcFlagStart = _after(expr, funcName + '(');\r\n\t\t\tif (funcFlagMatch = funcFlagStart.match(new RegExp('^(([ ]+)?' + ['ALL', 'DISTINCT'].join('[ ]+|([ ]+)?') + '[ ]+)', 'i'))) {\r\n\t\t\t\taggrFlag = funcFlagMatch[0];\r\n\t\t\t\texpr = expr.replace(aggrFlag, '');\r\n\t\t\t}\r\n\t\t\tvar funcCategory = _find(this.funcs, val => val === funcName, true)[0];\r\n\t\t\tvar splits = Lexer.split(expr, ['OVER'], {ci:true});\r\n\t\t\tif (funcCategory === 'explicitOver' && splits.length === 1) {\r\n\t\t\t\tthrow new Error(aggrMatch[0] + '() requires an OVER clause!');\r\n\t\t\t}\r\n\t\t\tvar instance = super.parse(splits.shift().trim(), parseCallback, params);\r\n\t\t\tinstance.funcCategory = funcCategory;\r\n\t\t\tinstance.aggrFlag = aggrFlag.trim();\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tinstance.window = parseCallback(splits.pop().trim(), [Window]);\r\n\t\t\t}\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAggr.funcs = {\r\n\tnormal: [\r\n\t\t'AVG', \r\n\t\t'BIT_AND', \r\n\t\t'BIT_OR', \r\n\t\t'BIT_XOR', \r\n\t\t'COUNT', \r\n\t\t'JSON_ARRAYAGG', \r\n\t\t'JSON_OBJECTAGG', \r\n\t\t'MAX', \r\n\t\t'MIN',\r\n\t\t'STDDEV_POP',\r\n\t\t'STDDEV',\r\n\t\t'STD',\r\n\t\t'STDDEV_SAMP',\r\n\t\t'SUM',\r\n\t\t'VAR_POP',\r\n\t\t'VARIANCE',\r\n\t\t'VAR_SAMP',\r\n\t\t// May not apply to OVER()\r\n\t\t'GROUP_CONCAT',\r\n\t\t'GROUP_CONCAT_WS',\r\n\t],\r\n\texplicitOver: [\r\n\t\t'CUME_DIST', \r\n\t\t'DENSE_RANK', \r\n\t\t'FIRST_VALUE', \r\n\t\t'LAG', \r\n\t\t'LAST_VALUE', \r\n\t\t'LEAD', \r\n\t\t'NTH_VALUE', \r\n\t\t'NTLE',\r\n\t\t'PERCENT_RANK',\r\n\t\t'RANK',\r\n\t\t'ROW_NUMBER',\r\n\t],\r\n\tsupport: [\r\n\t\t'ANY_VALUE', \r\n\t\t'COLUMN', \r\n\t\t'COLUMNS', \r\n\t\t'GROUPING', \r\n\t],\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _arrFirst from '../arr/first.js';\r\n\r\n/**\r\n * Returns the FIRST ENTRY.\r\n *\r\n * @param array|object \tobj\r\n *\r\n * @return mixed\r\n */\r\nexport default function(obj) {\r\n\treturn _isArray(obj) ? _arrFirst(obj) : obj[Object.keys(obj)[0]];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Reference from './Reference.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AggrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends Reference {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrowReferenceExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _objFirst from '@webqit/util/obj/first.js';\r\nimport ArrowReferenceInterface from './ArrowReferenceInterface.js';\r\nimport { factoryGetSchema } from '../database/_Factory.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrowReference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class ArrowReference extends ArrowReferenceInterface {\r\n\r\n\t/**\r\n\t * Gets the immediate target in a reference path.\r\n\t * \r\n\t * @param {Object} schema1\r\n\t * @param {Object} DB_FACTORY\r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n\tprocess(schema1, DB_FACTORY = null) {\r\n\t\tvar reference = this.interpreted ? this.interpreted.toString() : this.toString();\r\n\t\treturn ArrowReference.process(schema1, reference.replace(/`/g, ''), DB_FACTORY);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (this.isReference(expr)) {\r\n\t\t\tvar parse = super.parse(expr, parseCallback, params);\r\n\t\t\tif (parse)\r\n\t\t\tparse.backticks = true;\r\n\t\t\treturn parse;\r\n\t\t}\r\n\t}\r\n\r\n\t// ------------------------\r\n\r\n\t/**\r\n\t * Tells if a column is a reference.\r\n\t *\r\n\t * @param {String} str\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isReference(str) {\r\n\t\treturn str.indexOf(this.arrLeft) > -1 || str.indexOf(this.arrRight) > -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tells if a path is an outgoing reference in direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isOutgoing(reference) {\r\n\t\treturn reference.indexOf(this.arrRight) > -1 && _before(reference, this.arrRight).indexOf(this.arrLeft) === -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tells if a path is an incoming reference in direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isIncoming(reference) {\r\n\t\treturn reference.indexOf(this.arrLeft) > -1 && _before(reference, this.arrLeft).indexOf(this.arrRight) === -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the relationshipPath in reverse direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tstatic reverse(reference) {\r\n\t\treturn reference.replace(new RegExp(this.arrRight, 'g'), '|' + this.arrRight + '|').replace(new RegExp(this.arrLeft, 'g'), '|' + this.arrLeft + '|')\r\n\t\t\t.split('|').map(str => str === this.arrRight ? this.arrLeft : (str === this.arrLeft ? this.arrRight : str)).reverse().join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the immediate target in a reference path.\r\n\t * \r\n\t * @param {Object} schema1 \r\n\t * @param {String} reference \r\n\t * @param {Object} DB_FACTORY \r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n    static process(schema1, reference, DB_FACTORY = null) {\r\n\t\tvar schema2,\r\n\t\t\tSCHEMAS = factoryGetSchema(DB_FACTORY, schema1 ? schema1.databaseName : null) || {fields: {}};\r\n\t\tif (this.isIncoming(reference)) {\r\n\t\t\t// reference === actingKey<-...\r\n\t\t\tvar actingKey = _before(reference, this.arrLeft),\r\n\t\t\t\tsourceTable = _after(reference, this.arrLeft);\r\n\t\t\tif (actingKey.indexOf('.') > 0) {\r\n\t\t\t\tif (!schema1) {\r\n\t\t\t\t\t// schema1 that's explicitly given takes precedence\r\n\t\t\t\t\t// as the \"context\" given in reference might be only an alias\r\n\t\t\t\t\tschema1 = SCHEMAS[_before(actingKey, '.')];\r\n\t\t\t\t}\r\n\t\t\t\tactingKey = _after(actingKey, '.');\r\n\t\t\t}\r\n\t\t\t// --------------------------\r\n\t\t\tif (this.isIncoming(sourceTable)) {\r\n\t\t\t\t// reference === actingKey<-actingKey2<-table->?...\r\n\t\t\t\tschema2 = this.process(null, sourceTable/* as new reference */, DB_FACTORY).a.table;\r\n\t\t\t\tvar select = sourceTable;\r\n\t\t\t} else {\r\n\t\t\t\t// reference === actingKey<-table->?...\r\n\t\t\t\tvar _sourceTable = _before(sourceTable, this.arrRight)\r\n\t\t\t\t\tselect = _after(sourceTable, this.arrRight);\r\n\t\t\t\tif (!(schema2 = SCHEMAS[_sourceTable])) {\r\n\t\t\t\t\tthrow new Error('[' + reference + ']: The implied table \"' + _sourceTable + '\" is not defined.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!schema1) {\r\n\t\t\t\t// --------------------------\r\n\t\t\t\t// Now get schema1 from schema2\r\n\t\t\t\t// --------------------------\r\n\t\t\t\tvar referencedEntity;\r\n\t\t\t\tif (!schema2.fields[actingKey] || !(referencedEntity = schema2.fields[actingKey].referencedEntity)) {\r\n\t\t\t\t\tthrow new Error('[' + reference + ']: The \"' + schema2.name + '\" table does not define the implied foreign key \"' + actingKey + '\".');\r\n\t\t\t\t}\r\n\t\t\t\tschema1 = SCHEMAS[referencedEntity.name];\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ta: {table: schema1, actingKey: schema1.primaryKey,},\r\n\t\t\t\tb: {table: schema2, actingKey, select,},\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// --------------------------\r\n\t\t// reference === foreignKey->...\r\n\t\t// --------------------------\r\n\t\tvar foreignKey = _before(reference, this.arrRight)\r\n\t\t\tselect = _after(reference, this.arrRight);\r\n\t\tif (foreignKey.indexOf('.') > 0) {\r\n\t\t\tif (!schema1) {\r\n\t\t\t\t// schema1 that's explicitly given takes precedence\r\n\t\t\t\t// as the \"context\" given in reference might be only an alias\r\n\t\t\t\tschema1 = SCHEMAS[_before(foreignKey, '.')];\r\n\t\t\t}\r\n\t\t\tforeignKey = _after(foreignKey, '.');\r\n\t\t} else {\r\n\t\t\tschema1 = _objFirst(SCHEMAS);\r\n\t\t}\r\n\t\t// --------------------------\r\n\t\t// Now get schema2 from schema1\r\n\t\t// --------------------------\r\n\t\tvar referencedEntity;\r\n\t\tif (!schema1.fields[foreignKey] || !(referencedEntity = schema1.fields[foreignKey].referencedEntity)) {\r\n\t\t\tthrow new Error('[' + schema1.name + this.arrRight + reference + ']: The \"' + schema1.name + '\" table does not define the implied foreign key \"' + foreignKey + '\".');\r\n\t\t}\r\n\t\tschema2 = SCHEMAS[referencedEntity.name];\r\n\t\treturn {\r\n\t\t\ta: {table: schema1, actingKey: foreignKey,},\r\n\t\t\tb: {table: schema2, actingKey: schema2.primaryKey, select,},\r\n\t\t};\r\n\t}\r\n};\r\n\r\n/**\r\n * @var string\r\n */\r\nArrowReference.arrRight = '~>';\r\nArrowReference.arrLeft = '<~';","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeleteInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Literal'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport LiteralInterface from './LiteralInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Literal class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Literal extends LiteralInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback = null, params = {}) {\r\n\t\treturn new this(expr);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * TableInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TableExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _Cursor from './_Cursor.js';\r\nimport _Store from './_Store.js';\r\n\r\n/**\r\n * ---------------------------\r\n * View class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class View extends _Store {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmt, store, name, schema = {}, params = {}) {\r\n\t\tsuper(store, name, schema, params);\r\n\t\tthis.stmt = stmt;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t * \r\n\t * @return Cursor\r\n\t */\r\n\tgetCursor() {\r\n\t\treturn new _Cursor((this.store || []).filter(row => row));\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs cursors at the base.\r\n\t * \r\n\t * @param Cursor cursor\r\n\t * \r\n\t * @return Number\r\n\t */\r\n\tasync syncCursor(cursor) {\r\n\t\treturn this.stmt.base.syncCursors();\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAbstraction,\r\n\tAbstractionInterface,\r\n\tReferenceInterface,\r\n} from '../grammar.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _promise from '@webqit/util/js/promise.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _objFirst from '@webqit/util/obj/first.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport LiteralInterface from '../grammar/LiteralInterface.js';\r\nimport Literal from '../grammar/Literal.js';\r\nimport TableInterface from './TableInterface.js';\r\nimport View from '../database/View.js';\r\nimport _Factory, { factoryGetSchema } from '../database/_Factory.js';\r\nimport _Database from '../database/_Database.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Table class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Table extends TableInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, alias, claused = false, schema = null) {\r\n\t\tsuper();\r\n\t\t// LiteralInterface or AbstractionInterface\r\n\t\tthis.expr = expr;\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = claused;\r\n\t\tthis.schema = schema;\r\n\t\tthis.associatedReferences = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * --------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tas(alias) {\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = true;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetDatabaseName() {\r\n\t\treturn (this.expr + \"\").split('.').slice(0, -1)[0] || '';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\t// Ask down the line?\r\n\t\tif (this.isDerivedQuery()) {\r\n\t\t\treturn _arrFrom(this.getDerivedQuery().getTable(), false)[0].getName();\r\n\t\t}\r\n\t\t// Without backticks\r\n\t\treturn (this.expr + \"\").split('.').pop();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn this.alias || this.getName();\r\n\t}\r\n\r\n\t/**\r\n\t * Tells if this is a derived query\r\n\t * \r\n\t * @return Bool\r\n\t */\r\n\tisDerivedQuery() {\r\n\t\treturn this.expr instanceof AbstractionInterface;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the derived query\r\n\t * \r\n\t * @return Bool\r\n\t */\r\n\tgetDerivedQuery() {\r\n\t\treturn this.expr/*ABS*/.expr/*SELECT*/;\r\n\t}\r\n\r\n\t/**\r\n\t * Associates a Reference\r\n\t * \r\n\t * @param Object reference\r\n\t * \r\n\t * @return void\r\n\t */\r\n\tassociateReference(reference) {\r\n\t\treturn this.associatedReferences.push(reference);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the associated References\r\n\t * \r\n\t * @return Array\r\n\t */\r\n\tgetAssociateReferences() {\r\n\t\treturn this.associatedReferences;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetSchema() {\r\n\t\tif (!this.schema && this.isDerivedQuery()) {\r\n\t\t\tvar derivedName = this.getAlias();\r\n\t\t\tvar derivedQuery = this.getDerivedQuery();\r\n\t\t\tvar derivedQuerySources = derivedQuery.getSources(true/* resolve */);\r\n\t\t\tvar getAliasOfField = fieldName => derivedQuery.getFields().reduce((alias, field) => alias || (fieldName === field.getName() ? field.getAlias() : null), null);\r\n\t\t\t// ---------------------\r\n\t\t\t// Sources schemas\r\n\t\t\tvar ALL_SCHEMAS = {};\r\n\t\t\tderivedQuerySources.forEach(source => {\r\n\t\t\t\tALL_SCHEMAS[source.getAlias()] = source.getSchema();\r\n\t\t\t});\r\n\t\t\tvar MAIN_SCHEMA = _objFirst(ALL_SCHEMAS);\r\n\t\t\t// ---------------------\r\n\t\t\t// Fields schemas\r\n\t\t\tvar derivedSchema = { name: derivedName, fields: {}, uniqueKeys: {}, derived: true, };\r\n\t\t\tderivedQuery.getFields().forEach(field => {\r\n\t\t\t\tif (field.expr instanceof ReferenceInterface) {\r\n\t\t\t\t\tif (field.getName() === '*') {\r\n\t\t\t\t\t\tfield.expr.interpreted.forEach(ref => {\r\n\t\t\t\t\t\t\tderivedSchema.fields[ref.name] = ((ALL_SCHEMAS[ref.context.name] || {}).fields || {})[name] || {type: 'any', derived: true};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar name = field.getName(), context = field.getContextName();\r\n\t\t\t\t\t\tderivedSchema.fields[field.getAlias()] = (((context ? ALL_SCHEMAS[context] : MAIN_SCHEMA) || {}).fields || {})[name] || {type: 'any', derived: true};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tderivedSchema.fields[field.getAlias()] = {type: 'any', derived: true};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// ---------------------\r\n\t\t\t// PRIMARY KEY\r\n\t\t\tderivedSchema.primaryKey = _isArray(MAIN_SCHEMA.primaryKey) \r\n\t\t\t\t? MAIN_SCHEMA.primaryKey.map(fieldName => getAliasOfField(fieldName))\r\n\t\t\t\t: getAliasOfField(MAIN_SCHEMA.primaryKey);\r\n\t\t\tderivedSchema.autoIncrement = MAIN_SCHEMA.autoIncrement;\r\n\t\t\tif (_isEmpty(derivedSchema.primaryKey)) {\r\n\t\t\t\tdelete derivedSchema.primaryKey;\r\n\t\t\t\tdelete derivedSchema.autoIncrement;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// RUNTIME UNIQUE\r\n\t\t\t_each(MAIN_SCHEMA.uniqueKeys || {}, (name, keyPath) => {\r\n\t\t\t\tvar keyPathAliased = _arrFrom(keyPath).map(fieldName => getAliasOfField(fieldName));\r\n\t\t\t\tderivedSchema.uniqueKeys[name] = !_isArray(keyPath) ? keyPathAliased[0] : keyPathAliased;\r\n\t\t\t\tif (_isEmpty(derivedSchema.uniqueKeys[name])) {\r\n\t\t\t\t\tdelete derivedSchema.uniqueKeys[name];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// ---------------------\r\n\t\t\t// ENGINE\r\n\t\t\tderivedSchema.driver = MAIN_SCHEMA.driver;\r\n\r\n\t\t\t// Cache\r\n\t\t\tthis.schema = derivedSchema;\r\n\t\t}\r\n\r\n\t\treturn this.schema;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(DB_FACTORY = null, params = {}) {\r\n\r\n\t\tif (this.interpreted) {\r\n\t\t\treturn this.interpreted.eval(DB_FACTORY, params);\r\n\t\t}\r\n\r\n\t\t// --------------------------\r\n\r\n\t\tif (!DB_FACTORY) {\r\n\t\t\tthrow new Error('Context must be provided!');\r\n\t\t}\r\n\r\n\t\t// --------------------------\r\n\r\n\t\t// Derived table???\r\n\t\tif (this.isDerivedQuery()) {\r\n\r\n\t\t\tvar derivedName = this.getAlias(),\r\n\t\t\t\tderivedQuery = this.getDerivedQuery(),\r\n\t\t\t\tderivedSchema = this.getSchema(DB_FACTORY);\r\n\t\t\treturn derivedQuery.eval(DB_FACTORY, params).then(derivedStore => {\r\n\t\t\t\tvar _params = {...params};\r\n\t\t\t\t_params.alias = derivedName;\r\n\t\t\t\treturn new View(derivedQuery, derivedStore, derivedName, derivedSchema, _params);\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve().then(() => {\r\n\t\t\tvar databaseName = this.getDatabaseName();\r\n\t\t\tif (DB_FACTORY.prototype instanceof _Factory) {\r\n\t\t\t\treturn databaseName ? DB_FACTORY.open(databaseName) : DB_FACTORY.open();\r\n\t\t\t}\r\n\t\t\tif (databaseName) {\r\n\t\t\t\tthrow new Error('[' + this.expr + ']: For tables that are fully-qualified with a database name, a database factory must be provided as context.');\r\n\t\t\t}\r\n\t\t\treturn DB_FACTORY;\r\n\t\t}).then(database => {\r\n\t\t\tif (!(database instanceof _Database)) {\r\n\t\t\t\tthrow new Error('[' + this.expr + ']: The provided context could not be resolved to a valid database instance.');\r\n\t\t\t}\r\n\t\t\treturn database.open(this.getName(), params.mode, {alias: this.getAlias()});\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\t// --------------------------\r\n\t\tif (this.interpreted && params.interpreted) {\r\n\t\t\treturn this.interpreted.stringify(params);\r\n\t\t}\r\n\t\t// --------------------------\r\n\t\treturn [this.expr.stringify(params), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, [' (as )?'], {useRegex:'i'});\r\n\t\tif (parse.tokens.length < 3) {\r\n\t\t\tvar SCHEMA;\r\n\t\t\tvar tableParse = parseCallback(parse.tokens[0], [Abstraction, Literal]);\r\n\t\t\tvar alias = (parse.tokens[1] || '').trim(), \r\n\t\t\t\tclaused = (parse.matches[0] || '').trim();\r\n\r\n\t\t\t// -------------------\r\n\t\t\t// OBTAIN OR CREATE TABLE SCHEMA\r\n\t\t\t// -------------------\r\n\r\n\t\t\tif (tableParse instanceof LiteralInterface) {\r\n\t\t\t\tvar DB_SCHEMA = {},\r\n\t\t\t\t\tfullTableName = tableParse.toString().split('.'),\r\n\t\t\t\t\ttableName = fullTableName.pop(),\r\n\t\t\t\t\tdatabaseName = fullTableName.pop();\r\n\t\t\t\t\tDB_SCHEMA = factoryGetSchema(params.DB_FACTORY, databaseName);\r\n\t\t\t\t// -----------\r\n\t\t\t\tif (DB_SCHEMA && DB_SCHEMA[tableName]) {\r\n\t\t\t\t\tSCHEMA = DB_SCHEMA[tableName];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (params.validation !== false && params.assertTableValidity !== false) {\r\n\t\t\t\t\t\t// Throw \"Table unknown!\"\r\n\t\t\t\t\t\tthrow new Error('Unknown table: ' + tableName + '.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tSCHEMA = { name: tableName, fields: {}, derived: true, };\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!alias) {\r\n\t\t\t\t\tthrow new Error('Derived tables must be aliased.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new this(tableParse, alias, claused, SCHEMA);\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * Sums an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((total, v) => total + v, arr.shift());\r\n};\r\n","\r\n/**\r\n * Gets the maximum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.max(v1, v2), arr.shift());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _avg from '@webqit/util/arr/avg.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _max from '@webqit/util/arr/max.js';\r\nimport _min from '@webqit/util/arr/min.js';\r\nimport _sum from '@webqit/util/arr/sum.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _rand from '@webqit/util/arr/rand.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _get from '@webqit/util/obj/get.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Row class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Row {\r\n\t\r\n\tconstructor(params) {\r\n\t\tObject.defineProperty(this, '.params', {value: params});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCONCAT(...args) {\r\n\t\treturn args.join('');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCONCAT_WS(...args) {\r\n\t\treturn args.join(args.shift());\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOALESCE(...args) {\r\n\t\treturn args.reduce((prev, next) => !_isNull(prev) ? prev : next, null);\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tFIND_IN_SET(substr, str) {\r\n\t\treturn str.indexOf(substr);\r\n\t}\r\n\t\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tISNULL(val) {\r\n\t\treturn _isNull(val);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * ----------------\r\n\t * AGGREGATE FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOUNT(rows, flag, column) {\r\n\t\tif (column.stringify() === '*') {\r\n\t\t\t// NULLs accepted\r\n\t\t\treturn rows.length;\r\n\t\t}\r\n\t\treturn this.COLUMN(rows, flag, column).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUP_CONCAT(rows, flag, column) {\r\n\t\treturn this.COLUMN(rows, flag, column).join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUP_CONCAT_WS(rows, flag, separator, column) {\r\n\t\treturn this.COLUMN(rows, flag, column).join(separator.eval(this, this['.params']));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tAVG(rows, flag, column) {\r\n\t\treturn _avg(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tMAX(rows, flag, column) {\r\n\t\treturn _max(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tMIN(rows, flag, column) {\r\n\t\treturn _min(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tSUM(rows, flag, column) {\r\n\t\treturn _sum(this.COLUMN(rows, flag, column));\r\n\t}\r\n\r\n\t/**\r\n\t * ----------------\r\n\t * AGGREGATE SUPPORT FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tFIRST(rows, flag, column) {\r\n\t\t// NULLs accepted\r\n\t\treturn column.eval(_first(rows) || {}, this['.params']);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tLAST(rows, flag, column) {\r\n\t\t// NULLs accepted\r\n\t\treturn column.eval(_last(rows) || {}, this['.params']);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tANY_VALUE(rows, flag, column) {\r\n\t\treturn _rand(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUPING(rows, flag, ...onColumns) {\r\n\t\tif (!this.AGGR || !this.AGGR.isRollup) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn onColumns.reduce((cum, column, i) => {\r\n\t\t\tvar match = this.AGGR.by.filter(by => {\r\n\t\t\t\tvar byStr = by.stringify();\r\n\t\t\t\tvar columnStr = column.stringify();\r\n\t\t\t\tif (columnStr.indexOf('.') === -1 && byStr.indexOf('.') > -1) {\r\n\t\t\t\t\tbyStr = _after(byStr, '.');\r\n\t\t\t\t}\r\n\t\t\t\treturn columnStr === byStr;\r\n\t\t\t});\r\n\t\t\treturn match.length ? i + 1 : cum;\r\n\t\t}, 0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOLUMN(rows, flag, arg) {\r\n\t\tvar result = rows.map(row => arg.eval(row, this['.params']));\r\n\t\t// COALESCE?\r\n\t\tif (_isArray(result[0])) {\r\n\t\t\tvar width = result[0].length;\r\n\t\t\tresult = result.filter(values => {\r\n\t\t\t\tif (!_isArray(values) || values.length !== width) {\r\n\t\t\t\t\tthrow new Error('Aggregate column list not even!');\r\n\t\t\t\t}\r\n\t\t\t\treturn values.reduce((_v, v) => !_isNull(_v) ? _v : v, null);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// NO NULLS!\r\n\t\tresult = result.filter(v => !_isNull(v));\r\n\t\t// DISTINCT?\r\n\t\tif (flag.toUpperCase() === 'DISTINCT') {\r\n\t\t\tresult = _unique(result);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOLUMNS(rows, flag, args) {\r\n\t\treturn args.map(arg => this.COLUMN(rows, flag, arg));\r\n\t}\r\n\t\r\n\t/**\r\n\t * ----------------\r\n\t * JSON FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_EXTRACT(doc, path) {\r\n\t\treturn _get(JSON.parse(doc), path.split('.').slice(1));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_OBJECT(name, value) {\r\n\t\treturn _objFrom(name, value);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_MERGE(doc1, doc2) {\r\n\t\treturn _merge(JSON.parse(doc1), JSON.parse(doc2));\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _sum from './sum.js';\r\n\r\n/**\r\n * Gets the average of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\treturn arr.length ? _sum(arr) / arr.length : 0;\r\n};","\r\n/**\r\n * Gets the minimum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.min(v1, v2), arr.shift());\r\n};\r\n","\r\n/**\r\n * Gets one or more random values from an array.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar result = [];\r\n\tvar rand = null;\r\n\twhile (result.length < amount && (rand = arr[Math.floor(Math.random() * arr.length)]) && result.indexOf(rand) === -1) {\r\n\t\tresult.push(rand);\r\n\t};\r\n\treturn arguments.length > 1 ? result : result[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport Row from './Row.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Base class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Base {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(main, joins, where, params) {\r\n\t\t// -------------------------\r\n\t\tthis.main = main;\r\n\t\tthis.joins = joins;\r\n\t\t// -------------------------\r\n\t\tthis.mainCursor = main.then(m => m.getCursor());\r\n\t\tthis.joinCursors = joins.map(join => join.then(j => j.getCursor()));\r\n\t\t// -------------------------\r\n\t\tthis.where = where;\r\n\t\tthis.params = params;\r\n\t\t// -------------------------\r\n\t\tthis._onfinish = [];\r\n\t\tPromise.all(this.joinCursors).then(joinCursors => {\r\n\t\t\t// Advcance joins sequentially...\r\n\t\t\tvar lastJoinCursor = joinCursors.reduce((prevCursor, currentCursor) => {\r\n\t\t\t\tif (prevCursor) {\r\n\t\t\t\t\tprevCursor.onfinish(currentCursor.next.bind(currentCursor));\r\n\t\t\t\t}\r\n\t\t\t\treturn currentCursor;\r\n\t\t\t}, null);\r\n\t\t\tthis.mainCursor.then(mainCursor => {\r\n\t\t\t\t// Last join cursor should advance main cursor\r\n\t\t\t\tif (lastJoinCursor) {\r\n\t\t\t\t\tlastJoinCursor.onfinish(mainCursor.next.bind(mainCursor));\r\n\t\t\t\t}\r\n\t\t\t\t// Fire onfinish event from main cursor\r\n\t\t\t\tmainCursor.onfinish(() => {\r\n\t\t\t\t\tthis.eof = true;\r\n\t\t\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync fetch() {\r\n\t\tif (this.eof) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar rowComposition, rowCompositionRejection;\r\n\t\t// -----------\r\n\t\tlet __main = await this.main,\r\n\t\t\t__mainCursor = await this.mainCursor,\r\n\t\t\t__mainFetch = await __mainCursor.fetch(),\r\n\t\t\t__mainAlias = __main.params.alias || __main.name;\r\n\t\t// -----------\r\n\t\tlet __joins = await Promise.all(this.joins),\r\n\t\t\t__joinCursors = await Promise.all(this.joinCursors);\r\n\t\t// -----------\r\n\t\tlet joinFetches = __joinCursors.map(async (__joinCursor, i) => {\r\n\t\t\t\tif (rowCompositionRejection) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar __joinFetch = await __joinCursor.fetch(),\r\n\t\t\t\t\t__joinAlias = __joins[i].params.alias || __joins[i].name;\r\n\t\t\t\tif (!__joins[i].join || __joins[i].join.type === 'full') {\r\n\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\r\n\t\t\t\t\treturn __joinFetch;\r\n\t\t\t\t} else if (__joins[i].join.conditionClause.trim().toLowerCase() === 'using') {\r\n\t\t\t\t\t// Join using \"column name\"...\r\n\t\t\t\t\tvar column = __joins[i].join.condition.stringify();\r\n\t\t\t\t\tif (__joinFetch[column] === __mainFetch[column]) {\r\n\t\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\r\n\t\t\t\t\t\treturn __joinFetch;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar conditionRowComposition = new Row(this.params);\r\n\t\t\t\t\tconditionRowComposition[__mainAlias] = __mainFetch;\r\n\t\t\t\t\tconditionRowComposition[__joinAlias] = __joinFetch;\r\n\t\t\t\t\tif (__joins[i].join.condition.eval(conditionRowComposition, this.params)) {\r\n\t\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\r\n\t\t\t\t\t\treturn __joinFetch;\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// Left/Right Join \r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!__joinCursor.flags[__mainCursor.key]) {\r\n\t\t\t\t\tif (__joinCursor.eof() && __joins[i].join.type.toLowerCase() === 'left') {\r\n\t\t\t\t\t\treturn {};\r\n\t\t\t\t\t} else if (__mainCursor.eof() && __joins[i].join.type.toLowerCase() === 'right') {\r\n\t\t\t\t\t\t__mainFetch = {};\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trowCompositionRejection = true;\r\n\t\t});\r\n\t\tlet __joinFetches = await Promise.all(joinFetches);\r\n\t\t// -------------------------\r\n\t\t// Advance cursor.\r\n\t\t// IMPORTANT: AFTER HAVING WAITED FOR joinFetches\r\n\t\t(__joinCursors[0] || __mainCursor).next();\r\n\t\t// -------------------------\r\n\t\t// Filter by join status\r\n\t\tif (__joinFetches.filter(t => t).length === joinFetches.length) {\r\n\t\t\tvar _rowComposition = new Row(this.params);\r\n\t\t\t_rowComposition[__mainAlias] = __mainFetch;\r\n\t\t\t__joinFetches.forEach((rowMember, i) => {\r\n\t\t\t\tvar __joinAlias = __joins[i].params.alias || __joins[i].name;\r\n\t\t\t\t_rowComposition[__joinAlias] = rowMember;\r\n\t\t\t});\r\n\t\t\trowComposition = _rowComposition;\r\n\t\t}\r\n\t\t// ----------\r\n\t\t// Apply where\r\n\t\t// ----------\r\n\t\ttry {\r\n\t\t\tif (!rowComposition || (this.where && !this.where.eval(rowComposition, this.params))) {\r\n\t\t\t\treturn await this.fetch();\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.where.stringify() + '\" in WHERE clause]: ' + e.message);\r\n\t\t}\r\n\t\treturn rowComposition;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync syncCursors() {\r\n\t\tvar __tables = await Promise.all(this.joins.concat(this.main));\r\n\t\tvar __cursors = await Promise.all(this.joinCursors.concat(this.mainCursor));\r\n\t\treturn Promise.all(__cursors.map((cursor, i) => {\r\n\t\t\treturn __tables[i].syncCursor(cursor);\r\n\t\t}));\r\n\t}\r\n};","\r\n/**\r\n * imports\r\n */\r\nimport _isBoolean from '@webqit/util/js/isBoolean.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport { factoryGetSchema } from '../database/_Factory.js';\r\n\r\n/**\r\n * Requires the following tables: uac, uac_token (optional), account\r\n * Requires a user object: {id, lineage, parent, privileges,}\r\n */\r\nexport default class Query {\r\n\t\r\n\t/**\r\n\t * Creates the UAC logic that sets the value of each field conditionally.\r\n\t *\r\n\t * @param object                    params\r\n\t * @param object                    tableXSchema\r\n\t * @param object                    user\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tconstructor(params, tableXSchema, user) {\r\n        // ---------------------\r\n        var UAC_PARAMS = createParams(params, ['uac']);\r\n        // ---------------------\r\n        this.user = user || {\r\n            id: 0,\r\n            parent: 0,\r\n            lineage: '0',\r\n            privileges: [],\r\n        };\r\n        // ---------------\r\n        // MAIN QUERY\r\n        // ---------------\r\n\t\tthis.schema = tableXSchema;\r\n        this.alias = 'MAIN';\r\n        this.select = [];\r\n        this.where = [];\r\n        // ---------------\r\n        // RULES\r\n        // ---------------\r\n        // JOIN: Table-wide rules most-specific to the guest\r\n        if (UAC_PARAMS.SCHEMAS.uac) {\r\n            this.EXPLICIT_TABLE_ACCESS_QUERY = {\r\n                query: getExplicitRulesQuery(UAC_PARAMS, this.schema.name, this.user),\r\n                alias: 'EXPLICIT_TABLE_ACCESS',\r\n                on: ['EXPLICIT_TABLE_ACCESS.table_row = 0'],\r\n            };\r\n        }\r\n        if (UAC_PARAMS.CONTROL_LEVEL === 'row') {\r\n            if (UAC_PARAMS.SCHEMAS.uac) {\r\n                // JOIN: Row-wide rules most-specific to the guest\r\n                this.EXPLICIT_ROW_ACCESS_QUERY = {\r\n                    query: getExplicitRulesQuery(UAC_PARAMS, this.schema.name, this.user),\r\n                    alias: 'EXPLICIT_ROW_ACCESS',\r\n                    on: ['EXPLICIT_ROW_ACCESS.table_row = ' + this.alias + '.' + this.schema.primaryKey],\r\n                };\r\n            }\r\n            // ---------------\r\n            // RIGHTS\r\n            // ---------------\r\n            // JOIN: The guest's organic rights towards the owner\r\n            if (this.schema.attributionKey && UAC_PARAMS.SCHEMAS.account) {\r\n                var ownerGuestRelationshipQuery = getOwnerGuestRelationshipQuery(UAC_PARAMS, this.user, false/* groupConcat */);\r\n                this.AUTHOR_user_RELATIONSHIP_QUERY = {\r\n                    query: ownerGuestRelationshipQueryr\n                    alias: 'AUTHOR_user_RELATIONSHIP',\r\n                    on: ['AUTHOR_user_RELATIONSHIP.' + ownerGuestRelationshipQuery.schema.primaryKey + ' = ' + this.alias + '.' + this.schema.attributionKey],\r\n                };\r\n            }\r\n        }\r\n        // ---------------\r\n        // APPLY\r\n        // ---------------\r\n        // The UAC table control\r\n        this.where.push(this.deriveEntityAccess('view') + ' <> 0');\r\n    }\r\n    \r\n    /**\r\n     * --------------------------\r\n     * ACCESS LOGIC\r\n     * --------------------------\r\n     */\r\n\r\n\t/**\r\n\t * Creates the SQL logic that computes descreet access rules and all other rules into a final value\r\n\t * - for entity access.\r\n\t *\r\n\t * @param string \t                accessType\r\n\t * @param bool \t\t                withActingRights\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tderiveEntityAccess(accessType, withActingRights = false) {\r\n\t\tvar entityAccess = [];\r\n\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\r\n\t\t\tentityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\r\n        }\r\n        if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\r\n            entityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\r\n        }\r\n\t\tentityAccess.push(getRightsRulesIntersectionExpression(rules(this.schema.uac, accessType), this.getGuestRightsExpression(), withActingRights));\r\n        // ---------------------\r\n\t\treturn 'COALESCE(' + entityAccess.join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates the SQL logic that computes descreet access rules and all \r\n     * other rules into their final values\r\n\t * - for table fields access.\r\n\t *\r\n\t * @param array \t                fields\r\n\t * @param string \t                accessType\r\n\t * @param bool \t\t                withActingRights\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tderiveFieldsAccess(fields, accessType, withActingRights = false) {\r\n\t\tvar fieldsAccesses = {};\r\n\t\tfields.forEach(field => {\r\n\t\t\tvar fieldAccess = [];\r\n\t\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\r\n\t\t\t\tfieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\r\n            }\r\n            if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\r\n\t\t\t    fieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\r\n            }\r\n            fieldAccess.push(getRightsRulesIntersectionExpression(rules(this.schema.fields[field].uac, accessType), this.getGuestRightsExpression(), withActingRights));\r\n\t\t\t// In the form: id:\"0\"\r\n\t\t\tfieldsAccesses[field] = 'COALESCE(' + fieldAccess.join(', ') + ')';\r\n\t\t});\r\n\t\treturn fieldsAccesses;\r\n\t}\r\n    \r\n    /**\r\n     * --------------------------\r\n     * ORGANIC RIGHTS\r\n     * --------------------------\r\n     */\r\n \r\n    /**\r\n     * Creates the SQL expression for all user rights:\r\n     * Organic + Static Rights\r\n     * \r\n     * return string\r\n     */\r\n    getGuestRightsExpression() {\r\n        var rights = [];\r\n\t\tif (this.AUTHOR_user_RELATIONSHIP_QUERY) {\r\n\t\t\trights.push(this.AUTHOR_user_RELATIONSHIP_QUERY.alias + '.relationship');\r\n\t\t\tif (this.AUTHOR_user_TOKEN_QUERY) {\r\n\t\t\t\trights.push('IF(' + this.AUTHOR_user_TOKEN_QUERY.alias + '.id, \"user\", \"\")');\r\n\t\t\t}\r\n        }\r\n        if (this.user.privileges.length) {\r\n            rights.push('\"' + this.user.privileges.join(',') + '\"');\r\n        }\r\n        // If all conditions above have been met, then we should have here:\r\n        // CONCAT_WS(\",\", _RELATED_ACCOUNT.relationship, IF(_TOKEN.id, \"user\", \"\"), \"ADMIN,ETC\")\r\n        // This would resolve to:\r\n        // \"ANCESTOR,PARENT,101,ADMIN,ETC\";\r\n        return rights.length ? 'CONCAT_WS(\",\", ' + rights.join(', ') + ')' : '\"\"';\r\n    }\r\n    \r\n    /**\r\n     * --------------------------\r\n     * TOSTRING\r\n     * --------------------------\r\n     */\r\n    \r\n    /**\r\n     * Stringifies the query.\r\n     * \r\n     * @return string\r\n     */\r\n    toString() {\r\n        return 'SELECT ' + this.select.join(', ') \r\n        + ' FROM ' + this.schema.name + ' AS ' + this.alias\r\n        + (this.EXPLICIT_TABLE_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_TABLE_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_TABLE_ACCESS_QUERY.on.join(' AND ') : '')\r\n        + (this.EXPLICIT_ROW_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_ROW_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_ROW_ACCESS_QUERY.on.join(' AND ') : '')\r\n        + (this.AUTHOR_user_RELATIONSHIP_QUERY ? ' LEFT JOIN (' + this.AUTHOR_user_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_user_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_user_RELATIONSHIP_QUERY.on.join(' AND ') : '')\r\n        + ' WHERE ' + this.where.join(' AND ');\r\n    }\r\n};\r\n\r\n/**\r\n * Helps resolve UAC params from user-supplied params.\r\n * Applies sensible defaults.\r\n * \r\n * @param Object params\r\n * @param Array tableSpecifiers\r\n * \r\n * @return Object\r\n */\r\nexport function createParams(params, tableSpecifiers = []) {\r\n    // --------------\r\n    var UAC_PARAMS = _merge({\r\n        DB_FACTORY: params.DB_FACTORY,\r\n        SCHEMAS: {},\r\n    }, params.UAC || {});\r\n    // --------------\r\n    tableSpecifiers.forEach(tableSpecifier => {\r\n        var fullTableName = tableSpecifier;\r\n        if (UAC_PARAMS.TABLE_SPECIFIERS) {\r\n            // Use custom-defined name\r\n            fullTableName = UAC_PARAMS.TABLE_SPECIFIERS[tableSpecifier];\r\n        }\r\n        var tableNameSplit = fullTableName.split('.');\r\n        var tableName = tableNameSplit.pop(),\r\n            databaseName = tableNameSplit.pop();\r\n        UAC_PARAMS.SCHEMAS[tableSpecifier] = (factoryGetSchema(UAC_PARAMS.DB_FACTORY, databaseName) || {})[tableName];\r\n    });\r\n    // --------------\r\n    return UAC_PARAMS;\r\n};\r\n  \r\n/**\r\n * --------------------------\r\n * TABLE-LEVEL UAC QUERY\r\n * - EXPLICIT and ORGANIC\r\n * --------------------------\r\n */\r\n\r\n/**\r\n * Makes the Query that finds the winning descreet access rules\r\n * for the given access type, for the current user OR the closest ancestor on this table (or, table row).\r\n *\r\n *  Each row has the following schema:\r\n * \r\n *  table_name: ...,\r\n *  table_row: ...,\r\n *  target: 1/3/7,\r\n *  uac: {\r\n *      read: 0,\r\n *      write: 0,\r\n *  },\r\n *  fields: {\r\n *      fname: {\r\n *          uac: {\r\n *              read: 0,\r\n *              write: 0,\r\n *          }\r\n *      }\r\n *  },\r\n *\r\n * @return object\r\n */\r\nexport function getExplicitRulesQuery(UAC_PARAMS, tableXName, user) {\r\n    var targetInLineageQuery = 'FIND_IN_SET(target, \"' + user.lineage.replace('/', ',') + '\")';\r\n    return {\r\n        schema: UAC_PARAMS.SCHEMAS.uac,\r\n        select: ['*', targetInLineageQuery + ' AS `lineage.target`'],\r\n        where: [\r\n            'table_name = ' + tableXName,\r\n            'target = ' + user.id + ' OR ' + targetInLineageQuery,\r\n        ],\r\n        orderBy: '`lineage.target` DESC',\r\n        limit: 1,\r\n        toString() {\r\n            return 'SELECT ' + this.select.join(', ') \r\n            + ' FROM ' + this.schema.name \r\n            + ' WHERE ' + this.where.join(' AND ') \r\n            + ' ORDER BY ' + this.orderBy \r\n            + ' LIMIT ' + this.limit;\r\n        },\r\n    };\r\n};\r\n      \r\n/**\r\n * Composes a query that determines the relatiosnhip\r\n * between a given owner and guest.\r\n * \r\n * A where clause can be subsequnetly added to the query\r\n * to identify the said owner\r\n * or a join clause can be added to dynamically identify the said owner\r\n * as part of a larger query.\r\n * \r\n * @param object                   UAC_PARAMS \r\n * @param object                   user \r\n * @param bool                     groupConcat \r\n * \r\n * @return object\r\n */\r\nexport function getOwnerGuestRelationshipQuery(UAC_PARAMS, user, groupConcat = false) {\r\n    var accessRightQueries = {};\r\n    // Descendant access right\r\n    accessRightQueries['DESCENDANT'] = 'FIND_IN_SET(id, \"' + user.lineage.replace(user.id + '/', '').replace(/\\//g, ',') + '\")';\r\n    // Child access right (also a descendant)\r\n    accessRightQueries['DESCENDANT,CHILD'] = 'id = ' + user.parent;\r\n    // Sibling access right\r\n    accessRightQueries['SIBLING'] = user.parent + ' = parent';\r\n    // Ancestor access right\r\n    accessRightQueries['ANCESTOR'] = 'FIND_IN_SET(' + user.id + ', REPLACE(REPLACE(lineage, CONCAT(id, \"/\"), \"\"), \"/\", \",\"))';\r\n    // Parent access right (also an ancestor)\r\n    accessRightQueries['ANCESTOR,PARENT'] = user.id + ' = parent';\r\n    // Direct attribution\r\n    accessRightQueries['AUTHOR'] = 'id = ' + user.id;\r\n    // ------\r\n    var compiledAccessRights = 'NULL'; // No access right\r\n    _each(accessRightQueries, (assertion, right) => {\r\n        compiledAccessRights = 'IF(' + assertion + ', \"' + right + '\", ' + compiledAccessRights + ')';\r\n    });\r\n    // ------\r\n    return {\r\n        schema: UAC_PARAMS.SCHEMAS.account,\r\n        select: (groupConcat ? 'GROUP_CONCAT(DISTINCT ' : '') + compiledAccessRights + (groupConcat ? ')' : '') + ' AS relationship',\r\n        where: [],\r\n        toString() {\r\n            return 'SELECT ' + this.select \r\n            + ' FROM ' + this.schema.name\r\n            + (this.where.length ? ' WHERE ' + this.where.join(' AND ') : '');\r\n        },\r\n    };\r\n};\r\n  \r\n/**\r\n * --------------------------\r\n * GENERAL HELPERS\r\n * --------------------------\r\n */\r\n    \r\n/**\r\n * Compiles to the SQL string that ssserts which of the current user's\r\n * total access rights (static + organic rights) passes the\r\n * given access rules.\r\n *\r\n * @param array|string|bool|null\trules\r\n * @param string\t\t\t\t\trightsExpression\r\n * @param bool\t\t\t\t\t\twithActingRights\r\n *\r\n * @return string\r\n */\r\nexport function getRightsRulesIntersectionExpression(rules, rightsExpression, withActingRights = false) {\r\n    var explicitFirstRule = _isBoolean(rules[0]) ? rules.shift() : null;\r\n    // No rule? Implict TRUE of NULL.\r\n    // Only rule is bool? Explicit TRUE/FALSE\r\n    if (!rules.length) {\r\n        return _isBoolean(explicitFirstRule) ? parseInt(explicitFirstRule) : 'NULL';\r\n    }\r\n    // ---------------------\r\n    // Which RULES are satisfied by RIGHTS?\r\n    // ---------------------\r\n    var nodeAccessAssertions = [];\r\n    rules.forEach(rule => {\r\n        var ruleSql = [];\r\n        // Where a rule specifies...\r\n        // PARENT+ETC\r\n        rule.split('+').forEach(r => {\r\n            ruleSql.push('FIND_IN_SET(\"' + r + '\", ' + rightsExpression + ')');\r\n        });\r\n        // Then we would have...\r\n        // IF(FIND_IN_SET(\"PARENT\". \"ANCESTOR,PARENT,101,ADMIN,ETC\") AND FIND_IN_SET(\"ETC\". \"ANCESTOR,PARENT,101,ADMIN,ETC\"), \"PARENT+ETC\", NULL);\r\n        nodeAccessAssertions.push('IF(' + ruleSql.join(' AND ') + ', \"' + rule + '\", NULL)');\r\n    });\r\n    // Gather none-NULL assertions\r\n    nodeAccessAssertions = 'COALESCE(' + nodeAccessAssertions.join(', ') + ')';\r\n    // ---------------------\r\n    // So should we invert the given NULLness of the logic?\r\n    // ---------------------\r\n    return explicitFirstRule \r\n        ? 'IF(ISNULL(' + nodeAccessAssertions + '), 1, 0)' \r\n        : 'IF(ISNULL(' + nodeAccessAssertions + '), 0, ' + (withActingRights ? nodeAccessAssertions : '1') + ')';\r\n};\r\n\r\n/**\r\n * Gets rules array\r\n * \r\n * @param array                     rules\r\n * @param string                    accessType\r\n * \r\n * @return array\r\n */\r\nexport function rules(rules, accessType) {\r\n    if (_isObject(rules)) {\r\n        rules = rules[accessType];\r\n    }\r\n    return _isEmpty(rules) \r\n        ? [] \r\n        : _arrFrom(rules);\r\n};\r\n","\r\n/**\r\n * imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport Query, { createParams, getOwnerGuestRelationshipQuery } from './Query.js';\r\n\r\nexport default class Client {\r\n\t\r\n\t/**\r\n\t * Creates the UAC logic that sets the value of each field conditionally.\r\n\t *\r\n\t * @param object            params\r\n\t * @param array\t\t\t\ttableXSchema\r\n\t * @param object            user\r\n\t * @param array\t\t\t\tcolumns\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic select(params, tableXSchema, user, columns = []) {\r\n\t\tcolumns = _arrFrom(columns);\r\n\t\tif (!columns.length || columns[0] === '*') {\r\n\t\t\tcolumns = Object.keys(tableXSchema.fields);\r\n\t\t}\r\n        // ---------------\r\n        // OBJECT_QUERY\r\n        // ---------------\r\n        var OBJECT_QUERY = new Query(params, tableXSchema, user);\r\n\t\t// The UAC fields control\r\n\t\tif (0) {\r\n\t\t\t_each(OBJECT_QUERY.deriveFieldsAccess(columns, 'view'), (field, accessPassExpression) => {\r\n\t\t\t\tOBJECT_QUERY.select.push('IF(' + accessPassExpression + ' <> 0, ' + OBJECT_QUERY.alias + '.' + field + ', NULL) AS ' + field);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tOBJECT_QUERY.select.push(...columns);\r\n\t\t}\r\n        return OBJECT_QUERY;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Returns the list of all accounts that the given rights can be applied to.\r\n\t *\r\n\t * @param object            params\r\n\t * @param object            user\r\n\t * @param array\t \t\t\torganicRights\r\n\t * @param array\t \t\t\tpriorityAccounts\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic getRelatedAccounts(params, user, organicRights, priorityAccounts = []) {\r\n\t\t// ---------------------\r\n        var UAC_PARAMS = createParams(params, ['uac', 'account']);\r\n        // ---------------------\r\n\t\tvar ACCOUNT_QUERY = {\r\n\t\t\tschema: UAC_PARAMS.SCHEMAS.account,\r\n\t\t\talias: 'ACCOUNT',\r\n\t\t\tselect: [],\r\n\t\t\twhere: [],\r\n\t\t\torderBy: [],\r\n\t\t\ttoString() {\r\n\t\t\t\treturn 'SELECT ' + this.select.join(', ')\r\n\t\t\t\t+ ' FROM ' + this.schema.name + ' AS ' + this.alias\r\n\t\t\t\t+ ' RIGHT JOIN (' + this.AUTHOR_USER_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.on.join(' AND ')\r\n                + ' WHERE ' + this.where.join(' AND ') \r\n                + (this.orderBy.length ? ' ORDER BY ' + this.orderBy : '');\r\n\t\t\t}\r\n\t\t}\r\n\t\t// RIGHT JOIN\r\n\t\tACCOUNT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY = {\r\n\t\t\tquery: getOwnerGuestRelationshipQuery(UAC_PARAMS, user, false/* groupConcat */),\r\n\t\t\talias: 'AUTHOR_USER_RELATIONSHIP',\r\n\t\t\ton: [\r\n\t\t\t\tACCOUNT_QUERY.alias + '.' + UAC_PARAMS.SCHEMAS.account.primaryKey + ' = AUTHOR_USER_RELATIONSHIP.' + UAC_PARAMS.SCHEMAS.account.primaryKey,\r\n\t\t\t\t'NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)',\r\n\t\t\t],\r\n\t\t};\r\n\t\tif (priorityAccounts) {\r\n\t\t\t// But ensure that the following accounts are listed first, if actually in list\r\n\t\t\tACCOUNT_QUERY.select.push('FIND_IN_SET(' + ACCOUNT_QUERY.alias + '.' + UAC_PARAMS.SCHEMAS.account.primaryKey + ', \"' + priorityAccounts.join(',') + '\") AS priority');\r\n\t\t\tACCOUNT_QUERY.orderBy.push('priority DESC');\r\n\t\t}\r\n\t\tif (organicRights) {\r\n\t\t\tACCOUNT_QUERY.where.push('AUTHOR_USER_RELATIONSHIP.relationship in (\"' + organicRights.join('\", \"') + '\")');\r\n\t\t}\r\n\t\treturn ACCOUNT_QUERY;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the Query that finds descreet access types\r\n\t * for the current user on this table (or, table row).\r\n\t *\r\n\t * @param object            params\r\n\t * @param object            user\r\n\t * @param string|array\t\taccesses\r\n\t * @param string|int\t\toverObject\t\t\tThe ID of the subject object.\r\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(The object author will be basis for organic relationship.)\r\n\t * @param int\t\t\t\torAsRelatedTo\t\tWhen not overObject!\r\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(This user ID will be basis for organic relationship.)\r\n\t * @param bool\t\t\t\twithFields\r\n\t * @param bool\t\t\t\twithActingRights\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic getAccessesDoc(params, user, accesses, overObject = null, orAsRelatedTo = null, withFields = false, withActingRights = false) {\r\n        // Either of the following two arguments are accepted. Not both\r\n\t\tif (overObject && orAsRelatedTo) {\r\n\t\t\tthrow new Error('UAC queries must be either over an object and its author (argument #2), or as related to a specific user (argument #3). But not both!');\r\n\t\t}\r\n        // ---------------\r\n        // OBJECT_QUERY\r\n        // ---------------\r\n        var OBJECT_QUERY = new Query(params, tableName, user);\r\n        // JOIN: The user's organic rights towards the author\r\n        if (OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY) {\r\n            OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY.on.push('NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)');\r\n\t\t}\r\n\t\tif (overObject) {\r\n\t\t\t// The author of the object at the given row in _TABLE\r\n            OBJECT_QUERY.where.push(OBJECT_QUERY.schema.primaryKey + ' = ' + overObject);\r\n\t\t} else if (OBJECT_QUERY.schema.attributionKey && orAsRelatedTo) {\r\n\t\t\t// The author specified in orAsRelatedTo or all possible relationships.\r\n\t\t\t// Whichever the case, _TABLE gets to play no role in this query...\r\n            OBJECT_QUERY.where.push(OBJECT_QUERY.schema.attributionKey + ' = ' + orAsRelatedTo);\r\n\t\t\tOBJECT_QUERY.limit = 1;\r\n        }\r\n        // ---------------\r\n        // DOC\r\n        // ---------------\r\n        if (!accesses.length || accesses === '*') {\r\n            accesses = Client.standardAccesses;\r\n        } else {\r\n            accesses = _arrFrom(accesses);\r\n        }\r\n\t\tvar entityJson = [],\r\n\t\t\tfieldsJson = {},\r\n\t\t\tfields = withFields ? Object.keys(OBJECT_QUERY.schema.fields) : [];\r\n\t\taccesses.forEach(accessType => {\r\n\t\t\tentityJson.push('JSON_OBJECT(\"' + accessType + '\", COALESCE(' + Query.deriveEntityAccess(accessType, withActingRights) + '))');\r\n\t\t\t_each(Query.deriveFieldsAccess(fields, accessType, withActingRights), (field, access) => {\r\n                if (!fieldsJson[field]) {\r\n                    fieldsJson[field] = [];\r\n                }\r\n\t\t\t\tfieldsJson[field].push('JSON_OBJECT(\"' + accessType + '\", ' + access + ')');\r\n\t\t\t});\r\n\t\t});\r\n\t\tif (accesses.length > 1) {\r\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + entityJson.join(', ') + ') AS uac');\r\n\t\t} else {\r\n\t\t\tOBJECT_QUERY.select.push(entityJson.join(', ') + ' AS uac');\r\n\t\t}\r\n\t\tif (fieldsJson.length) {\r\n\t\t\tvar allFieldsJson = [];\r\n\t\t\t_each(fieldsJson, (field, accessesDocs) => {\r\n\t\t\t\tif (accesses.length > 1) {\r\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", JSON_MERGE(' + accessesDocs.join(', ') + '))');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", ' + accessesDocs.join(', ') + ')');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + allFieldsJson.join(', ') + ') AS fields');\r\n\t\t}\r\n\t\treturn OBJECT_QUERY;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nClient.standardAccesses = [\r\n\t'view', \r\n\t'create', \r\n\t'update', \r\n\t'delete', \r\n\t'stats', \r\n\t'use',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tCallInterface,\r\n} from '../grammar.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _find from '@webqit/util/obj/find.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArrowReferenceInterface from '../grammar/ArrowReferenceInterface.js';\r\nimport ArrowReference from '../grammar/ArrowReference.js';\r\nimport Reference from '../grammar/Reference.js';\r\nimport Table from '../grammar/Table.js';\r\nimport Base from '../database/Base.js';\r\nimport _Factory from '../database/_Factory.js';\r\nimport UACClient from '../uac/Client.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Delete class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Stmt {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetBase(databases, params = {}, tables = []) {\r\n\t\tif (!tables.length) {\r\n\t\t\ttables = (_isArray(this.exprs.TABLE_REFERENCES) ? this.exprs.TABLE_REFERENCES : [this.exprs.TABLE_REFERENCES]);\r\n\t\t}\r\n\t\ttables = tables.concat(this.exprs.JOIN_CLAUSE || []).map(table => table.eval(databases, params));\r\n\t\tvar main = tables.shift(), joins = tables;\r\n\t\treturn new Base(main, joins, this.exprs.WHERE_CLAUSE, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetToString(params, callback) {\r\n\t\t// ---------------------\r\n\t\tvar t = params.t || 0, _t = (n = 0, when = true) => !when ? '' : \"\\r\\n\" + (\"\\t\".repeat(Math.max(0, t + n))), _params = {...params}; _params.t = t + 1;\r\n\t\t// ---------------------\r\n\t\tvar strArray = [];\r\n\t\t_each(this.exprs, (clauseType, expr, i) => {\r\n\t\t\tif (!expr && i > 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar str = null;\r\n\t\t\tif (clauseType === 'JOIN_CLAUSE') {\r\n\t\t\t\tvar clause = this.clauses[clauseType];\r\n\t\t\t\tstr = expr.map((join, i) => clause[i].toString().toUpperCase() + ' ' + join.stringify(_params)).join(_t());\r\n\t\t\t} else {\r\n\t\t\t\tvar clause = this.clauses[clauseType].toString().toUpperCase();\r\n\t\t\t\tif (clauseType === 'TABLE_REFERENCES') {\r\n\t\t\t\t\tstr = clause + ' ' + (\r\n\t\t\t\t\t\t_isArray(expr) ? expr.map(table => table.stringify(_params)).join(', ') : expr.stringify(_params)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!callback || !(str = callback(clauseType, expr, clause, _params, _t))) {\r\n\t\t\t\t\tif (_isArray(expr)) {\r\n\t\t\t\t\t\tstr = expr.map(x => _isFunction(x.stringify) ? x.stringify(_params) : expr).join(', ');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstr = clause + ' ' + expr.stringify(_params);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!str && i === 0) {\r\n\t\t\t\tstr = clause;\r\n\t\t\t}\r\n\t\t\tif (str) {\r\n\t\t\t\tstrArray.push(_t() + str);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn strArray.join('') + _t(-1);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic getParse(expr, withUac, stmtClauses, parseCallback, params, callback, literalValidateCallback = null) {\r\n\r\n\t\tvar useRegex = 'i'; // Match clauses; case-insensitively\r\n\t\tvar parse = Lexer.lex(expr, Object.values(stmtClauses), {useRegex:useRegex});\r\n\t\tif (parse.matches.length) {\r\n\t\t\t\r\n\t\t\t// ------------------\r\n\r\n\t\t\tvar EXPRS = {}, CLAUSES = {}, TABLES = {}, SCHEMAS = {}, VARS = [];\r\n\t\t\tparse.matches.forEach((clause, i) => {\r\n\t\t\t\tvar clauseType = _find(stmtClauses, c => clause.match(new RegExp(c, useRegex)), true/*deep*/);\r\n\t\t\t\tvar _expr = parse.tokens[i + 1].trim();\r\n\t\t\t\tvar _exprParse = null;\r\n\t\t\t\tif (clauseType === 'JOIN_CLAUSE') {\r\n\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\r\n\t\t\t\t\tif (_exprParse.type = clause.match(new RegExp('(INNER|CROSS|LEFT|RIGHT)', 'i'))) {\r\n\t\t\t\t\t\t_exprParse.type = _exprParse.type[0].toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!EXPRS[clauseType]) {\r\n\t\t\t\t\t\tEXPRS[clauseType] = [_exprParse];\r\n\t\t\t\t\t\tCLAUSES[clauseType] = [clause];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tEXPRS[clauseType].push(_exprParse);\r\n\t\t\t\t\t\tCLAUSES[clauseType].push(clause);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (clauseType === 'TABLE_REFERENCES' || clauseType === 'USING_CLAUSE'/* specific to the DELETE stmt */) {\r\n\t\t\t\t\t\tvar tables = Lexer.split(_expr, [',']).map(\r\n\t\t\t\t\t\t\ttable => parseCallback(table.trim(), [Table], {withUac, assertTableValidity: clauseType === 'TABLE_REFERENCES' && !parse.matches.includes('USING')})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tvar _exprParse = tables.length === 1 ? tables[0] : tables;\r\n\t\t\t\t\t} else if (!callback || !(_exprParse = callback(clauseType, _expr))) {\r\n\t\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Ramp up\r\n\t\t\t\t\tif (clauseType === 'WHERE_CLAUSE' && !EXPRS.JOIN_CLAUSE) {\r\n\t\t\t\t\t\t// Wheres must not come before joins\r\n\t\t\t\t\t\t// This might happen on adding smart joins below\r\n\t\t\t\t\t\t// So we secure a place for joins\r\n\t\t\t\t\t\tEXPRS.JOIN_CLAUSE = [];\r\n\t\t\t\t\t\tCLAUSES.JOIN_CLAUSE = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tEXPRS[clauseType] = _exprParse;\r\n\t\t\t\t\tCLAUSES[clauseType] = clause;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// ------------------\r\n\r\n\t\t\tconst TABLE_REFERENCES = EXPRS.USING_CLAUSE/* specific to the DELETE stmt */ || EXPRS.TABLE_REFERENCES;\r\n\t\t\t(_isArray(TABLE_REFERENCES) ? TABLE_REFERENCES : [TABLE_REFERENCES]).concat((EXPRS.JOIN_CLAUSE || []).map(j => j.table)).forEach((table, i) => {\r\n\t\t\t\tvar tableAlias = table.getAlias(), tableSchema = table.getSchema();\r\n\t\t\t\tTABLES[tableAlias] = table;\r\n\t\t\t\tSCHEMAS[tableAlias] = tableSchema;\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\tTABLES[''] = TABLES[tableAlias];\r\n\t\t\t\t\tSCHEMAS[''] = SCHEMAS[tableAlias];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// ------------------\r\n\r\n\t\t\t_each(EXPRS, (clauseType, _exprParse) => {\r\n\t\t\t\t_arrFrom(_exprParse, false/*castObjects*/).reduce((_VARS, __exprParse) => _VARS.concat(__exprParse.meta.vars).concat(__exprParse.meta.varsUnlodged), []).forEach(_var => {\r\n\t\t\t\t\tif (!(_var.role === 'CONTEXT')) {\r\n\t\t\t\t\t\tVARS.push(_var);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_var.role === 'CONTEXT' || _var.role === 'CALL_SPECIFIER' || (_var instanceof CallInterface)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// --------------\r\n\t\t\t\t\tvar ref_name, ref_context;\r\n\t\t\t\t\tif (_var instanceof ArrowReferenceInterface) {\r\n\t\t\t\t\t\tif (ArrowReference.isIncoming(_var + '')) {\r\n\t\t\t\t\t\t\tif (_var.context) {\r\n\t\t\t\t\t\t\t\tTABLES[_var.context + ''].associateReference(_var);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_var.interpreted = parseCallback(TABLES[''].getAlias() + '.' + _var, [Reference]);\r\n\t\t\t\t\t\t\t\tTABLES[''].associateReference(_var);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref_name = _var.name.split('~>')[0].replace(/`/g, '');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tref_name = _var.name.replace(/`/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// -------------\r\n\t\t\t\t\tif (_var.context) {\r\n\t\t\t\t\t\tref_context = _var.context.name.replace(/`/g, '');\r\n\t\t\t\t\t\tif (!SCHEMAS[ref_context] || (ref_name !== '*' && !(ref_name in SCHEMAS[ref_context].fields))) {\r\n\t\t\t\t\t\t\t// Qualified, but unknown column name!\r\n\t\t\t\t\t\t\tif (params.validation !== false) {\r\n\t\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is unknown!');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Or use as is\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (ref_name === '*') {\r\n\t\t\t\t\t\t\t_var.interpreted = Object.keys(SCHEMAS[ref_context].fields).map(field => parseCallback(ref_context + '.' + field, [Reference]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (ref_name === '*') {\r\n\t\t\t\t\t\tref_context = TABLES[''].getAlias();\r\n\t\t\t\t\t\tvar impliedFields;\r\n\t\t\t\t\t\tif ((impliedFields = Object.keys(SCHEMAS[''].fields)) && !impliedFields.length) {\r\n\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\tthrow new Error('The wildcard column specifier (*) cannot used on table \"' + ref_context + '\"; table defines no columns.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_var.interpreted = impliedFields.map(field => parseCallback(ref_context + '.' + field, [Reference]));\r\n\t\t\t\t\t} else if (!(literalValidateCallback && literalValidateCallback(ref_name, clauseType))) {\r\n\t\t\t\t\t\tref_context = Object.keys(SCHEMAS).filter(a => a).reduce((_ref_context, alias) => {\r\n\t\t\t\t\t\t\tif (ref_name in SCHEMAS[alias].fields) {\r\n\t\t\t\t\t\t\t\tif (_ref_context) {\r\n\t\t\t\t\t\t\t\t\t// Ambiguous column name!\r\n\t\t\t\t\t\t\t\t\tif (params.validation !== false) {\r\n\t\t\t\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is ambiguous!');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Use first context found\r\n\t\t\t\t\t\t\t\t\treturn _ref_context;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn alias;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, null);\r\n\t\t\t\t\t\tif (!ref_context) {\r\n\t\t\t\t\t\t\t// Unqualified, unknown column name!\r\n\t\t\t\t\t\t\tif (params.validation !== false) {\r\n\t\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is unknown!');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Force the column on main table\r\n\t\t\t\t\t\t\t\tref_context = TABLES[''].getAlias(), impliedFields;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_var.interpreted = parseCallback(ref_context + '.' + _var, [Reference]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ------------------\r\n\t\t\t\t\tTABLES[ref_context || ''].associateReference(_var);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// ------------------\r\n\r\n\t\t\t_each(TABLES, (alias, table) => {\r\n\t\t\t\tif (!alias) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar tableName = table.getName();\r\n\t\t\t\t// -----------\r\n\t\t\t\tif (params.withUac && !table.isDerivedQuery()/* Then UAC would already be applied */) {\r\n\t\t\t\t\ttable.interpreted = parseCallback('(' + UACClient.select(params, SCHEMAS[alias], null/* USER */, table.getAssociateReferences().map(ref => ref.name)/* columns */) + ') AS ' + (alias || tableName), [Table], {withUac: false});\r\n\t\t\t\t}\r\n\t\t\t\t// -----------\r\n\t\t\t\tvar arrowReferences;\r\n\t\t\t\tif ((arrowReferences = table.getAssociateReferences().filter(ref => ref instanceof ArrowReferenceInterface)).length) {\r\n\t\t\t\t\tvar joins = {},\r\n\t\t\t\t\t\t_joins = [],\r\n\t\t\t\t\t\t_select = table.getAssociateReferences().filter(ref => !(ref instanceof ArrowReferenceInterface)).map(ref => tableName + '.' + ref.name);\r\n\t\t\t\t\t// ----------\r\n\t\t\t\t\tarrowReferences.forEach(ref => {\r\n\t\t\t\t\t\tvar join = ref.process(SCHEMAS[alias], params.DB_FACTORY);\r\n\t\t\t\t\t\tvar joinUUID = join.b.table.name + '__by__' + join.b.actingKey;\r\n\t\t\t\t\t\tif (!joins[joinUUID]) {\r\n\t\t\t\t\t\t\tjoins[joinUUID] = join\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_select.push(joinUUID + '.' + join.b.select + ' AS `' + ref.name.replace(/`/g, '') + '`');\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// ----------\r\n\t\t\t\t\t_each(joins, (joinUUID, join) => {\r\n\t\t\t\t\t\t_joins.push('LEFT JOIN ' + join.b.table.name + ' AS ' + joinUUID + ' ON ' + joinUUID + '.' + join.b.actingKey + ' = ' + tableName + '.' + join.a.actingKey);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// ----------\r\n\t\t\t\t\tvar stmt = '(SELECT' + (withUac ? ' WITH UAC' : '') \r\n\t\t\t\t\t\t+ ' ' + _unique(_select).join(', ') \r\n\t\t\t\t\t\t+ ' FROM ' + tableName\r\n\t\t\t\t\t\t+ ' ' + _joins.join(' ') \r\n\t\t\t\t\t\t+ ') AS ' + table.getAlias();\r\n\t\t\t\t\t(table.interpreted/* possibly by UAC evaluation */ || table).interpreted = parseCallback(stmt, [Table], {withUac});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// ------------------\r\n\r\n\t\t\treturn {exprs:EXPRS, clauses:CLAUSES, tables:TABLES, schemas:SCHEMAS, vars:VARS};\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _all from '@webqit/util/arr/all.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport DeleteInterface from './DeleteInterface.js';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Delete class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Delete extends _mixin(Stmt, DeleteInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(database, params = {}) {\r\n\r\n\t\t// --------------------\r\n\t\t// RESOLVE DELETION SOURCES AND TARGETS\r\n\t\t// --------------------\r\n\t\tvar targetTableNames,\r\n\t\t\tmainTable = this.exprs.TABLE_REFERENCES;\r\n\t\tif (this.exprs.DELETE_LIST.length) {\r\n\t\t\ttargetTableNames = this.exprs.DELETE_LIST.map(t => t.endsWith('.*') ? _before(t, '.*') : t);\r\n\t\t} else if (this.exprs.USING_CLAUSE) {\r\n\t\t\ttargetTableNames = _arrFrom(this.exprs.TABLE_REFERENCES, false).map(t => t.getAlias());\r\n\t\t\tmainTable = this.exprs.USING_CLAUSE;\r\n\t\t} else {\r\n\t\t\t// IMPORTANT: only first table in here\r\n\t\t\ttargetTableNames = [(_isArray(mainTable) ? mainTable[0] : mainTable).getAlias()];\r\n\t\t}\r\n\r\n\t\t// --------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// --------------------\r\n\t\tvar _params = {...params};\r\n\t\t_params.mode = 'readwrite';\r\n\t\tthis.base = this.getBase(database, _params, _arrFrom(mainTable, false));\r\n\r\n\t\t// --------------------\r\n\t\t// Finds named tables\r\n\t\t// --------------------\r\n\t\tvar targetTables = {},\r\n\t\t\tdeletionIDs = {},\r\n\t\t\ttables = await Promise.all(this.base.joins.concat(this.base.main));\r\n\t\ttargetTableNames.forEach(alias => {\r\n\t\t\ttargetTables[alias] = tables.filter(table => (table.params.alias || table.name) === alias)[0];\r\n\t\t\tif (!targetTables[alias]) {\r\n\t\t\t\tthrow new Error('\"' + alias + '\" in table list is not found in main query.');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// --------------------\r\n\t\t// Mine IDs\r\n\t\t// --------------------\r\n\t\tvar rowComposition;\r\n\t\twhile(rowComposition = await this.base.fetch()) {\r\n\t\t\ttargetTableNames.forEach(alias => {\r\n\t\t\t\tif (!deletionIDs[alias]) {\r\n\t\t\t\t\tdeletionIDs[alias] = [];\r\n\t\t\t\t}\r\n\t\t\t\tvar rowID = _arrFrom(targetTables[alias].schema.primaryKey).map(key => rowComposition[alias][key]);\r\n\t\t\t\tif (!deletionIDs[alias].filter(_rowID => _all(_rowID, (id, i) => id === rowID[i])).length) {\r\n\t\t\t\t\tdeletionIDs[alias].push(rowID);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// --------------------\r\n\t\t// Delete now\r\n\t\t// --------------------\r\n\t\tvar keys = await Promise.all(targetTableNames.map(alias => {\r\n\t\t\tif (deletionIDs[alias].length) {\r\n\t\t\t\treturn targetTables[alias].deleteAll(deletionIDs[alias]);\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\treturn {\r\n\t\t\ttables: tables.map(t => t.name),\r\n\t\t\tkeys,\r\n\t\t};;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.getToString(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'delete') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/DELETE[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'DELETE_LIST') {\r\n\t\t\t\t\treturn _expr.split(',').map(t => t.trim()).filter(t => t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (stmtParse.exprs.DELETE_LIST.length && stmtParse.exprs.USING_CLAUSE) {\r\n\t\t\t\tthrow new Error('The \"using\" keyword cannot be used in a query with explicitly-listed tables.');\r\n\t\t\t}\r\n\t\t\treturn new this(stmtParse.exprs, stmtParse.clauses, withUac);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nDelete.clauses = {\r\n\tDELETE_LIST: 'DELETE',\r\n\tTABLE_REFERENCES: 'FROM',\r\n\tUSING_CLAUSE: 'USING',\r\n\tWHERE_CLAUSE: 'WHERE',\r\n\t// inner join, cross join, {left|right} [outer] join\r\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FieldInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FieldExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAbstractionInterface,\r\n\tReferenceInterface,\r\n\tCallInterface,\r\n} from '../grammar.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FieldInterface from './FieldInterface.js';\r\nimport AggrInterface from './AggrInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Field class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Field extends FieldInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, alias, claused = false) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = claused;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * --------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tas(alias) {\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = true;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetContextName() {\r\n\t\tif (this.expr.interpreted) {\r\n\t\t\t// .interpreted is always fully qualified.\r\n\t\t\treturn _isArray(this.expr.interpreted) \r\n\t\t\t\t? this.expr.interpreted[0].context.name \r\n\t\t\t\t: this.expr.interpreted.context.name;\r\n\t\t}\r\n\t\t// May or may not b qualified\r\n\t\treturn this.expr.context ? (this.expr.context.name || '').replace(/`/g, '') : '';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\t// Without backticks\r\n\t\treturn (this.expr.name || '').replace(/`/g, '');\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn (this.alias || '').replace(/`/g, '') || this.getName() || this.expr.toString();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetCallExprs() {\r\n\t\treturn this.expr.meta.vars.concat(this.expr.meta.varsUnlodged).concat([this.expr]).filter(x => x instanceof CallInterface)\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAggrExprs() {\r\n\t\treturn this.expr.meta.vars.concat(this.expr.meta.varsUnlodged).concat([this.expr]).filter(x => x instanceof AggrInterface)\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, database, params = {}) {\r\n\t\t\r\n\t\tvar alias = this.getAlias();\r\n\t\tif (this.expr instanceof ReferenceInterface) {\r\n\r\n\t\t\tif (this.getName() === '*') {\r\n\t\t\t\tvar multiple = this.expr.getEval(tempRow, params);\r\n\t\t\t\t_each(multiple, (name, ref) => {\r\n\t\t\t\t\tif (params.mode === 'readwrite') {\r\n\t\t\t\t\t\tObject.defineProperty(multiple, name, {\r\n\t\t\t\t\t\t\tget() {\r\n\t\t\t\t\t\t\t\treturn ref.get();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset (val) {\r\n\t\t\t\t\t\t\t\tref.set(val);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmultiple[name] = ref.get();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn multiple;\r\n\t\t\t}\r\n\r\n\t\t\tvar reference = this.expr.getEval(tempRow, params);\r\n\t\t\tif (params.mode === 'readwrite') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tget [alias] () {\r\n\t\t\t\t\t\treturn reference.get();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tset [alias] (val) {\r\n\t\t\t\t\t\treference.set(val);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn _objFrom(alias, reference.get());\r\n\t\t}\r\n\r\n\t\tvar value;\r\n\t\tif (this.expr instanceof AbstractionInterface) {\r\n\t\t\tvalue = this.expr.eval(database, params);\r\n\t\t} else {\r\n\t\t\tvalue = this.expr.eval(tempRow, params);\r\n\t\t}\r\n\t\tif (params.mode === 'readwrite') {\r\n\t\t\treturn {\r\n\t\t\t\tget [alias] () {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t},\r\n\t\t\t\tset [alias] (val) {\r\n\t\t\t\t\tthrow new Error('\"' + alias + '\" cannot be modified; not a reference!');\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn _objFrom(alias, value);\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.expr.stringify(params), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, [' (as )?'], {useRegex:'i', preserveDelims:true});\r\n\t\tvar exprParse = null;\r\n\t\tvar alias = splits.pop().trim();\r\n\t\tvar claused = alias.substr(0, 3).toLowerCase() === 'as ';\r\n\t\tif (claused) {\r\n\t\t\t// With an \"AS\" clause, its easy to obtain the alias...\r\n\t\t\t// E.g: SELECT first_name AS fname, 4 + 5 AS result, 5 + 5\r\n\t\t\talias = alias.substr(3).trim();\r\n\t\t\texprParse = parseCallback(splits.join('').trim());\r\n\t\t} else if (splits.length && (!alias.match(/[^0-9a-zA-Z_]/) || _wrapped(alias, '`', '`'))) {\r\n\t\t\t// Without an \"AS\" clause, its hard to determine if an expression is actually aliased...\r\n\t\t\t// E.g: In the statement SELECT first_name fname, 4 + 5 result, 5 + 5 FROM ...,\r\n\t\t\t// we can only assume that the last space-separated expr is rhe alias.\r\n\t\t\t// When that fails, then it is most-likely there is no alias. \r\n\t\t\ttry {\r\n\t\t\t\texprParse = parseCallback(splits.join('').trim());\r\n\t\t\t} catch(e) {}\r\n\t\t}\r\n\t\tif (!exprParse) {\r\n\t\t\talias = null;\r\n\t\t\texprParse = parseCallback(expr);\r\n\t\t}\r\n\t\texprParse.isFieldName = true;\r\n\t\treturn new this(exprParse, alias, claused);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * GroupByInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'GroupByExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _inherit from '@webqit/util/obj/inherit.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport GroupByInterface from './GroupByInterface.js';\r\nimport Row from '../database/Row.js';\r\n\r\n/**\r\n * ---------------------------\r\n * GroupBy class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class GroupBy extends GroupByInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(columns, having = null, withRollup = false) {\r\n\t\tsuper();\r\n\t\tthis.columns = columns;\r\n\t\tthis.having = having;\r\n\t\tthis.withRollup = withRollup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, params = {}) {\r\n\t\tvar groupBy = (rows, by, result) => {\r\n\t\t\t// This will end up either as\r\n\t\t\t// regular summary or rollup {super summary}\r\n\t\t\tif (by.length) {\r\n\t\t\t\t// Drilldown...\r\n\t\t\t\tvar grouping = {};\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tvar _for = by[0].eval(row, params);\r\n\t\t\t\t\tgrouping[_for] = grouping[_for] || [];\r\n\t\t\t\t\tgrouping[_for].push(row);\r\n\t\t\t\t});\r\n\t\t\t\tObject.values(grouping).map(group => groupBy(group, by.slice(1), result));\r\n\t\t\t}\r\n\t\t\tif (!by.length/*We're on end nodes*/ || this.withRollup) {\r\n\t\t\t\tvar summaryRow = new Row(params); _inherit(summaryRow, rows[0]);\r\n\t\t\t\tsummaryRow.$ = _copy(summaryRow.$);\r\n\t\t\t\tsummaryRow.AGGR = {rows: rows, by: by};\r\n\t\t\t\t// HOW WE'LL DETERMINE A SUPER AGGREGATE ROW...\r\n\t\t\t\tsummaryRow.AGGR.isRollup = by.length && this.withRollup;\r\n\t\t\t\tif (summaryRow.AGGR.isRollup) {\r\n\t\t\t\t\tby.forEach(b => {\r\n\t\t\t\t\t\tb = b.stringify().indexOf('.') > -1 ? _after(b.stringify(), '.') : b.stringify();\r\n\t\t\t\t\t\tif (b in summaryRow.$) {\r\n\t\t\t\t\t\t\tsummaryRow.$[b] = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(summaryRow);\r\n\t\t\t\treturn summaryRow;\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar result = [];\r\n\t\tgroupBy(tempRows, this.columns.slice(), result);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [this.columns.map(c => c.stringify(params)).join(', ')];\r\n\t\tif (this.withRollup) {\r\n\t\t\tstr.push('WITH ROLLUP');\r\n\t\t}\r\n\t\tif (this.having) {\r\n\t\t\tstr.push('HAVING ' + this.having.stringify(params));\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP', 'HAVING'], {useRegex:'i'});\r\n\t\tvar columns = Lexer.split(parse.tokens.shift().trim(), [',']).map(\r\n\t\t\tc => parseCallback(c.trim())\r\n\t\t);\r\n\t\tvar having = null;\r\n\t\tvar withRollup = false;\r\n\t\tparse.matches.forEach(clauseType => {\r\n\t\t\tif (clauseType.toLowerCase().startsWith('with')) {\r\n\t\t\t\twithRollup = true;\r\n\t\t\t\tparse.tokens.shift();\r\n\t\t\t} else if (clauseType.toLowerCase().startsWith('having')) {\r\n\t\t\t\thaving = parseCallback(parse.tokens.shift().trim());\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn new this(columns, having, withRollup);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * InsertInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'InsertStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport InsertInterface from './InsertInterface.js';\r\nimport { Assignment } from '@webqit/subscript/src/grammar.js';\r\nimport Table from '../grammar/Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Insert class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Insert extends InsertInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(TABLE_REFERENCES, COLUMNS_LIST, VALUES_LIST, WITH_UAC, IGNORE, INSERT_TYPE, UPDATE_CLAUSE) {\r\n\t\tsuper();\r\n\t\tthis.TABLE_REFERENCES = TABLE_REFERENCES;\r\n\t\tthis.COLUMNS_LIST = COLUMNS_LIST;\r\n\t\tthis.VALUES_LIST = VALUES_LIST;\r\n\t\tthis.WITH_UAC = WITH_UAC;\r\n\t\tthis.IGNORE = IGNORE;\r\n\t\tthis.INSERT_TYPE = INSERT_TYPE;\r\n\t\tthis.UPDATE_CLAUSE = UPDATE_CLAUSE;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(context, params = {}) {\r\n\t\tvar _params = {...params};\r\n\t\t_params.mode = 'readwrite';\r\n\t\tvar tableBase = await this.TABLE_REFERENCES.eval(context, _params);\r\n\t\tvar tableSchema = tableBase.schema;\r\n\t\t// ---------------------------\r\n\t\tvar values = this.VALUES_LIST;\r\n\t\tvar insertType = this.INSERT_TYPE.toUpperCase();\r\n\t\tvar forceAutoIncrement = insertType === 'TABLE';\r\n\t\tif (insertType === 'SET') {\r\n\t\t\tvar columns = values.map(assignment => assignment.reference.name);\r\n\t\t\tvalues = [values.map(assignment => assignment.val.eval({}, params))];\r\n\t\t} else {\r\n\t\t\tvar columns = this.COLUMNS_LIST || (tableSchema.fields ? Object.keys(tableSchema.fields) : []);\r\n\t\t\tif (insertType === 'SELECT') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvalues = (await values.eval(context, params)).map(row => Object.values(row));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tthrow new Error('[\"' + values.stringify() + '\" in SELECT clause]: ' + e.message);\r\n\t\t\t\t}\r\n\t\t\t} else if (insertType === 'VALUES') {\r\n\t\t\t\tvalues = values.map(row => row.map(val => val.eval({}, params)));\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Invalid insert statement \"' + this + '\"!');\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolumns = columns.map(c => c + '');\r\n\r\n\t\tvar duplicateKeyCallback = this.UPDATE_CLAUSE ? newRow => {\r\n\t\t\tvar _params = {...params};\r\n\t\t\t_params.strictMode = false;\r\n\t\t\tthis.UPDATE_CLAUSE.forEach(assignment => assignment.eval({$: newRow}, _params));\r\n\t\t\treturn true\r\n\t\t} : (this.IGNORE ? () => false : null);\r\n\t\tvar keys = await tableBase.addAll(values, columns, duplicateKeyCallback, forceAutoIncrement);\r\n\r\n\t\treturn {\r\n\t\t\ttable: tableBase.name,\r\n\t\t\tkeys,\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\t// ---------------------\r\n\t\tvar t = params.t || 0, _t = (n = 0) => \"\\r\\n\" + (\"\\t\".repeat(Math.max(0, t + n))), _params = {...params}; _params.t = t + 1;\r\n\t\t// ---------------------\r\n\t\tvar str = [this.TABLE_REFERENCES.stringify(_params)];\r\n\t\tif (this.INSERT_TYPE.toUpperCase() === 'SET') {\r\n\t\t\tstr.push(_t(1) + 'SET ' + this.VALUES_LIST.map(assignment => assignment.stringify(_params)).join(', '));\r\n\t\t} else {\r\n\t\t\tif (this.COLUMNS_LIST.length) {\r\n\t\t\t\tstr.push('(' + this.COLUMNS_LIST.join(', ') + ')');\r\n\t\t\t}\r\n\t\t\tif (this.INSERT_TYPE.toUpperCase() === 'SELECT') {\r\n\t\t\t\tstr.push(this.VALUES_LIST.stringify(_params));\r\n\t\t\t} else {\r\n\t\t\t\tstr.push(_t() + 'VALUES ' + _t(1) + '(' + this.VALUES_LIST.map(\r\n\t\t\t\t\trow => row.map(\r\n\t\t\t\t\t\tval => val.stringify(_params)\r\n\t\t\t\t\t).join(', ')\r\n\t\t\t\t).join('),' + _t(1) + '(') + ')');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.UPDATE_CLAUSE) {\r\n\t\t\tstr.push(_t() + 'ON DUPLICATE KEY UPDATE ' + this.UPDATE_CLAUSE.map(assignment => assignment.stringify(_params)).join(', '));\r\n\t\t}\r\n\t\treturn 'INSERT ' + (this.IGNORE ? 'IGNORE ' : '') + 'INTO ' + str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.trim().match(/^INSERT([ ]+WITH[ ]+UAC)?([ ]+IGNORE)?([ ]+INTO)?/, 'i')) {\r\n\t\t\tvar withUac = false, ignore = false;\r\n\t\t\tif (expr.match(/INSERT[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tif (expr.match(/INSERT[ ]+IGNORE/i)) {\r\n\t\t\t\tignore = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+IGNORE/i, '');\r\n\t\t\t}\r\n\t\t\tvar parse = Lexer.lex(expr, Object.values(Insert.clauses), {useRegex:'i'});\r\n\t\t\tparse.tokens.shift();\r\n\t\t\tvar table = parse.tokens.shift().trim();\r\n\t\t\tvar columns = [];\r\n\t\t\tvar values = parse.tokens.shift();\r\n\t\t\tvar insertType = parse.matches[1].toUpperCase();\r\n\t\t\tif (insertType === 'SET') {\r\n\t\t\t\ttable = parseCallback(table, [Table]);\r\n\t\t\t\tvalues = Lexer.split(values.trim(), [','])\r\n\t\t\t\t\t.map(e => parseCallback(e.trim(), [Assignment]));\r\n\t\t\t} else {\r\n\t\t\t\tvar tableColumnSplit = Lexer.split(table, [' ']);\r\n\t\t\t\ttable = parseCallback(tableColumnSplit.shift().trim(), [Table]);\r\n\t\t\t\tif (tableColumnSplit.length) {\r\n\t\t\t\t\tcolumns = tableColumnSplit[0].trim();\r\n\t\t\t\t\tcolumns = Lexer.split(_wrapped(columns, '(', ')') ? _unwrap(columns, '(', ')') : columns, [','])\r\n\t\t\t\t\t\t.map(c => c.trim());\r\n\t\t\t\t}\r\n\t\t\t\tif (insertType === 'SELECT') {\r\n\t\t\t\t\tvalues = parseCallback('SELECT ' + values.trim());\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// insertType === 'VALUES' || insertType === 'VALUE'\r\n\t\t\t\t\tvalues = Lexer.split(values.trim(), [','])\r\n\t\t\t\t\t\t.map(row => Lexer.split(_unwrap(row.trim(), '(', ')'), [','])\r\n\t\t\t\t\t\t\t.map(val => parseCallback(val.trim())));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar onDuplicateKeyUpdate = parse.tokens.shift();\r\n\t\t\tif (onDuplicateKeyUpdate) {\r\n\t\t\t\tonDuplicateKeyUpdate = Lexer.split(onDuplicateKeyUpdate.trim(), [','])\r\n\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [Assignment]));\r\n\t\t\t}\r\n\t\t\tvar instance = new this(table, columns, values, withUac, ignore, insertType, onDuplicateKeyUpdate);\r\n\t\t\tinstance.parseCallback = parseCallback;\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nInsert.clauses = {\r\n\tTABLE_REFERENCES: 'INSERT([ ]+IGNORE)?([ ]+INTO)?',\r\n\tVALUES_LIST: '(VALUES|VALUE|SET|SELECT)',\r\n\tUPDATE_CLAUSE: 'ON[ ]+DUPLICATE[ ]+KEY[ ]+UPDATE',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'JoinConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport JoinInterface from './JoinInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Literal from './Literal.js';\r\nimport Table from './Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Join class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Join extends JoinInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(table, condition, conditionClause) {\r\n\t\tsuper();\r\n\t\tthis.table = table;\r\n\t\tthis.condition = condition;\r\n\t\tthis.conditionClause = conditionClause;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, params = {}) {\r\n\t\treturn this.table.eval(database, params).then(t => {\r\n\t\t\tt.join = {\r\n\t\t\t\ttype: this.type, // Expected to be added by context\r\n\t\t\t\tcondition: this.condition, \r\n\t\t\t\tconditionClause: this.conditionClause\r\n\t\t\t};\r\n\t\t\treturn t;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\treturn this.table.getName();\r\n\t}\t\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn this.table.getAlias();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.table.stringify(params), \r\n\t\t\tthis.conditionClause, \r\n\t\t\tthis.condition.stringify(params)\r\n\t\t].join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Join.clauses);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar clause = parse.matches[0];\r\n\t\t\tvar table = parseCallback(parse.tokens[0], [Table]);\r\n\t\t\tvar condition = clause.trim().toUpperCase() === 'USING' \r\n\t\t\t\t? parseCallback(parse.tokens[1], [Literal])\r\n\t\t\t\t: parseCallback(parse.tokens[1]);\r\n\t\t\treturn new this(\r\n\t\t\t\ttable,\r\n\t\t\t\tcondition, \r\n\t\t\t\tclause\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nJoin.clauses = [' on ', ' using ', ' ON ', ' USING ',];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Placeholder'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * SelectInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'SelectStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _pushUnique from '@webqit/util/arr/pushUnique.js';\r\nimport _find from '@webqit/util/obj/find.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SelectInterface from './SelectInterface.js';\r\nimport AggrInterface from '../grammar/AggrInterface.js';\r\nimport Field from '../grammar/Field.js';\r\nimport Window from '../grammar/Window.js';\r\nimport GroupBy from '../grammar/GroupBy.js';\r\nimport OrderBy from '../grammar/OrderBy.js';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Select class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Select extends _mixin(Stmt, SelectInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac = false, flags = [], vars = []) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t\tthis.flags = flags;\r\n\t\tthis.vars = vars;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Fields\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetFields(resolve = false) {\r\n\t\treturn this.exprs.SELECT_LIST;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Table component\r\n\t * \r\n\t * @return Object|array\r\n\t */\r\n\tgetTable() {\r\n\t\treturn this.exprs.TABLE_REFERENCES;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Table and Join components\r\n\t * \r\n\t * @params Bool resolve\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetSources(resolve = false) {\r\n\t\tvar joins = this.getJoins() || [];\r\n\t\treturn _arrFrom(this.exprs.TABLE_REFERENCES, false).concat(resolve ? joins.map(j => j.table) : joins);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Where component\r\n\t * \r\n\t * @return Object\r\n\t */\r\n\tgetWhere() {\r\n\t\treturn this.exprs.WHERE_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Join components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetJoins() {\r\n\t\treturn this.exprs.JOIN_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's GroupBy components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetGroupBy() {\r\n\t\treturn this.exprs.GROUP_BY_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Windows components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetWindows() {\r\n\t\treturn this.exprs.WINDOWS_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's OrderBy components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetOrderBy() {\r\n\t\treturn this.exprs.ORDER_BY_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Offset components\r\n\t * \r\n\t * @return string\r\n\t */\r\n\tgetOffset() {\r\n\t\treturn this.exprs.OFFSET_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Limit components\r\n\t * \r\n\t * @return string\r\n\t */\r\n\tgetLimit() {\r\n\t\treturn this.exprs.LIMIT_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(context, params = {}) {\r\n\t\t\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tthis.base = this.getBase(context, params);\r\n\t\t// BUILD (TEMP) ROWS, WHERE\r\n\t\tvar tempRows = [], tempRow;\r\n\t\twhile (tempRow = await this.base.fetch()) {\r\n\t\t\ttempRows.push(tempRow);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// BUILD RESPONSE ROWS INTO THE \"$\" KEY\r\n\t\t// ---------------------------\r\n\t\tvar applyFields = (tempRows, fields, collectAggrs = null) => {\r\n\t\t\tif (collectAggrs) {\r\n\t\t\t\tcollectAggrs = {aggr:[], win:[]};\r\n\t\t\t}\r\n\t\t\ttempRows.forEach(tempRow => {\r\n\t\t\t\tif (!tempRow.$) {\r\n\t\t\t\t\ttempRow.$ = {};\r\n\t\t\t\t}\r\n\t\t\t\tfields.forEach(field => {\r\n\t\t\t\t\tif (collectAggrs) {\r\n\t\t\t\t\t\t// This build will ignore AGGR columns for nowthis.\r\n\t\t\t\t\t\tvar aggrs = field.getAggrExprs();\r\n\t\t\t\t\t\tif (aggrs.length) {\r\n\t\t\t\t\t\t\t_pushUnique(aggrs.filter(x => x.window).length ? collectAggrs.win : collectAggrs.aggr, field);\r\n\t\t\t\t\t\t\t// But we'll set them to UNDEFINED (not NULL), to secure their slots\r\n\t\t\t\t\t\t\tif (!(field.getAlias() in tempRow.$)) {\r\n\t\t\t\t\t\t\t\ttempRow.$[field.getAlias()] = undefined;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar fieldValObject = field.eval(tempRow, context, params);\r\n\t\t\t\t\tObject.keys(fieldValObject).forEach(key => {\r\n\t\t\t\t\t\tObject.defineProperty(tempRow.$, key, Object.getOwnPropertyDescriptor(fieldValObject, key));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn collectAggrs;\r\n\t\t};\r\n\r\n\t\t// ---------------------------\r\n\t\t// UNDERSTAND AGGREGATIONS\r\n\t\t// ---------------------------\r\n\t\tvar aggrExprs = {aggr:[], win:[]};\r\n\t\tthis.vars.forEach(x => {\r\n\t\t\t//if (x instanceof AggrInterface) {\r\n\t\t\tif (x instanceof AggrInterface) {\r\n\t\t\t\t_pushUnique(x.window ? aggrExprs.win : aggrExprs.aggr, x);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// BUILD FIELDS\r\n\t\tvar aggrFields = applyFields(tempRows, this.getFields(), true/*collectAggrs*/);\r\n\r\n\t\t// ---------------------------\r\n\t\t// GROUP BY?\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.GROUP_BY_CLAUSE || aggrExprs.aggr.length) {\r\n\t\t\tvar groupBy = this.exprs.GROUP_BY_CLAUSE || new GroupBy([]);\r\n\t\t\ttempRows = groupBy.eval(tempRows, params);\r\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR columns\r\n\t\t\tapplyFields(tempRows, aggrFields.aggr);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// WINDOWING\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.WINDOWS_CLAUSE || aggrExprs.win.length) {\r\n\t\t\tvar completed = [];\r\n\t\t\taggrExprs.win.forEach(expr => {\r\n\t\t\t\tvar uuid = expr.window.stringify();\r\n\t\t\t\tif (completed.indexOf(uuid) === -1) {\r\n\t\t\t\t\texpr.window.eval(tempRows, this.exprs.WINDOWS_CLAUSE, params);\r\n\t\t\t\t\tcompleted.push(uuid);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR OVER () columns\r\n\t\t\tapplyFields(tempRows, aggrFields.win);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// ORDER BY\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.ORDER_BY_CLAUSE) {\r\n\t\t\ttempRows = this.exprs.ORDER_BY_CLAUSE.eval(tempRows, params);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// DISTINCT\r\n\t\t// ---------------------------\r\n\t\tif (this.flags.includes('DISTINCT')) {\r\n\t\t\ttempRows = tempRows.filter((tempRow, i) => i === _find(tempRows, _tempRow => _even(_tempRow, tempRow)));\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// LIMIT\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.OFFSET_CLAUSE || this.exprs.LIMIT_CLAUSE) {\r\n\t\t\tvar limit = this.exprs.LIMIT_CLAUSE ? this.exprs.LIMIT_CLAUSE.slice() : [];\r\n\t\t\tvar offset = this.exprs.OFFSET_CLAUSE || (limit.length === 2 ? limit.shift() : 0);\r\n\t\t\ttempRows = limit.length \r\n\t\t\t\t? tempRows.slice(offset, offset + limit[0]) \r\n\t\t\t\t: tempRows.slice(offset);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// SEND RESPONSE ROWS\r\n\t\t// ---------------------------\r\n\t\treturn tempRows.map(tempRow => tempRow.$);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.getToString(params, (clauseType, expr, clause, _params) => {\r\n\t\t\tif (clauseType === 'SELECT_LIST') {\r\n\t\t\t\treturn clause + ' ' + /*(this.flags.length ? ' ' + this.flags.join(' ') + ' ' : '') +*/ expr.map(x => x.stringify(_params)).join(', ');\r\n\t\t\t} else if (clauseType === 'WINDOWS_CLAUSE') {\r\n\t\t\t\treturn clause + ' ' + Object.keys(expr).map(\r\n\t\t\t\t\twindowName => windowName + ' AS ' + expr[windowName].stringify(_params)\r\n\t\t\t\t).join(', ');\r\n\t\t\t} else if (clauseType === 'GROUP_BY_CLAUSE' || clauseType === 'ORDER_BY_CLAUSE') {\r\n\t\t\t\treturn clause + ' ' + expr.stringify(_params);\r\n\t\t\t} else if (clauseType === 'LIMIT_CLAUSE') {\r\n\t\t\t\treturn clause + ' ' + expr.join(', ');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'select') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/SELECT[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar aliases = [];\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'SELECT_LIST') {\r\n\t\t\t\t\treturn Lexer.split(_expr, [',']).map(field => {\r\n\t\t\t\t\t\tvar field = parseCallback(field.trim(), [Field]);\r\n\t\t\t\t\t\taliases.push(field.getAlias());\r\n\t\t\t\t\t\treturn field;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (clauseType === 'WINDOWS_CLAUSE') {\r\n\t\t\t\t\tvar windowsByName = {};\r\n\t\t\t\t\tLexer.split(_expr, [',']).forEach(window => {\r\n\t\t\t\t\t\t// WINDOW w AS (PARTITION BY country ORDER BY city ASC, state DESC), u AS (...)\r\n\t\t\t\t\t\t// NOTICE the space around \"as\", important in view of \"city ASC\"\r\n\t\t\t\t\t\tvar windowSplit = window.split(new RegExp(' as ', 'i'));\r\n\t\t\t\t\t\twindowsByName[windowSplit[0].trim()] = parseCallback(windowSplit[1].trim(), [Window]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn windowsByName;\r\n\t\t\t\t} else if (clauseType === 'GROUP_BY_CLAUSE') {\r\n\t\t\t\t\treturn parseCallback(_expr, [GroupBy]);\r\n\t\t\t\t} else if (clauseType === 'ORDER_BY_CLAUSE') {\r\n\t\t\t\t\treturn parseCallback(_expr, [OrderBy]);\r\n\t\t\t\t} else if (clauseType === 'LIMIT_CLAUSE') {\r\n\t\t\t\t\treturn _expr.split(',').map(n => parseInt(n));\r\n\t\t\t\t}\r\n\t\t\t}, (literal, clauseType) => (clauseType === 'ORDER_BY_CLAUSE' || clauseType === 'GROUP_BY_CLAUSE') && aliases.includes(literal));\r\n\r\n\t\t\treturn new this(\r\n\t\t\t\tstmtParse.exprs, \r\n\t\t\t\tstmtParse.clauses, \r\n\t\t\t\twithUac,\r\n\t\t\t\tstmtParse.clauses.SELECT_LIST.replace(/SELECT/i, '').split(' ').filter(flag => flag),\r\n\t\t\t\tstmtParse.vars,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nSelect.clauses = {\r\n\tSELECT_LIST: 'SELECT([ ]+(ALL|DISTINCT))?',\r\n\tTABLE_REFERENCES: 'FROM',\r\n\tWHERE_CLAUSE: 'WHERE',\r\n\t// INNER JOIN, CROSS JOIN, {LEFT|RIGHT} [OUTER] JOIN\r\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n\tGROUP_BY_CLAUSE: 'GROUP[ ]+BY',\r\n\tWINDOWS_CLAUSE: 'WINDOW',\r\n\tORDER_BY_CLAUSE: 'ORDER[ ]+BY',\r\n\tOFFSET_CLAUSE: 'OFFSET',\r\n\tLIMIT_CLAUSE: 'LIMIT',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * UnionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'UnionConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@webqit/subscript/src/grammar.js';\r\n\r\n/**\r\n * ---------------------------\r\n * UpdateInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'UpdateStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport UpdateInterface from './UpdateInterface.js';\r\nimport { Assignment } from '@webqit/subscript/src/grammar.js';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Update class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Update extends _mixin(Stmt, UpdateInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(database, params = {}) {\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tvar _params = {...params};\r\n\t\t_params.mode = 'readwrite';\r\n\t\tthis.base = this.getBase(database, _params);\r\n\t\tvar rowComposition;\r\n\t\twhile(rowComposition = await this.base.fetch()) {\r\n\t\t\tthis.exprs.ASSIGNMENT_LIST.forEach(assignment => assignment.eval(rowComposition, params));\r\n\t\t}\r\n\t\tvar __keys = await this.base.syncCursors();\r\n\t\tvar __tables = await Promise.all(this.base.joins.concat(this.base.main)).then(list => list.map(t => t.name));\r\n\t\treturn {\r\n\t\t\ttables: __tables,\r\n\t\t\tkeys: __keys,\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.getToString(params, (clauseType, expr, clause, _params, _t) => {\r\n\t\t\tif (clauseType === 'ASSIGNMENT_LIST') {\r\n\t\t\t\treturn clause + ' ' + expr.map(assignment => assignment.stringify(_params)).join(', ');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'update') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/UPDATE[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'ASSIGNMENT_LIST') {\r\n\t\t\t\t\treturn Lexer.split(_expr, [','])\r\n\t\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [Assignment]));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn new this(stmtParse.exprs, stmtParse.clauses, withUac);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nUpdate.clauses = {\r\n\tTABLE_REFERENCES: 'UPDATE',\r\n\tASSIGNMENT_LIST: 'SET',\r\n\tWHERE_CLAUSE: 'WHERE',\r\n\t// inner join, cross join, {left|right} [outer] join\r\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n// Reuse\r\nimport {\r\n\tAbstraction,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tMath,\r\n\tNum,\r\n\tStr,\r\n\tVoid,\r\n} from '@webqit/subscript/src/grammar.js';\r\nimport {\r\n\tAbstractionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n} from '@webqit/subscript/src/grammar.js';\r\n// Extended\r\nimport {\r\n\tAssertionInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tReferenceInterface,\r\n} from '@webqit/subscript/src/grammar.js';\r\nimport Assertion from './grammar/Assertion.js';\r\nimport Comparison from './grammar/Comparison.js';\r\nimport Condition from './grammar/Condition.js';\r\nimport Reference from './grammar/Reference.js';\r\n// New types\r\nimport Aggr from './grammar/Aggr.js';\r\nimport AggrInterface from './grammar/AggrInterface.js';\r\nimport ArrowReference from './grammar/ArrowReference.js';\r\nimport ArrowReferenceInterface from './grammar/ArrowReferenceInterface.js';\r\nimport Delete from './statement/Delete.js';\r\nimport DeleteInterface from './statement/DeleteInterface.js';\r\nimport Field from './grammar/Field.js';\r\nimport FieldInterface from './grammar/FieldInterface.js';\r\nimport GroupBy from './grammar/GroupBy.js';\r\nimport GroupByInterface from './grammar/GroupByInterface.js';\r\nimport Insert from './statement/Insert.js';\r\nimport InsertInterface from './statement/InsertInterface.js';\r\nimport Join from './grammar/Join.js';\r\nimport JoinInterface from './grammar/JoinInterface.js';\r\nimport OrderBy from './grammar/OrderBy.js';\r\nimport OrderByInterface from './grammar/OrderByInterface.js';\r\nimport Placeholder from './grammar/Placeholder.js';\r\nimport PlaceholderInterface from './grammar/PlaceholderInterface.js';\r\nimport Select from './statement/Select.js';\r\nimport SelectInterface from './statement/SelectInterface.js';\r\nimport Table from './grammar/Table.js';\r\nimport TableInterface from './grammar/TableInterface.js';\r\nimport Union from './statement/Union.js';\r\nimport UnionInterface from './statement/UnionInterface.js';\r\nimport Update from './statement/Update.js';\r\nimport UpdateInterface from './statement/UpdateInterface.js';\r\nimport Window from './grammar/Window.js';\r\nimport WindowInterface from './grammar/WindowInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nexport default {\r\n\t// Statements and union\r\n\tUnion: Union,\t\t\t\t// ... UNION ...\r\n\tSelect: Select,\t\t\t\t// SELECT ... FROM ...\r\n\tInsert: Insert,\t\t\t\t// INSERT INTO ...\r\n\tUpdate: Update,\t\t\t\t// UPDATE ...\r\n\tDelete: Delete,\t\t\t\t// DELETE FROM ...\r\n\t// Expressions\r\n\tJoin: Join,\t\t\t\t\t// table2 ON|USING ...\r\n\tAbstraction: Abstraction,\t// (...)\r\n\tCondition: Condition,\t\t// IF(..., ..., ...)\r\n\tAssertion: Assertion,\t\t// !field1 OR field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tAggr: Aggr,\t\t\t\t\t// MIN() OVER()\r\n\tCall: Call,\t\t\t\t\t// COUNT()\r\n\tPlaceholder: Placeholder,\t// ? :var\r\n\tArrowReference, ArrowReference, // ref1 ~> ref2\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tAggr,\r\n\tArrowReference,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDelete,\r\n\tField,\r\n\tGroupBy,\r\n\tInsert,\r\n\tJoin,\r\n\tMath,\r\n\tNum,\r\n\tOrderBy,\r\n\tPlaceholder,\r\n\tReference,\r\n\tSelect,\r\n\tStr,\r\n\tTable,\r\n\tUnion,\r\n\tUpdate,\r\n\tVoid,\r\n\tWindow\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tAggrInterface,\r\n\tArrowReferenceInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeleteInterface,\r\n\tFieldInterface,\r\n\tGroupByInterface,\r\n\tInsertInterface,\r\n\tJoinInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tOrderByInterface,\r\n\tPlaceholderInterface,\r\n\tReferenceInterface,\r\n\tSelectInterface,\r\n\tStrInterface,\r\n\tTableInterface,\r\n\tUnionInterface,\r\n\tUpdateInterface,\r\n\tVoidInterface,\r\n\tWindowInterface\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport OrderBy from '../grammar/OrderBy.js';\r\nimport UnionInterface from './UnionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Union class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Union extends UnionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(query, queries, orderBy = null, limit = null) {\r\n\t\tsuper();\r\n\t\tthis.query = query;\r\n\t\tthis.queries = queries;\r\n\t\tthis.orderBy = orderBy;\r\n\t\tthis.limit = limit;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [[this.query.stringify(params)].concat(\r\n\t\t\tthis.queries.map(q => (q.onDuplicate ? q.onDuplicate.toUpperCase() + ' ' : '') + q.select.stringify(params))\r\n\t\t).join(' UNION ')];\r\n\t\tif (this.orderBy) {\r\n\t\t\tstr.push('ORDER BY ' + this.orderBy.stringify(params));\r\n\t\t}\r\n\t\tif (this.limit) {\r\n\t\t\tstr.push('LIMIT ' + this.limit.join(', '));\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = null;\r\n\t\tvar paramsRegex = {useRegex: 'i'};\r\n\t\tif ((parse = Lexer.lex(expr, [' UNION([ ]+(ALL|DISTINCT))? '], paramsRegex)) && parse.matches.length) {\r\n\t\t\tvar selects = parse.tokens;\r\n\t\t\tvar clauses = parse.matches;\r\n\t\t\tvar orderBy = null;\r\n\t\t\tvar limit = null;\r\n\t\t\t// Are the selects parenthisized? Then there could be outer ORDER BY / LIMIT clauses\r\n\t\t\tif (selects[0].trim().startsWith('(')) {\r\n\t\t\t\tvar lastStmtSplit = Lexer.lex(selects.pop(), ['ORDER[ ]+BY', 'LIMIT'], paramsRegex);\r\n\t\t\t\tselects.push(lastStmtSplit.tokens.shift());\r\n\t\t\t\tlastStmtSplit.matches.forEach(clause => {\r\n\t\t\t\t\tvar _expr = lastStmtSplit.tokens.shift().trim();\r\n\t\t\t\t\tif (clause.toUpperCase().startsWith('ORDER')) {\r\n\t\t\t\t\t\torderBy = parseCallback(_expr, [OrderBy]);\r\n\t\t\t\t\t} else if (clause.toUpperCase().startsWith('LIMIT')) {\r\n\t\t\t\t\t\tlimit = _expr.split(',').map(n => parseInt(n));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(selects.shift().trim()),\r\n\t\t\t\tselects.map((select, i) => {return {\r\n\t\t\t\t\tselect: parseCallback(select.trim()),\r\n\t\t\t\t\tonDuplicate: (clauses[i].match(new RegExp('ALL|DISTINCT', 'i')) || [])[0]\r\n\t\t\t\t}}),\r\n\t\t\t\torderBy,\r\n\t\t\t\tlimit\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tCondition as _Condition\r\n} from '@webqit/subscript/src/grammar.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends _Condition {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn 'IF (' + [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.match(/^if[ ]*?\\(/i)) {\r\n\t\t\tvar tokens = Lexer.split(_unwrap(expr.trim().substr(2).trim(), '(', ')'), [',']);\r\n\t\t\tif (tokens.length !== 3) {\r\n\t\t\t\tthrow new Error('Malformed condition expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(...tokens.map(expr => parseCallback(expr.trim())));\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport PlaceholderInterface from './PlaceholderInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Placeholder extends PlaceholderInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(name, notation) {\r\n\t\tsuper();\r\n\t\tthis.name = _isNumeric(name) ? parseInt(name) : name;\r\n\t\tthis.notation = notation;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, params = {}) {\r\n\t\tif (typeof this.name === 'number') {\r\n\t\t\tif (!params.vars) {\r\n\t\t\t\tthrow new Error('Annonymous placeholders require a \"params.vars\" array to be resolved.');\r\n\t\t\t}\r\n\t\t\treturn params.vars[this.name];\r\n\t\t}\r\n\t\tif (!params.vars) {\r\n\t\t\tthrow new Error('Named placeholders require a \"params.vars\" object to be resolved.');\r\n\t\t}\r\n\t\treturn params.vars[this.name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.notation === '?' ? '?' : this.notation + this.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.startsWith('?') || expr.startsWith(':')) {\r\n\t\t\treturn new this(expr.substr(1), expr.substr(0, 1));\r\n\t\t}\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Parser from './Parser.js';\r\nimport grammar from './grammar.js';\r\nimport ODB from './database/odb/ODBFactory.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nParser.grammar = grammar;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Parser;\r\nexport {\r\n\tODB,\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Factory from '../_Factory.js';\r\nimport ODBDatabase from './ODBDatabase.js';\r\nimport ObjSQL from '../../index.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBFactory class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBFactory extends _Factory {\r\n\r\n    /**\r\n     * ---------\r\n     * QUERY\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * @inheritdoc\r\n\t */\r\n\tstatic async _query(query, params = {}) {\r\n        params.DB_FACTORY = this;\r\n        return ObjSQL.parse(query, null, params).eval(this);\r\n    }\r\n    \r\n    /**\r\n     * ---------\r\n     * API\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * Returns a list of database definitions.\r\n     * \r\n     * @return Array\r\n\t */\r\n\tstatic async list() {\r\n        return Object.keys(this.databases).map(d => { return {name: d, version: 0}; });\r\n\t}\r\n\t \r\n\t/**\r\n\t * Opens a database.\r\n\t * \r\n\t * @inheritdoc\r\n\t */\r\n\tstatic async open(databaseName = this.defaultDB, version = 0) {\r\n\t\treturn new ODBDatabase(this.databases[databaseName], this.schema[databaseName]);\r\n\t}\r\n\t\r\n    /**\r\n     * ---------\r\n     * DATABASE\r\n     * ---------\r\n     */\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array  schema\r\n     * @param String  onExist\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async _create(databaseName, schema, onExist = null) {\r\n        if (!this.databases[databaseName]) {\r\n            this.databases[databaseName] = {};\r\n        }\r\n        if ((schema || []).length) {\r\n            schema.forEach(_schema => {\r\n                if (!this.databases[databaseName][_schema.name]) {\r\n                    this.databases[databaseName][_schema.name] = [];\r\n                }\r\n            });\r\n        }\r\n        return new ODBDatabase(this.databases[databaseName], this.schema[databaseName]);\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async _drop(databaseName) {\r\n        delete this.databases[databaseName];\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Databases storage.\r\n * \r\n * @var Object\r\n */\r\nODBFactory.databases = {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _Cursor from '../_Cursor.js';\r\n\r\n\r\n/**\r\n * ---------------------------\r\n * IDBCursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class IDBCursor extends _Cursor {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(store) {\r\n\t\tsuper([]);\r\n\t\t// ---------------\r\n\t\tthis._store = store;\r\n\t\t// ---------------\r\n\t\tthis._storeFetch = new Promise(async resolve => {\r\n\t\t\tvar store = await this._store;\r\n\t\t\tvar getAllRequest = store.getAll();\r\n\t\t\tgetAllRequest.onsuccess = e => {\r\n\t\t\t\tthis.cache = _arrFrom(e.target.result);\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync fetch() {\r\n\t\tawait this._storeFetch;\r\n\t\treturn super.fetch();\r\n\t}\r\n};","\r\n/**\r\n * ---------------------------\r\n * IDBProgressiveCursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class IDBProgressiveCursor {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(store) {\r\n\t\t// ---------------\r\n\t\tthis._store = store;\r\n\t\t// ---------------\r\n\t\tthis.cache = [];\r\n\t\tthis.key = 0;\r\n\t\tthis._onfinish = [];\r\n\t\tthis.flags = {};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tnext() {\r\n\t\tif (!this._eof) {\r\n\t\t\tif (!this._cursorRequest) {\r\n\t\t\t\tthrow new Error('fetch() must be called before calling next()');\r\n\t\t\t}\r\n\t\t\tthis.key ++;\r\n\t\t} else {\r\n\t\t\tif (!this.cache.length || this.key === this.cache.length - 1) {\r\n\t\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t\t\tthis.key = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.key ++;\r\n\t\t}\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teof() {\r\n\t\t// The store must reach eof before we can be correct with this.cache.length\r\n\t\treturn this._eof && (!this.cache.length || this.key === this.cache.length - 1);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync fetch() {\r\n\t\tvar store = await this._store;\r\n\t\treturn new Promise(resolve => {\r\n\t\t\t// After having filled this.cache from store\r\n\t\t\tif (this._eof || this.key < this.cache.length) {\r\n\t\t\t\tresolve(this.cache[this.key]);\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._countRequest) {\r\n\t\t\t\t\t// First time reading from store\r\n\t\t\t\t\tthis._countRequest = store.count();\r\n\t\t\t\t\tthis._countRequest.onsuccess = e => {\r\n\t\t\t\t\t\tthis._count = e.target.result;\r\n\t\t\t\t\t\tthis._cursorRequest = store.openCursor();\r\n\t\t\t\t\t\tthis._handleCursorFetch(resolve);\r\n\t\t\t\t\t\tthis._continueCursor = () => this._cursor.continue();\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._handleCursorFetch(resolve);\r\n\t\t\t\t\tthis._continueCursor();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Helps handle cursor result\r\n\t * \r\n\t * @param Function resolve\r\n\t * \r\n\t * @return void\r\n\t */\r\n\t_handleCursorFetch(resolve) {\r\n\t\tthis._cursorRequest.onsuccess = e => {\r\n\t\t\tthis._cursor = e.target.result;\r\n\t\t\tif (this._cursor) {\r\n\t\t\t\tvar value = this._cursor.value;\r\n\t\t\t\tthis.cache.push(value);\r\n\t\t\t\tif (this.cache.length === this._count) {\r\n\t\t\t\t\tthis._eof = true;\r\n\t\t\t\t}\r\n\t\t\t\tresolve(value);\r\n\t\t\t} else {\r\n\t\t\t\tthis._eof = true;\r\n\t\t\t\tresolve();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport DuplicateKeyViolationError from '../DuplicateKeyViolationError.js';\r\nimport _Store from '../_Store.js';\r\nimport IDBCursor from './IDBCursor.js';\r\nimport IDBProgressiveCursor from './IDBProgressiveCursor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IDBStore class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class IDBStore extends _Store {\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t * \r\n\t * @return IDBCursor\r\n\t */\r\n\tgetCursor() {\r\n\t\treturn new IDBCursor(this.store());\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t * \r\n\t * @return IDBProgressiveCursor\r\n\t */\r\n\tgetProgressiveCursor() {\r\n\t\treturn new IDBProgressiveCursor(this.store());\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAll() {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tvar getAllRequest = (this.tx_store || this.store('readonly')).getAll();\r\n\t\t\tgetAllRequest.onsuccess = e => resolve(_arrFrom(e.target.result));\r\n\t\t\tgetAllRequest.onerror = e => reject(e.target.error);\r\n\t\t});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tget(primaryKey) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t// Now this is very important\r\n\t\t\tprimaryKey = _isNumeric(primaryKey) ? parseInt(primaryKey) : primaryKey;\r\n\t\t\tvar getRequest = (this.tx_store || this.store('readonly')).get(primaryKey);\r\n\t\t\tgetRequest.onsuccess = e => resolve(e.target.result);\r\n\t\t\tgetRequest.onerror = e => reject(e.target.error);\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tcount(...query) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tvar countRequest = this.store().count(...query);\r\n\t\t\tcountRequest.onsuccess = e => resolve(e.target.result);\r\n\t\t\tcountRequest.onerror = e => reject(e.target.error);\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\taddAll(multiValues, columns = [], duplicateKeyCallback = null) {\r\n\t\tthis.tx_store = this.store();\r\n\t\treturn super.addAll(...arguments);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(rowObj) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tvar addRequest = (this.tx_store || this.store()).add(rowObj);\r\n\t\t\taddRequest.onsuccess = e => resolve(e.target.result);\r\n\t\t\taddRequest.onerror = e => {\r\n\t\t\t\tvar error = e.target.error;\r\n\t\t\t\tif (error.name === 'ConstraintError') {\r\n\t\t\t\t\treject(new DuplicateKeyViolationError(error.message));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tputAll(rowObj) {\r\n\t\tthis.tx_store = this.store();\r\n\t\treturn super.putAll(...arguments);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tput(rowObj) {\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tvar putRequest = (this.tx_store || this.store()).put(rowObj);\r\n\t\t\tputRequest.onsuccess = e => resolve(e.target.result);\r\n\t\t\tputRequest.onerror = e => reject(e.target.error);\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tdeleteAll(primaryKey) {\r\n\t\tthis.tx_store = this.store();\r\n\t\treturn super.deleteAll(...arguments);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tdelete(primaryKey) {\r\n\t\tif (_isArray(primaryKey)) {\r\n\t\t\tif (primaryKey.length > 1) {\r\n\t\t\t\tthrow new Error('IDB does not support Composite Primary Keys');\r\n\t\t\t}\r\n\t\t\tprimaryKey = primaryKey[0];\r\n\t\t}\r\n\t\t// Now this is very important\r\n\t\tprimaryKey = _isNumeric(primaryKey) ? parseInt(primaryKey) : primaryKey;\r\n\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\tvar delRequest = (this.tx_store || this.store()).delete(primaryKey);\r\n\t\t\tdelRequest.onsuccess = e => resolve(primaryKey);\r\n\t\t\tdelRequest.onerror = e => reject(e.target.error);\r\n\t\t});\r\n\t}\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _max from '@webqit/util/arr/max.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _Database from '../_Database.js';\r\nimport IDBStore from './IDBStore.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IDBDatabase class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class IDBDatabase extends _Database {\r\n\t\r\n    /**\r\n     * Returns store names.\r\n     * \r\n     * @return void\r\n     */\r\n    async list() {\r\n        return _arrFrom(this.database.objectStoreNames);\r\n    }\r\n\t \r\n\t/**\r\n\t * Opens a store.\r\n     * \r\n     * @param String  storeName\r\n     * @param String  mode\r\n     * @param Object params\r\n     * \r\n     * @return IDBStore\r\n\t */\r\n\topen(storeName, mode = 'readonly', params = {}) {\r\n        var getter = _mode => {\r\n            var transaction = this.database.transaction([storeName], _mode || mode);\r\n            // We can worry not about onerror, onabort, oncomplete\r\n            return transaction.objectStore(storeName);\r\n        };\r\n        params.mode = mode;\r\n\t\treturn new IDBStore(getter, storeName, this.schema[storeName], params);\r\n\t}\r\n\r\n    /**\r\n     * Creates a store\r\n     * \r\n     * @param String  storeName\r\n     * @param Object schema\r\n     * @param String  onExists\r\n     * \r\n     * @return IDBStore\r\n     */\r\n    _create(storeName, schema, onExists = null) {\r\n        return new Promise(resolve => {\r\n            // Define schema\r\n            var store;\r\n            const onupgradeneeded = e => {\r\n                store = databaseCreateSchema(e.target.result, [schema], onExists)[0];\r\n            };\r\n            // Catch success\r\n            const onsuccess = e => {\r\n                if (!store) {\r\n                    throw new Error('Store name \"' + storeName + '\" could not be created!');\r\n                }\r\n                resolve(this.open(storeName, 'readwrite'));\r\n            };\r\n            // Connect...\r\n            openDatabase(this.name, this.version, onsuccess, onupgradeneeded, true/* forceUpgrade */);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Drops a store.\r\n     * \r\n     * @param String  storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    _drop(storeName) {\r\n         return new Promise(resolve => {\r\n            // Define schema\r\n            var upgradeneeded;\r\n            const onupgradeneeded = e => {\r\n                upgradeneeded = true;\r\n                var database = e.target.result;\r\n                // Create store...\r\n                if (!database.objectStoreNames.contains(storeName)) {\r\n                    throw new Error('Store name \"' + storeName + '\" does not exist!');\r\n                 }\r\n                // TODO: allow to migrate data from old store\r\n                database.deleteObjectStore(storeName);\r\n            };\r\n            // Catch success\r\n            const onsuccess = e => {\r\n                if (!upgradeneeded) {\r\n                    throw new Error('Store name \"' + storeName + '\" could not be deleted!');\r\n                }\r\n                resolve(true);\r\n            };\r\n            // Connect...\r\n            openDatabase(this.name, this.version, onsuccess, onupgradeneeded, true/* forceUpgrade */);\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * ---------\r\n * HELPERS\r\n * ---------\r\n */\r\n\r\n/**\r\n * Helps open a database.\r\n * \r\n * @param String databaseName \r\n * @param String databaseVersion \r\n * @param Function onsuccess \r\n * @param Function onupgradeneeded\r\n * @param Bool forceUpgrade\r\n * \r\n * @return void\r\n */\r\nexport const openDatabase = (databaseName, databaseVersion, onsuccess, onupgradeneeded, forceUpgrade = false) => {\r\n    if (typeof indexedDB === 'undefined') {\r\n        throw new Error('IndexedDB is not available in the current environment.')\r\n    }\r\n    (async () => {\r\n        if (forceUpgrade) {\r\n            var exisitingVersions = (await IDBSchema._getDatabases()).filter(d => d.name === databaseName).map(d => d.version);\r\n            if (exisitingVersions.length) {\r\n                var maxExistingVersion = parseInt(_max(exisitingVersions));\r\n                if (databaseVersion <= maxExistingVersion) {\r\n                    databaseVersion = maxExistingVersion + 1;\r\n                }\r\n            }\r\n        }\r\n        var dbOpenRequest = indexedDB.open(databaseName, databaseVersion);\r\n        // Catch success\r\n        dbOpenRequest.onsuccess = onsuccess;\r\n        dbOpenRequest.onupgradeneeded = onupgradeneeded;\r\n    })();\r\n};\r\n\r\n/**\r\n * Helps create Object Stores\r\n * \r\n * @param IDBDatabase database \r\n * @param Array schema \r\n * @param String onExists\r\n * \r\n * @return void\r\n */\r\nexport const databaseCreateSchema = (database, schema, onExists) => {\r\n    return schema.map(storeSchema => {\r\n        if (!storeSchema.driver) {\r\n            storeSchema.driver = 'IDB';\r\n        }\r\n        // Create store...\r\n        var storeExistence;\r\n        if (database.objectStoreNames.contains(storeSchema.name)) {\r\n            if (!onExists) {\r\n                throw new Error('Store name \"' + storeSchema.name + '\" already exists!');\r\n            }\r\n            if (onExists === 'drop') {\r\n                // TODO: allow to migrate data from old store\r\n                database.deleteObjectStore(storeSchema.name);\r\n            } else {\r\n                storeExistence = true;\r\n            }\r\n        }\r\n        var storeParams = {};\r\n        // ...with primary key\r\n        if (storeSchema.primaryKey) {\r\n            storeParams.keyPath = storeSchema.primaryKey;\r\n            if (storeSchema.autoIncrement) {\r\n                storeParams.autoIncrement = true;\r\n            }\r\n        }\r\n        var store;\r\n        if (storeExistence) {\r\n            var transaction = database.transaction([storeSchema.name], 'readwrite');\r\n            store = transaction.objectStore(storeSchema.name);\r\n        } else {\r\n            store = database.createObjectStore(storeSchema.name, storeParams);\r\n        }\r\n        // Create Unique keys\r\n        if (storeSchema.uniqueKeys) {\r\n            _each(storeSchema.uniqueKeys, (indexName, keyPaths) => {\r\n                if (store.indexNames.contains(indexName)) {\r\n                    store.deleteIndex(indexName);\r\n                }\r\n                store.createIndex(indexName, keyPaths, {unique: true});\r\n            });\r\n        }\r\n        return store;\r\n    });\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Factory from '../_Factory.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport IDBDatabase, { databaseCreateSchema } from './IDBDatabase.js';\r\nimport ObjSQL from '../../index.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IDBFactory class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class IDBFactory extends _Factory {\r\n\r\n    /**\r\n     * ---------\r\n     * QUERY\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * @inheritdoc\r\n\t */\r\n\tstatic async _query(query, params = {}) {\r\n        params.DB_FACTORY = this;\r\n        return ObjSQL.parse(query, null, params).eval(this);\r\n    }\r\n\r\n    /**\r\n     * ---------\r\n     * API\r\n     * ---------\r\n     */\r\n\r\n    /**\r\n     * Returns a list of databases.\r\n     * \r\n     * @inheritdoc\r\n     */\r\n    static async list() {\r\n\t\tassertIndexedDBSupport();\r\n        return _arrFrom(await indexedDB.databases());\r\n    }\r\n\t \r\n\t/**\r\n\t * Opens a database.\r\n\t * \r\n\t * @inheritdoc\r\n\t */\r\n\tstatic open(databaseName = this.defaultDB, version = 1) {\r\n        assertIndexedDBSupport();\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tvar dbOpenRequest = indexedDB.open(databaseName, version);\r\n\t\t\tdbOpenRequest.onsuccess = e => {\r\n\t\t\t\tresolve(new IDBDatabase(e.target.result, this.schema[databaseName]));\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n     * ---------\r\n     * DATABASE\r\n     * ---------\r\n     */\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array  schema\r\n     * @param String  onExist\r\n     * \r\n     * @return Bool\r\n     */\r\n    static _create(databaseName, schema, onExist = false) {\r\n        assertIndexedDBSupport();\r\n        return new Promise(resolve => {\r\n            var dbOpenRequest = indexedDB.open(databaseName);\r\n            // Define schema?\r\n            if ((schema || []).length) {\r\n                dbOpenRequest.onupgradeneeded = e => {\r\n                    databaseCreateSchema(e.target.result, schema);\r\n                };\r\n            }\r\n            // Catch success\r\n            dbOpenRequest.onsuccess = e => resolve(new IDBDatabase(e.target.result, this.schema[databaseName]));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @inheritdoc\r\n     */\r\n    static _drop(databaseName) {\r\n        assertIndexedDBSupport();\r\n        return new Promise(resolve => {\r\n            var dbDeleteRequest = indexedDB.deleteDatabase(databaseName);\r\n            // Catch success\r\n            dbDeleteRequest.onsuccess = e => resolve(true);\r\n        });\r\n    }\r\n};\r\n\r\n// ----------------------------\r\n\r\nconst assertIndexedDBSupport = () => {\r\n\tif (typeof indexedDB === 'undefined') {\r\n\t\tthrow new Error('IndexedDB is not available in the current environment.')\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ODB from './database/odb/ODBFactory.js';\r\nimport IDB from './database/idb/IDBFactory.js';\r\n\r\n// As globals\r\nif (!window.WQ) {\r\n\twindow.WQ = {};\r\n}\r\nwindow.WQ.ObjectiveSQL = {\r\n\tODB,\r\n\tIDB\r\n};\r\n"],"sourceRoot":""}