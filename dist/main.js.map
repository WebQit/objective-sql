{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../jsen/node_modules/@web-native-js/commons/js/isArray.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isTypeFunction.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isFunction.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isObject.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isTypeObject.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isNumeric.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/getAllPropertyNames.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/getPrototypeChain.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/pushUnique.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/mergeCallback.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/merge.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isNull.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isUndefined.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/instanceof.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isNumber.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isPlainObject.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isBoolean.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/each.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/even.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/compareCallback.js","webpack:///../jsen/src/ExprInterface.js","webpack:///../jsen/src/Expr/ReferenceInterface.js","webpack:///../jsen/src/Expr/CallInterface.js","webpack:///../jsen/src/Expr/FuncInterface.js","webpack:///../jsen/src/Expr/IfInterface.js","webpack:///../jsen/src/Jsen.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isString.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/from.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isEmpty.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isTypeArray.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/flatten.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/first.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/last.js","webpack:///../jsen/node_modules/@web-native-js/commons/obj/copyPlain.js","webpack:///../jsen/src/Lexer.js","webpack:///../jsen/src/Contexts.js","webpack:///../jsen/node_modules/@web-native-js/commons/js/isClass.js","webpack:///../jsen/node_modules/@web-native-js/commons/str/wrapped.js","webpack:///../jsen/node_modules/@web-native-js/commons/str/after.js","webpack:///../jsen/node_modules/@web-native-js/commons/str/before.js","webpack:///../jsen/node_modules/@web-native-js/commons/str/unwrap.js","webpack:///../jsen/node_modules/@web-native-js/commons/str/beforeLast.js","webpack:///../jsen/src/Expr/AbstractionInterface.js","webpack:///../jsen/src/Expr/Abstraction.js","webpack:///../jsen/src/Expr/ArrInterface.js","webpack:///../jsen/src/Expr/Arr.js","webpack:///../jsen/src/Expr/ArgumentsInterface.js","webpack:///../jsen/src/Expr/Arguments.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/unique.js","webpack:///../jsen/src/Expr/AssertionInterface.js","webpack:///../jsen/src/Expr/Assertion.js","webpack:///../jsen/src/Expr/AssignmentInterface.js","webpack:///../jsen/src/Expr/Assignment.js","webpack:///../jsen/src/Expr/BlockInterface.js","webpack:///../jsen/src/Expr/ReturnInterface.js","webpack:///../jsen/src/Expr/Block.js","webpack:///../jsen/src/Expr/BoolInterface.js","webpack:///../jsen/src/Expr/Bool.js","webpack:///../jsen/src/Expr/Call.js","webpack:///../jsen/src/Expr/ComparisonInterface.js","webpack:///../jsen/src/Expr/Comparison.js","webpack:///../jsen/src/Expr/ConditionInterface.js","webpack:///../jsen/src/Expr/Condition.js","webpack:///../jsen/src/Expr/DeletionInterface.js","webpack:///../jsen/src/Expr/Deletion.js","webpack:///../jsen/src/Expr/Func.js","webpack:///../jsen/src/Expr/If.js","webpack:///../jsen/node_modules/@web-native-js/commons/arr/intersect.js","webpack:///../jsen/src/Expr/MathInterface.js","webpack:///../jsen/src/Expr/Math.js","webpack:///../jsen/src/Expr/NumInterface.js","webpack:///../jsen/src/Expr/Num.js","webpack:///../jsen/src/Expr/ObjInterface.js","webpack:///../jsen/src/Expr/Obj.js","webpack:///../jsen/src/Expr/PresenceInterface.js","webpack:///../jsen/src/Expr/Presence.js","webpack:///../jsen/src/Expr/Reference.js","webpack:///../jsen/src/Expr/Return.js","webpack:///../jsen/src/Expr/StrInterface.js","webpack:///../jsen/src/Expr/Str.js","webpack:///../jsen/src/Expr/VoidInterface.js","webpack:///../jsen/src/Expr/Void.js","webpack:///../jsen/src/index.js","webpack:///./src/Mql.js","webpack:///./src/ExprInterface.js","webpack:///../commons/arr/sum.js","webpack:///../commons/js/isUndefined.js","webpack:///../commons/js/isTypeFunction.js","webpack:///../commons/js/isFunction.js","webpack:///../commons/arr/pushUnique.js","webpack:///../commons/js/isArray.js","webpack:///../commons/js/isString.js","webpack:///../commons/js/isNull.js","webpack:///../commons/js/isTypeObject.js","webpack:///../commons/js/isEmpty.js","webpack:///../commons/js/isObject.js","webpack:///../commons/arr/from.js","webpack:///../commons/js/isTypeArray.js","webpack:///../commons/arr/remove.js","webpack:///../commons/arr/first.js","webpack:///../commons/js/isNumeric.js","webpack:///../commons/arr/flatten.js","webpack:///../commons/js/isBoolean.js","webpack:///../commons/arr/last.js","webpack:///../commons/arr/rand.js","webpack:///../commons/obj/each.js","webpack:///../commons/arr/unique.js","webpack:///../commons/obj/getAllPropertyNames.js","webpack:///../commons/obj/getPrototypeChain.js","webpack:///../commons/obj/mergeCallback.js","webpack:///../commons/js/mixin.js","webpack:///../commons/obj/merge.js","webpack:///../commons/obj/copy.js","webpack:///../commons/obj/find.js","webpack:///../commons/obj/from.js","webpack:///../commons/obj/get.js","webpack:///../commons/obj/inherit.js","webpack:///../commons/obj/percentageMatch.js","webpack:///../commons/str/after.js","webpack:///../commons/str/before.js","webpack:///../commons/str/beforeLast.js","webpack:///../commons/str/unwrap.js","webpack:///../commons/str/wrapped.js","webpack:///./src/Expr/Assertion.js","webpack:///./src/Expr/Reference.js","webpack:///./src/Expr/Assignment.js","webpack:///./src/Expr/Call.js","webpack:///./src/Expr/Comparison.js","webpack:///./src/Expr/Condition.js","webpack:///./src/Expr/AggrInterface.js","webpack:///./src/Expr/WindowInterface.js","webpack:///./src/Expr/OrderByInterface.js","webpack:///./src/Expr/OrderBy.js","webpack:///../commons/arr/sort.js","webpack:///./src/Expr/Window.js","webpack:///./src/Expr/Aggr.js","webpack:///./src/Schema.js","webpack:///./src/ArrowReference.js","webpack:///./src/Expr/SelectInterface.js","webpack:///./src/Expr/TableInterface.js","webpack:///./src/Expr/UnionInterface.js","webpack:///./src/Base/Table.js","webpack:///./src/Base/FetchInterface.js","webpack:///./src/Base/DerivedTable.js","webpack:///./src/Uac/Query.js","webpack:///./src/Uac/Client.js","webpack:///./src/Expr/Table.js","webpack:///./src/Expr/Stmt.js","webpack:///../commons/js/instanceof.js","webpack:///./src/Expr/DeleteInterface.js","webpack:///./src/Base/Cursor.js","webpack:///./src/Base/Row.js","webpack:///../commons/arr/avg.js","webpack:///../commons/arr/max.js","webpack:///../commons/arr/min.js","webpack:///./src/Base/Base.js","webpack:///./src/Expr/Delete.js","webpack:///./src/Expr/FieldInterface.js","webpack:///./src/Expr/Field.js","webpack:///./src/Expr/GroupByInterface.js","webpack:///./src/Expr/GroupBy.js","webpack:///./src/Expr/InsertInterface.js","webpack:///./src/Expr/Val.js","webpack:///./src/Expr/Insert.js","webpack:///../commons/arr/intersect.js","webpack:///./src/Expr/JoinInterface.js","webpack:///./src/Expr/Join.js","webpack:///./src/Expr/Select.js","webpack:///./src/Expr/Union.js","webpack:///./src/Expr/UpdateInterface.js","webpack:///./src/Expr/Update.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","arguments","undefined","classB","mixinTest","classA","Function","prototypes","reduce","prevAns","constructor","returnValue","keys","parseFloat","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","cache","expr","Parsers","params","Static","_parsed","allowCache","parseOne","parsers","values","grammars","parsed","assert","Parser","parse","_expr","_Parsers","_params","subStmt","lodge","ReferenceInterface","CallInterface","FuncInterface","IfInterface","_var","explain","castObject","slice","_flatten","withObjects","acc","concat","count","firsts","amount","reverse","filter","Lexer","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","limit","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","quote","block","startsWith","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","String","splitSeries2","regParse","stack","type","super","local","$local","props","trap","observe","a","b","fields","prop","_has","main","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","initKeyword","set","_set","cntxt","localContxtMeta","includes","deleteProperty","del","prop2","contextObj2","args","fn","exec","apply","execUnknown","has","subject","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","beforeLast","Abstraction","AbstractionInterface","context","eval","parseCallback","Arr","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","map","trim","split","Arguments","ArgumentsInterface","list","arg","index","self","Assertion","AssertionInterface","logic","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","reference","operator","getEval","BlockInterface","stmts","delim","results","stmt","ReturnInterface","prevContext","evalReturn","observeDown","data","tags","testBlockEnd","Bool","BoolInterface","state","Call","pop","Comparison","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","Condition","ConditionInterface","onTrue","onFalse","splits","Deletion","DeletionInterface","red","Func","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","newMainContext","defaultVal","nestedContext","headNoWrap","head","bodyNoWrap","body","funcHead","funcBody","param","paramSplit","If","newContext","onTrueIsBlock","onFalseIsBlock","rest","arr2","val1","val2","MathInterface","currentTotal","sub","Num","NumInterface","int","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","Reference","backticks","sourceContext","parts","subjectContext","separator","nameSplit","isContext","Return","exprLc","Str","StrInterface","Void","VoidInterface","Mql","mutates","opts","total","v","splice","rand","floor","random","Traps","classes","Base","supersMap","Mixin","_class","supers","supersReturnValues","supr","_find","deep","subKey","prev","curr","reciever","path","_ctxt","ctxt","_key","exists","AND","OR","isArrowReference","tempRow","isTableName","contexts","findContexts","isFieldName","arrowContext","_context","_c","tableName","instance","evalWithArgs","like","OrderBy","OrderByInterface","columns","withRollup","tempRows","order","rows","by","grouping","row","_for","_arr","sort","localeCompare","ordering","message","Window","WindowInterface","dfn","definitions","uuid","partitionBy","partitioning","partition","orderBy","WINDOWS","clauseType","Aggr","AggrInterface","unshift","window","AGGR","aggrMatch","aggrMatchRegex","funcs","funcName","funcCategory","normal","explicitOver","support","tables","tableDefinition","fieldName","fieldDefinition","referencedEntity","replace","base","table1","table2","isIncoming","actingKey","sourceTable","table","select","_sourceTable","primaryKey","foreignKey","alias","schema","cursor","rowObj","schemaColumns","unknownFields","col","schemaColumnName","keyColumnPosition","default","database","query","iterateOnce","USER","byRow","id","parent","lineage","privileges","where","uac","EXPLICIT_TABLE_ACCESS_QUERY","getExplicitRulesQuery","on","EXPLICIT_ROW_ACCESS_QUERY","attributionKey","account","ownerGuestRelationshipQuery","getOwnerGuestRelationshipQuery","AUTHOR_USER_RELATIONSHIP_QUERY","deriveEntityAccess","targetInLineageQuery","groupConcat","accessRightQueries","compiledAccessRights","right","accessType","withActingRights","entityAccess","getRightsRulesIntersectionExpression","rules","getGuestRightsExpression","fieldsAccesses","field","fieldAccess","rights","AUTHOR_USER_TOKEN_QUERY","rightsExpression","explicitFirstRule","nodeAccessAssertions","rule","ruleSql","OBJECT_QUERY","deriveFieldsAccess","accessPassExpression","organicRights","priorityAccounts","accountSchema","ACCOUNT_QUERY","getAuthorUserRelationshipQuery","accesses","overObject","orAsRelatedTo","withFields","objectId","standardAccesses","entityJson","fieldsJson","access","allFieldsJson","accessesDocs","TableInterface","claused","getSchema","tableData","getName","getAlias","derivedQuery","derivedTable","getTable","derivedTableSchema","derivedTableSchemaAliased","uniqueKeys","getFields","tableParse","withUac","SelectInterface","UnionInterface","strArray","clause","clauses","stmtClauses","_exprParse","__exprParse","joins","arrowReferences","smartJoins","arrowRef","baseTable","arrowRefEval","joinStmt","Cursor","_onfinish","next","column","vals","COLUMN","min","onColumns","isRollup","cum","byStr","columnStr","doc","JSON","doc1","doc2","onfinish","eof","baseAlias","baseRow","finishCallback","cursors","source","joinTable","joinRow","conditionClause","condition","shouldJoin","rowComposition","following","fetch","joinCursors","createJoinCursors","Delete","DeleteInterface","getToString","stmtParse","getParse","Field","FieldInterface","exprParse","GroupBy","GroupByInterface","having","groupBy","group","summaryRow","$","input","Insert","InsertInterface","insertType","onDuplicateKeyUpdate","tableBase","tableSchema","assignment","rowCount","rowArr","duplicateKeyUpdateCount","rowBase","comparisons","columnName","valueExpr","nameExpr","insert","tableColumnSplit","update","Join","JoinInterface","TableBase","Select","flags","references","windows","offset","aggrExprs","aggr","win","x","applyFields","collectAggrs","aggrs","tablessss","mainTable","_fields","_schema","_field","aggrFields","completed","_tempRow","_even","windowName","windowsByName","windowSplit","flag","Union","queries","q","onDuplicate","paramsRegex","selects","lastStmtSplit","Update","UpdateInterface","assignments","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = true) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'number';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _even from '@web-native-js/commons/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, trap = {})\r\n\t\r\n\t/**\r\n\t * Serializes the expression instance back to a string,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t//toString(context = null)\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _isEmpty from '@web-native-js/commons/js/isEmpty.js';\r\nimport _remove from '@web-native-js/commons/arr/remove.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _instanceof from '@web-native-js/commons/js/instanceof.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Jsen {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}, Static = Jsen) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !Parsers && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = Static.parseOne(expr, cache[expr], params, Static)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar parsers = Object.values(Parsers || Static.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\tvar parsed = Static.parseOne(expr, parsers[i], params, Static);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!Parsers && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = parsers[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error('[Syntax error:] ' + expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Parser, params = {}, Static = Jsen) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar vars = []\r\n\t\tvar parsed = Parser.parse(expr, (_expr, _Parsers, _params = {}) => {\r\n\t\t\tvar subStmt = Static.parse(_expr, _Parsers, _params ? _merge(params, _params) : params, Static);\r\n\t\t\tif (_params.lodge !== false) {\r\n\t\t\t\tif (_instanceof(subStmt, ReferenceInterface) || _instanceof(subStmt, CallInterface)) {\r\n\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t} else if (subStmt && !_instanceof(subStmt, FuncInterface) && !_instanceof(subStmt, IfInterface)) {\r\n\t\t\t\t\tsubStmt.meta.vars.forEach(_var => vars.push(_var));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (!parsed.meta) {\r\n\t\t\t\tparsed.meta = {};\r\n\t\t\t}\r\n\t\t\tparsed.meta.vars = vars;\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'string' && val !== null;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _isFunction from '@web-native-js/commons/js/isFunction.js';\r\nimport _arrFrom from '@web-native-js/commons/arr/from.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _even from '@web-native-js/commons/obj/even.js';\r\nimport _copyPlain from '@web-native-js/commons/obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nconst Lexer = class {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tthis._evalCharsAt(runtime, 0);\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn this._evalCharsAt(runtime, i + 1);\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\treturn this._evalCharsAt(runtime, i + (matchedDelim.length || 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._evalCharsAt(runtime, i + charWidth);\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries] + chars);\r\n\t\t\truntime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Lexer;\r\n\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@web-native-js/commons/js/isTypeObject.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _isFunction from '@web-native-js/commons/js/isFunction.js';\r\nimport _isClass from '@web-native-js/commons/js/isClass.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isNull from '@web-native-js/commons/js/isNull.js';\r\nimport _isNumber from '@web-native-js/commons/js/isNumber.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Contexts {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param int\t\t \ttype\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tconstructor(stack, type = 1) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.type = type;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Contexts.create(this.stack.super);\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param string|arrat \t\tprops\r\n\t * @param function\t\t \tcallback\r\n\t * @param object\t\t \toptions\r\n\t * @param object\t\t \ttrap\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tobserve(props, callback, options, trap = {}) {\r\n\t\tif (trap.observe && props.length) {\r\n\t\t\t// Observe super\r\n\t\t\t// but changes will be blocked if all the affected props\r\n\t\t\t// are also in main.\r\n\t\t\tif (this.stack.super) {\r\n\t\t\t\tthis.stack.super.observe(props, (a, b, e) => {\r\n\t\t\t\t\tif (e.fields.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\t\treturn callback(a, b, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, options, trap);\r\n\t\t\t}\r\n\t\t\t// Observe main, for sure\r\n\t\t\tif (_isTypeObject(this.stack.main)) {\r\n\t\t\t\ttrap.observe(this.stack.main, props, (a, b, e) => {\r\n\t\t\t\t\tif (e.fields.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\t\t\treturn callback(a, b, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, options);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param string|arrat \t\tprops\r\n\t * @param function\t\t \tcallback\r\n\t * @param object\t\t \toptions\r\n\t * @param object\t\t \ttrap\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tunobserve(props, callback, options, trap = {}) {\r\n\t\tif (trap.unobserve) {\r\n\t\t\tif (this.stack.super) {\r\n\t\t\t\tthis.stack.super.unobserve(props, callback, options, trap);\r\n\t\t\t}\r\n\t\t\t// Observe main, for sure\r\n\t\t\tif (this.stack.main) {\r\n\t\t\t\ttrap.unobserve(this.stack.main, props, callback, options);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new Error('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tif (!['var', 'let', 'const'].includes(initKeyword)) {\r\n\t\t\t\t\tthrow new Error('Unrecognized declarator: ' + initKeyword + '!');\r\n\t\t\t\t}\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new Error('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new Error('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new Error('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new Error('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Contexts instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tstatic create(cntxt) {\r\n\t\treturn cntxt instanceof Contexts ? cntxt : new Contexts({\r\n\t\t\tmain: cntxt,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => trap.get && _isTypeObject(cntxt) && !_isNull(cntxt) ? trap.get(cntxt, prop) \r\n\t: ((_isTypeObject(cntxt) || _isString(cntxt) || _isNumber(cntxt)) && !_isNull(cntxt) ? cntxt[prop] : undefined);\r\n\r\nconst _has = (cntxt, prop, trap) => trap.has && _isTypeObject(cntxt) && !_isNull(cntxt) ? trap.has(cntxt, prop) : (\r\n\t_isTypeObject(cntxt) && !_isNull(cntxt) ? prop in cntxt : !_isNull(cntxt) && !_isUndefined(cntxt[prop])\r\n);","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.expr.eval(context, trap);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.expr.toString(context) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Abstraction) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, trap));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.toString(context)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Arr) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new Static(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, trap));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.list.map(arg => arg.toString(context)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Arguments) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, trap = {}) {\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, trap);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, trap);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t toString(context = null) {\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).toString(context);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.toString(context)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Assertion) {\r\n\t\tif (expr.toUpperCase().startsWith(Assertion.negation.toUpperCase())) {\r\n\t\t\treturn new Static(\r\n\t\t\t\t[parseCallback(expr.substr(Assertion.negation.length))],\r\n\t\t\t\tAssertion.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=') {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tvar val = this.val.eval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).set(reference.name, val, trap, this.initKeyword);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.toString(context), this.operator, this.val.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Assignment) {\r\n\t\tvar parse = Lexer.lex(expr, Static.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar initKeyword, reference = parse.tokens.shift().trim(), val = parse.tokens.shift().trim();\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(val = parseCallback(val))) {\r\n\t\t\t\tthrow new Error('Invalid assignment expression: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(initKeyword, reference, val, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [' = '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\t// Current!\r\n\t\tcontext = Contexts.create(context);\r\n\t\t// Stringifies JSEN vars\r\n\t\tvar stringifyEach = list => _unique(list.map(expr => _before(_before(expr.toString(), '['), '(')));\r\n\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\tif (stmt instanceof ReturnInterface) {\r\n\t\t\t\treturn stmt.eval(context, trap);\r\n\t\t\t}\r\n\t\t\tresults[i] = stmt.eval(context, trap);\r\n\t\t\t// Lets be called...\r\n\t\t\tvar props = stringifyEach(stmt.meta.vars);\r\n\t\t\t//if (props.length)\r\n\t\t\t(function(stmt, props, prevContext) {\r\n\t\t\t\t// Prev?\r\n\t\t\t\tif (0) {\r\n\t\t\t\t\t// Lets be called...\r\n\t\t\t\t\tprevContext.unobserve(props, null/** regardless callback */, {\r\n\t\t\t\t\t\ttags: ['#block', stmt],\r\n\t\t\t\t\t}, trap);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.observe(props, (a, b, e) => {\r\n\t\t\t\t\tvar evalReturn = stmt.eval(context, trap);\r\n\t\t\t\t\t// If the result of this evaluation is false,\r\n\t\t\t\t\t// e.stopPropagation will be called and subsequent expressions\r\n\t\t\t\t\t// will not be evaluated. So we must not allow false to be returned.\r\n\t\t\t\t\t// All expressions are meant to be evaluated in parallel, independent of each other.\r\n\t\t\t\t\tif (evalReturn !== false) {\r\n\t\t\t\t\t\treturn evalReturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {observeDown: true, data: false, tags: ['#block', stmt]}, trap);\r\n\t\t\t})(stmt, props, this.prevContext);\r\n\t\t}\r\n\t\tthis.prevContext = context;\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.stmts.map(stmt => stmt.toString(context)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Block) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(Static.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Bool) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new Static(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\t\tvar args = this.args.eval(context, trap);\r\n\t\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\t\treturn Contexts.create(reference.context).exec(reference.name, args, trap);\r\n\t\t\t}\r\n\t\ttry {\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[Execution Error][' + this + ']: ' + e.message);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.reference.toString(context) + this.args.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Call) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new Error('Invalid call directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _difference from '@web-native-js/commons/arr/difference.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Comparison = class extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn Comparison.compare(\r\n\t\t\tthis.operand1.eval(context, trap), \r\n\t\t\tthis.operand2.eval(context, trap), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.toString(context), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Comparison) {\r\n\t\tvar operators = _flatten(Static.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(Comparison.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !Comparison.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comparison;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Condition = class extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.assertion.eval(context, trap) \r\n\t\t\t? this.onTrue.eval(context, trap) \r\n\t\t\t: this.onFalse.eval(context, trap);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.toString(context), \r\n\t\t\tCondition.operators[0], \r\n\t\t\tthis.onTrue.toString(context),\r\n\t\t\tCondition.operators[1], \r\n\t\t\tthis.onFalse.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Condition) {\r\n\t\tvar splits = Lexer.split(expr, Static.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = ['?', ':'];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Condition;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).del(reference.name, trap);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.operator + ' ' + this.reference.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Deletion) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(Static.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new Error('Invalid delete directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@web-native-js/commons/obj/copy.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\nimport Block from './Block.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn (...args) => {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(this.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = this.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (this.paramters[name] \r\n\t\t\t\t\t\t? this.paramters[name].eval(context, trap) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar nestedContext = new Contexts({main:newMainContext, super:context});\r\n\t\t\treturn this.statements.eval(nestedContext, trap);\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.toString(context) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.toString(context) : '{' + this.statements.toString(context) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.toString(context) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Func) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new Static(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n        var newContext = new Contexts({main:{}, super:context}, 2/** type */);\r\n\t\treturn this.assertion.eval(context/** original context */, trap)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(newContext, trap) : undefined)\r\n\t\t\t: (this.onFalse ? this.onFalse.eval(newContext, trap) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.toString(context) + '}' \r\n            : (this.onTrue ? this.onTrue.toString(context) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.toString(context) + '}' \r\n            : (this.onFalse ? this.onFalse.toString(context) : '');\r\n\t\treturn 'if (' + this.assertion.toString(context) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = If) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n                onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            } else {\r\n                onTrue = parseCallback(onTrue, null, {meta:null});\r\n            }\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                    onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n                } else {\r\n                    onFalse = parseCallback(onFalse, null, {meta:null});\r\n                }\r\n            }\r\n\t\t\treturn new Static(\r\n                assertion, \r\n                onTrue ? (onTrue.jsenType === 'Block' ? onTrue : new Block([onTrue])) : null, \r\n                onFalse ? (onFalse.jsenType === 'Block' ? onFalse : new Block([onFalse])) : null, \r\n                {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@web-native-js/commons/js/isNumeric.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _intersect from '@web-native-js/commons/arr/intersect.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, trap);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, trap));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.val.toString(context)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.toString(context))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Math) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, Math.operators.sup).length && _intersect(operators, Math.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: [' + ', ' - '],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@web-native-js/commons/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Num) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport _first from '@web-native-js/commons/arr/first.js';\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, trap);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.toString(context));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Obj) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new Static(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@web-native-js/commons/arr/last.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tvar prop = this.prop.eval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).has(reference.name, prop, trap);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.prop.toString(context), this.operator, this.reference.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Presence) {\r\n\t\tvar parse = Lexer.lex(expr, Static.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new Error('Invalid presence check expression: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Reference = class extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, trap = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, trap);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, trap);\r\n\t\t}\r\n\t\treturn {context:sourceContext, name:name,};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\tvar parts = this.getEval(context, trap);\r\n\t\tif (!_isUndefined(parts.context) && !_isUndefined(parts.name)) {\r\n\t\t\treturn Contexts.create(parts.context).get(parts.name, trap);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.toString(context);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.toString(context) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Reference) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [Static.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.isContext = true;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new Error('Invalid reference: ' + expr + '!');\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new Static(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, trap) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.expr ? 'return ' + this.expr.toString(context) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Return) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Str) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new Static(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Void) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new Static(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport Lexer from './Lexer.js';\r\nimport Contexts from './Contexts.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Block from './Expr/Block.js';\r\nimport BlockInterface from './Expr/BlockInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport If from './Expr/If.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Presence from './Expr/Presence.js';\r\nimport PresenceInterface from './Expr/PresenceInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\nimport Void from './Expr/Void.js';\r\nimport VoidInterface from './Expr/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tLexer,\r\n\tContexts\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from '@web-native-js/jsen';\r\n\r\n/**\r\n * ---------------------------\r\n * Mql (base) class\r\n *\r\n * TODO:\r\n *\t\tSELECT *\r\n *\t\tSELECT ... FROM (SELECT ...)\r\n *\t\tPREPARED STATEMENTS PLACEHOLDERS\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Mql = class extends Jsen {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}, Static = Mql) {\r\n\t\tif (!('mutates' in params)) {\r\n\t\t\tparams.mutates = true;\r\n\t\t}\r\n\t\tif (!params.opts) {\r\n\t\t\tparams.opts = {};\r\n\t\t}\r\n\t\tif (!('ci' in params.opts)) {\r\n\t\t\tparams.opts.ci = true;\r\n\t\t}\r\n\t\tparams.allowCache = false;\r\n\t\treturn super.parse(expr, Parsers, params, Static);\r\n\t}\r\n};\r\n\r\n\r\nexport default Mql;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {ExprInterface} from '@web-native-js/jsen';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * Sums an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((total, v) => total + v, arr.shift());\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * Gets one or more random values from an array.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar result = [];\r\n\tvar rand = null;\r\n\twhile (result.length < amount && (rand = arr[Math.floor(Math.random() * arr.length)]) && result.indexOf(rand) === -1) {\r\n\t\tresult.push(rand);\r\n\t};\r\n\treturn arguments.length > 1 ? result : result[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = true) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from './isArray.js';\r\nimport _isFunction from './isFunction.js';\r\nimport _arrLast from '../arr/last.js';\r\nimport _mergeCallback from '../obj/mergeCallback.js';\r\nimport _each from '../obj/each.js';\r\n\r\n/**\r\n * A multi-inheritance implementstion.\r\n *\r\n * @param array\t \t...classes\r\n *\r\n * @return object\r\n */\r\nexport default function(...classes) {\r\n\t\r\n\tvar Traps = {};\r\n\tvar RetrnDirective = 'last';\r\n\tif (_isArray(arguments[0])) {\r\n\t\tclasses = arguments[0];\r\n\t\tTraps = arguments[1];\r\n\t\tif (arguments[2]) {\r\n\t\t\tRetrnDirective = arguments[2];\r\n\t\t}\r\n\t}\r\n\tvar Base = _arrLast(classes);\r\n\tvar supersMap = {};\r\n\tvar Mixin = class extends Base {\r\n\t\tconstructor(...args) {\r\n\t\t\tsuper(...args);\r\n\t\t}\r\n\t};\r\n\t// A trap for _instanceof()\r\n\tMixin.prototypes = classes;\r\n\t// ---------------------\r\n\t// Extend (merge) properties but keep methods\r\n\tclasses.forEach(_class => {\r\n\t\t// Copy const members\r\n\t\t_mergeCallback([Mixin, _class], (key, obj1, obj2) => ['name', 'prototype', 'prototypes', 'length'].indexOf(key) === -1);\r\n\t\t_mergeCallback([Mixin.prototype, _class.prototype], (key, obj1, obj2) => {\r\n\t\t\tif (['prototype', 'prototypes'].indexOf(key) === -1) {\r\n\t\t\t\tif (_isFunction(obj2[key])) {\r\n\t\t\t\t\tif (_isArray(supersMap[key])) {\r\n\t\t\t\t\t\tsupersMap[key].push(obj2[key]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsupersMap[key] = [obj2[key]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}, true/*deepProps*/);\r\n\t});\r\n\t// Extend (proxy) methods\r\n\t_each(supersMap, (name, supers) => {\r\n\t\tif (name === 'constructor') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// NOTE: this must not be defined as an arrow function\r\n\t\t// for the benefit of the \"this\".\r\n\t\tMixin.prototype[name] = function(...args) {\r\n\t\t\tif (Object.hasOwnProperty(Traps, name) && _isFunction(Traps[name])) {\r\n\t\t\t\t// Wrap a call to the trap...\r\n\t\t\t\t// So mixin supers are passed to traps\r\n\t\t\t\treturn Traps[name].call(this, supers, ...args);\r\n\t\t\t} else {\r\n\t\t\t\t// Call each super and return\r\n\t\t\t\t// the last one's return value\r\n\t\t\t\tvar supersReturnValues = [];\r\n\t\t\t\tsupers.forEach(supr => {\r\n\t\t\t\t\tsupersReturnValues.push(supr.call(this, ...args));\r\n\t\t\t\t})\r\n\t\t\t\treturn _arrLast(supersReturnValues);\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn Mixin;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Finds a value in an array/object and returns the key (or path when found deep).\r\n *\r\n * @param array}object \tobj\r\n * @param function\t\tcallback\r\n * @param bool\t\t\tdeep\r\n *\r\n * @return number|string|array\r\n */\r\nconst _find = function(obj, callback, deep = false) {\r\n\tvar keys = null;\r\n\tvar values = obj;\r\n\tif (!_isArray(obj)) {\r\n\t\tkeys = Object.keys(obj);\r\n\t\tvalues = Object.values(obj);\r\n\t}\r\n\tvar subKey = undefined;\r\n\tvar value = values.reduce((prev, curr) => {\r\n\t\tif (subKey === undefined) {\r\n\t\t\tif (callback(curr, prev)) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t\tif (deep && (_isTypeObject(curr) || _isFunction(curr)) && (subKey = _find(curr, callback, deep)) !== undefined) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn prev;\r\n\t}, undefined);\r\n\tif (value !== undefined) {\r\n\t\tvar key = keys ? keys[values.indexOf(value)] : values.indexOf(value);\r\n\t\treturn subKey !== undefined ? [key].concat(_arrFrom(subKey)) : key;\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _find;","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects into first array/object but only when not set;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (key, obj1, obj2) => {\r\n\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\tif (obj1.indexOf(obj2[key]) === -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else if (!(key in obj1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n *\r\n * @return bool\r\n */\r\nconst _percentageMatch = function(obj1, obj2, assertion = true) {\r\n\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\tif ((_isArray(v1) && _isArray(v2)) || (_isObject(v1) && _isObject(v2))) {\r\n\t\t\treturn _percentageMatch(v1, v2, assertion);\r\n\t\t}\r\n\t\treturn (_isFunction(assertion) ? assertion(v1, v2) : ((isNaN(v1) && isNaN(v2)) === assertion ? true : (v1 === v2) === assertion)) ? 1 : 0;\r\n\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\tvar values = _isObject(result) ? Object.values(result) : result;\r\n\treturn values.reduce((a, b) => a + b, 0) / values.length;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _percentageMatch;\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAssertion\r\n} from '@web-native-js/jsen';\r\n\r\nAssertion.negation = 'NOT ';\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssertion.operators = {\r\n\tand: ' and ',\r\n\tor: ' or ',\r\n\tAND: ' AND ',\r\n\tOR: ' OR ',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer,\r\n\tReference as _Reference\r\n} from '@web-native-js/jsen';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isEmpty from '@web-native-js/commons/js/isEmpty.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\nimport _remove from '@web-native-js/commons/arr/remove.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst Reference = class extends _Reference {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tvar isArrowReference = _isString(name) && /(<-|->)/.test(name);\r\n\t\tif (isArrowReference && !backticks) {\r\n\t\t\tbackticks = true;\r\n\t\t}\r\n\t\tsuper(context, name, backticks);\r\n\t\tthis.isArrowReference = isArrowReference;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, trap = {}) {\r\n\t\t// Lets find the table that contains the column\r\n\t\tif (!this.isContext && !this.isTableName) {\r\n\t\t\tvar contexts = Reference.findContexts(tempRow, this.name);\r\n\t\t\tif (this.isFieldName) {\r\n\t\t\t\t_remove(contexts, '$');\r\n\t\t\t}\r\n\t\t\tif (!contexts.length) {\r\n\t\t\t\t//throw new Error('\"' + this.toString() + '\" is unknown!');\r\n\t\t\t}\r\n\t\t\tif (this.arrowContext) {\r\n\t\t\t\tvar _context = this.context;\r\n\t\t\t\tthis.context = undefined;\r\n\t\t\t\tvar val = super.eval(tempRow[this.arrowContext], trap);\r\n\t\t\t\tthis.context = _context;\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\tif (!this.context) {\r\n\t\t\t\tif (contexts.indexOf('$') === -1 && contexts.length > 1) {\r\n\t\t\t\t\tthrow new Error('\"' + this.name + '\" is ambiguous!');\r\n\t\t\t\t}\r\n\t\t\t\tif (contexts.length) {\r\n\t\t\t\t\tvar context = contexts.reduce((_c, c) => _c === '$' ? _c : c, '');\r\n\t\t\t\t\treturn super.eval(tempRow[context], trap);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar val = super.eval(tempRow, trap);\r\n\t\t// Table unknown?\r\n\t\tif (this.isContext && _isUndefined(val)) {\r\n\t\t\t//throw new Error('Table \"' + this.name + '\" is unknown!');\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic findContexts(tempRow, name) {\r\n\t\tvar contexts = [];\r\n\t\t// We ask from schema first\r\n\t\tObject.keys(tempRow).forEach(tableName => {\r\n\t\t\tif (tempRow[tableName] && name in tempRow[tableName]) {\r\n\t\t\t\tcontexts.push(tableName);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn contexts;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Reference) {\r\n\t\treturn super.parse(expr, parseCallback, params, Static);\r\n\t}\r\n}\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAssignment as _Assignment\r\n} from '@web-native-js/jsen';\r\nimport Reference from './Reference.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst Assignment = class extends _Assignment {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, trap = {}) {\r\n\t\tthis.initKeyword = false;\r\n\t\t// Lets find the table that contains the column\r\n\t\tif (!this.reference.isContext) {\r\n\t\t\tvar contexts = Reference.findContexts(tempRow, this.reference.name);\r\n\t\t\tif (!contexts.length) {\r\n\t\t\t\tthrow new Error('\"' + this.toString() + '\" is unknown!');\r\n\t\t\t}\r\n\t\t\tif (!this.reference.context) {\r\n\t\t\t\tif (contexts.indexOf('$') === -1 && contexts.length > 1) {\r\n\t\t\t\t\tthrow new Error('\"' + this.reference.name + '\" is ambiguous!');\r\n\t\t\t\t}\r\n\t\t\t\tif (contexts.length) {\r\n\t\t\t\t\tvar context = contexts.reduce((_c, c) => _c === '$' ? _c : c, '');\r\n\t\t\t\t\treturn super.eval(tempRow[context], trap);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn super.eval(tempRow, trap);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Assignment) {\r\n\t\tvar instance = super.parse(expr, parseCallback, params, Static);\r\n\t\tif (instance) {\r\n\t\t\tinstance.parseCallback = parseCallback;\r\n\t\t\tinstance.Static = Static;\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tCall as _Call,\r\n\tContexts,\r\n} from '@web-native-js/jsen';\r\nimport _isFunction from '@web-native-js/commons/js/isFunction.js';\r\nimport _isUndefined from '@web-native-js/commons/js/isUndefined.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends _Call {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, trap = {}) {\r\n\t\treturn this.evalWithArgs(context, this.args.eval(context, trap), trap);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tevalWithArgs(context, args, trap = {}) {\r\n\t\tvar reference = this.reference.getEval(context, trap);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\treturn Contexts.create(reference.context).exec(reference.name.toUpperCase(), args, trap);\r\n\t\t}\r\n\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Call) {\r\n\t\treturn super.parse(expr, parseCallback, params, Static);\r\n\t}\r\n}\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tComparison\r\n} from '@web-native-js/jsen';\r\n\r\n/**\r\n * @prop array\r\n */\r\nComparison.operators = {\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t},\r\n\tpartial: {\r\n\t\tany: 'any',\r\n\t\tin: 'in',\r\n\t\tlike: 'like',\r\n\t},\r\n\texact: {\r\n\t\tnotEqualsTo: '<>',\r\n\t\t// must be after all ocurrencies of \"=\"\r\n\t\tis: '=',\r\n\t},\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comparison;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer,\r\n\tCondition as _Condition\r\n} from '@web-native-js/jsen';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Condition = class extends _Condition {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn 'IF (' + [\r\n\t\t\tthis.assertion.toString(context), \r\n\t\t\tthis.onTrue.toString(context),\r\n\t\t\tthis.onFalse.toString(context)\r\n\t\t].join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Condition) {\r\n\t\tif (expr.match(/^if[ ]*?\\(/i)) {\r\n\t\t\tvar tokens = Lexer.split(_unwrap(expr.trim().substr(2).trim(), '(', ')'), [',']);\r\n\t\t\tif (tokens.length !== 3) {\r\n\t\t\t\tthrow new Error('Malformed condition expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(...tokens.map(expr => parseCallback(expr.trim())));\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Condition;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AggrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AggregateExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * WindowInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'WindowConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * OrderByInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'OrderByExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '../index.js';\r\nimport _sort from '@web-native-js/commons/arr/sort.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _beforeLast from '@web-native-js/commons/str/beforeLast.js';\r\nimport OrderByInterface from './OrderByInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * OrderBy class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst OrderBy = class extends OrderByInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(columns, withRollup = false) {\r\n\t\tsuper();\r\n\t\tthis.columns = columns;\r\n\t\tthis.withRollup = withRollup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, trap = {}) {\r\n\t\tvar order = (rows, by) => {\r\n\t\t\t// Drilldown...\r\n\t\t\tvar grouping = {};\r\n\t\t\trows.forEach(row => {\r\n\t\t\t\tvar _for = by[0].expr.eval(row, trap);\r\n\t\t\t\tgrouping[_for] = grouping[_for] || [];\r\n\t\t\t\tgrouping[_for].push(row);\r\n\t\t\t});\r\n\t\t\t// Get esults flattened\r\n\t\t\tvar result = [];\r\n\t\t\t_sort(Object.keys(grouping), by[0].order).forEach(_for => {\r\n\t\t\t\tresult = result.concat(by.length > 1 ? order(grouping[_for], by.slice(1)) : grouping[_for]);\r\n\t\t\t});\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tvar ordering = order(tempRows, this.columns);\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.toString() + '\" in order by clause]: ' + e.message);\r\n\t\t}\r\n\t\treturn ordering;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [this.columns.map(\r\n\t\t\tc => c.expr.toString(context) + (c.order ? ' ' + c.order : '')\r\n\t\t).join(', ')];\r\n\t\tif (this.withRollup) {\r\n\t\t\tstr.push('WITH ROLLUP');\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = OrderBy) {\r\n\t\tvar columns = [];\r\n\t\tvar withRollup = false;\r\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP'], {useRegex:'i'});\r\n\t\tcolumns = Lexer.split(parse.tokens.shift().trim(), [',']).map(c => {\r\n\t\t\tvar order = c.match(/ASC|DESC/, 'i');\r\n\t\t\tif (order) {\r\n\t\t\t\torder = order[0];\r\n\t\t\t\tc = _beforeLast(c, order).trim();\r\n\t\t\t}\r\n\t\t\treturn {expr:parseCallback(c), order:order};\r\n\t\t});\r\n\t\tif (parse.matches.length === 1) {\r\n\t\t\twithRollup = true;\r\n\t\t}\r\n\t\treturn new Static(columns, withRollup);\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default OrderBy;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Sorts a list performantly.\r\n *\r\n * @param array\t \t\t\t\t\tarr\r\n * @param string\t \t\t\t\torder\t\t\tASC|DESC \r\n * @param function\t\t\t\t\tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, order, callback = null) {\r\n\tvar _arr = [];\r\n\t// Make a shallow copy\r\n\tvar length = arr.length;\r\n\tfor (var i = 0; i < length; i ++) {\r\n\t\t_arr.push({index: i, value: callback ? callback(arr[i]) : arr[i]});\r\n\t};\r\n\t_arr.sort(function(a, b) {\r\n\t\t// Using localeCompare if possible\r\n\t\tif (_isString(a.value) && \"\".localeCompare) {\r\n\t\t\treturn a.value.localeCompare(b.value);\r\n\t\t};\r\n\t\treturn a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\r\n\t});\r\n\tif ((order || '').trim().toLowerCase() === 'desc') {\r\n\t\t_arr = _arr.reverse();\r\n\t};\r\n\t// Fill the order with actual values\r\n\treturn _arr.map(itm => arr[itm.index]);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '../index.js';\r\nimport _inherit from '@web-native-js/commons/obj/inherit.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport WindowInterface from './WindowInterface.js';\r\nimport OrderBy from './OrderBy.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Window class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Window = class extends WindowInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(dfn) {\r\n\t\tsuper();\r\n\t\tthis.dfn = dfn;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, definitions = {}, trap = {}) {\r\n\t\tvar dfn = this.dfn;\r\n\t\tvar uuid = this.toString();\r\n\t\tif (this.dfn.name) {\r\n\t\t\tif (!definitions || !definitions[this.dfn.name]) {\r\n\t\t\t\tthrow new Error('Window name \"' + this.dfn.name + '\" is undefined!');\r\n\t\t\t}\r\n\t\t\tdfn = _inherit({}, this.dfn, definitions[this.dfn.name]);\r\n\t\t}\r\n\t\tvar exec = (rows, partitionBy) => {\r\n\t\t\tif (partitionBy.length) {\r\n\t\t\t\t// Drilldown...\r\n\t\t\t\tvar partitioning = {};\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tvar _for = partitionBy[0].eval(row, trap);\r\n\t\t\t\t\tpartitioning[_for] = partitioning[_for] || [];\r\n\t\t\t\t\tpartitioning[_for].push(row);\r\n\t\t\t\t});\r\n\t\t\t\tObject.values(partitioning).map(partition => exec(partition, partitionBy.slice(1)));\r\n\t\t\t} else {\r\n\t\t\t\tif (dfn.orderBy) {\r\n\t\t\t\t\trows = dfn.orderBy.eval(rows, trap);\r\n\t\t\t\t}\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tif (!row.WINDOWS) {\r\n\t\t\t\t\t\trow.WINDOWS = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\trow.WINDOWS[uuid] = rows;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\ttry {\r\n\t\t\texec(tempRows, dfn.partitionBy || []);\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.toString() + '\" in window definition]: ' + e.message);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar length = Object.keys(this.dfn).length;\r\n\t\tif (length === 1 && this.dfn.name) {\r\n\t\t\treturn this.dfn.name;\r\n\t\t}\r\n\t\tvar str = [this.dfn.name];\r\n\t\tif (this.dfn.partitionBy) {\r\n\t\t\tstr.push('PARTITION BY ' + this.dfn.partitionBy.map(expr => expr.toString(context)).join(', '));\r\n\t\t}\r\n\t\tif (this.dfn.orderBy) {\r\n\t\t\tstr.push('ORDER BY ' + this.dfn.orderBy.toString(context));\r\n\t\t}\r\n\t\treturn '(' + str.filter(a => a).join(' ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Window) {\r\n\t\tvar dfn = {};\r\n\t\tif (_wrapped(expr, '(', ')')) {\r\n\t\t\tif (expr = _unwrap(expr, '(', ')')) {\r\n\t\t\t\tvar parse = Lexer.lex(expr, ['PARTITION[ ]+BY', 'ORDER[ ]+BY'], {useRegex:'i'});\r\n\t\t\t\tdfn.name = parse.tokens.shift().trim();\r\n\t\t\t\tparse.matches.forEach(clauseType => {\r\n\t\t\t\t\tif (clauseType.toLowerCase().startsWith('partition')) {\r\n\t\t\t\t\t\tdfn.partitionBy = Lexer.split(parse.tokens.shift().trim(), [','])\r\n\t\t\t\t\t\t\t.map(expr => parseCallback(expr));\r\n\t\t\t\t\t} else if (clauseType.toLowerCase().startsWith('order')) {\r\n\t\t\t\t\t\tdfn.orderBy = parseCallback(parse.tokens.shift().trim(), [OrderBy]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdfn.name = expr;\r\n\t\t}\r\n\t\treturn new Static(dfn);\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Window;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '../index.js';\r\nimport _mixin from '@web-native-js/commons/js/mixin.js';\r\nimport _flatten from '@web-native-js/commons/arr/flatten.js';\r\nimport _find from '@web-native-js/commons/obj/find.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport AggrInterface from './AggrInterface.js';\r\nimport Window from './Window.js';\r\nimport Call from './Call.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Aggr class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst Aggr = class extends _mixin(Call, AggrInterface) {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context, trap = {}) {\r\n\t\tvar args = this.args.list.slice();\r\n\t\targs.unshift(this.window ? context.WINDOWS[this.window.toString()] : context.AGGR.rows);\r\n\t\treturn this.evalWithArgs(context, args, trap);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn super.toString(context) + (this.window ? ' OVER ' + this.window.toString(context) : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Aggr) {\r\n\t\tvar aggrMatch = null;\r\n\t\tvar aggrMatchRegex = _flatten(Static.funcs).join(\"\\\\(|\") + \"\\\\(\";\r\n\t\tif (aggrMatch = expr.trim().match(new RegExp('^(' + aggrMatchRegex + ')', 'i'))) {\r\n\t\t\tvar funcName = _before(aggrMatch[0], '(').toUpperCase();\r\n\t\t\tvar funcCategory = _find(Static.funcs, val => val === funcName, true)[0];\r\n\t\t\tvar splits = Lexer.split(expr, ['OVER'], {ci:true});\r\n\t\t\tif (funcCategory === 'explicitOver' && splits.length === 1) {\r\n\t\t\t\tthrow new Error(aggrMatch[0] + '() requires an OVER clause!');\r\n\t\t\t}\r\n\t\t\tvar instance = super.parse(splits.shift().trim(), parseCallback, params, Static);\r\n\t\t\tinstance.funcCategory = funcCategory;\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tinstance.window = parseCallback(splits.pop().trim(), [Window]);\r\n\t\t\t}\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAggr.funcs = {\r\n\tnormal: [\r\n\t\t'AVG', \r\n\t\t'BIT_AND', \r\n\t\t'BIT_OR', \r\n\t\t'BIT_XOR', \r\n\t\t'COUNT', \r\n\t\t'JSON_ARRAYAGG', \r\n\t\t'JSON_OBJECTAGG', \r\n\t\t'MAX', \r\n\t\t'MIN',\r\n\t\t'STDDEV_POP',\r\n\t\t'STDDEV',\r\n\t\t'STD',\r\n\t\t'STDDEV_SAMP',\r\n\t\t'SUM',\r\n\t\t'VAR_POP',\r\n\t\t'VARIANCE',\r\n\t\t'VAR_SAMP',\r\n\t\t// May not apply to OVER()\r\n\t\t'GROUP_CONCAT',\r\n\t\t'GROUP_CONCAT_WS',\r\n\t],\r\n\texplicitOver: [\r\n\t\t'CUME_DIST', \r\n\t\t'DENSE_RANK', \r\n\t\t'FIRST_VALUE', \r\n\t\t'LAG', \r\n\t\t'LAST_VALUE', \r\n\t\t'LEAD', \r\n\t\t'NTH_VALUE', \r\n\t\t'NTLE',\r\n\t\t'PERCENT_RANK',\r\n\t\t'RANK',\r\n\t\t'ROW_NUMBER',\r\n\t],\r\n\tsupport: [\r\n\t\t'ANY_VALUE', \r\n\t\t'COLUMN', \r\n\t\t'COLUMNS', \r\n\t\t'GROUPING', \r\n\t],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Aggr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\n\r\nconst Schema = {\r\n\r\n    /**\r\n     * Table definitions.\r\n     * \r\n     * @var {Object}\r\n     */\r\n    tables: {},\r\n\r\n    /**\r\n     * Adds a table definition.\r\n     * \r\n     * @param {String} tableName\r\n     * @param {Object} tableDefinition\r\n     * \r\n     * @return void\r\n     */\r\n    define(tableName, tableDefinition) {\r\n        if (!_isObject(tableDefinition)) {\r\n            throw new Error('Table definition must be an object.');\r\n        }\r\n        if (tableDefinition.name && tableDefinition.name !== tableName) {\r\n            throw new Error('Table name, if really necessary, must be the same with the given definition identifier.');\r\n        }\r\n        if (!_isObject(tableDefinition.fields)) {\r\n            throw new Error('Table must have a valid \"fields\" list.');\r\n        }\r\n        _each(tableDefinition.fields, (fieldName, fieldDefinition) => {\r\n            if (!_isObject(fieldDefinition)) {\r\n                throw new Error('Invalid field definition: \"' + fieldName + '\" at \"' + tableName + '\".');\r\n            }\r\n            if (fieldDefinition.referencedEntity\r\n                && !(_isObject(fieldDefinition.referencedEntity) && fieldDefinition.referencedEntity.name)) {\r\n                throw new Error('Invalid foreign key definition: \"' + fieldName + '\" at \"' + tableName + '\".');\r\n            }\r\n        });\r\n        if (!tableDefinition.name) {\r\n            tableDefinition.name = tableName;\r\n        }\r\n        this.tables[tableName] = tableDefinition;\r\n    },\r\n\r\n    /**\r\n     * Deletes a table definition.\r\n     * \r\n     * @param {String} tableName\r\n     * \r\n     * @return void\r\n     */\r\n    drop(tableName) {\r\n        if (!this.tables[tableName]) {\r\n            throw new Error('Table \"' + tableName + '\" has not been defined.');\r\n        }\r\n        delete this.tables[tableName];\r\n    },\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Schema;","\r\n/**\r\n * @imports\r\n */\r\nimport Schema from './Schema.js';\r\nimport _before from '@web-native-js/commons/str/before.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport _isString from '@web-native-js/commons/js/isString.js';\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\n\r\nexport default class ArrowReference {\r\n\t\r\n\t/**\r\n\t * Tells if a column is a reference.\r\n\t *\r\n\t * @param {String} str\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isReference(str) {\r\n\t\treturn str.indexOf('<-') > -1 || str.indexOf('->') > -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tells if a path is an outgoing reference in direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isOutgoing(reference) {\r\n\t\treturn reference.indexOf('->') > -1 && _before(reference, '->').indexOf('<-') === -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tells if a path is an incoming reference in direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isIncoming(reference) {\r\n\t\treturn reference.indexOf('<-') > -1 && _before(reference, '<-').indexOf('->') === -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the relationshipPath in reverse direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tstatic reverse(reference) {\r\n\t\treturn reference.replace(/->/g, '|->|').replace(/<-/g, '|<-|')\r\n\t\t\t.split('|').map(str => str === '->' ? '<-' : (str === '<-' ? '->' : str)).reverse().join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the immediate target in a reference path.\r\n\t * \r\n\t * @param {String} base \r\n\t * @param {String} reference \r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n    static eval(base, reference) {\r\n\t\tvar table1, table2;\r\n\t\tif (ArrowReference.isIncoming(reference)) {\r\n\t\t\t// reference === actingKey<-...\r\n\t\t\tvar actingKey = _before(reference, '<-'),\r\n\t\t\t\tsourceTable = _after(reference, '<-');\r\n\t\t\tif (ArrowReference.isIncoming(sourceTable)) {\r\n\t\t\t\t// reference === actingKey<-actingKey2<-table->?...\r\n\t\t\t\ttable2 = ArrowReference.eval('', sourceTable).a.table;\r\n\t\t\t\tvar select = sourceTable;\r\n\t\t\t} else {\r\n\t\t\t\t// reference === actingKey<-table->?...\r\n\t\t\t\tvar _sourceTable = _before(sourceTable, '->')\r\n\t\t\t\t\tselect = _after(sourceTable, '->');\r\n\t\t\t\tif (!(table2 = Schema.tables[_sourceTable])) {\r\n\t\t\t\t\tthrow new Error('[' + reference + ']: The implied table \"' + _sourceTable + '\" is not defined.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!base) {\r\n\t\t\t\t// --------------------------\r\n\t\t\t\t// Now get table1 from table2\r\n\t\t\t\t// --------------------------\r\n\t\t\t\tif (!table2.fields[actingKey] || !(table1 = table2.fields[actingKey].referencedEntity)) {\r\n\t\t\t\t\tthrow new Error('[' + reference + ']: The \"' + table2.name + '\" table does not define the implied foreign key \"' + actingKey + '\".');\r\n\t\t\t\t}\r\n\t\t\t\ttable1 = Schema.tables[table1.name];\r\n\t\t\t} else if (_isString(base)) {\r\n\t\t\t\ttable1 = Schema.tables[base];\r\n\t\t\t} else if (_isObject(base)) {\r\n\t\t\t\ttable1 = base;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ta: {table: table1, actingKey: table1.primaryKey,},\r\n\t\t\t\tb: {table: table2, actingKey, select,},\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// reference === foreignKey->...\r\n\t\tif (_isString(base)) {\r\n\t\t\ttable1 = Schema.tables[base];\r\n\t\t} else if (_isObject(base)) {\r\n\t\t\ttable1 = base;\r\n\t\t\tbase = table1.name;\r\n\t\t}\r\n\t\t// --------------------------\r\n\t\t// Now get table2 from table1\r\n\t\t// --------------------------\r\n\t\tvar foreignKey = _before(reference, '->')\r\n\t\t\tselect = _after(reference, '->');\r\n\t\tif (!table1.fields[foreignKey] || !(table2 = table1.fields[foreignKey].referencedEntity)) {\r\n\t\t\tthrow new Error('[' + base + '->' + reference + ']: The \"' + base + '\" table does not define the implied foreign key \"' + foreignKey + '\".');\r\n\t\t}\r\n\t\ttable2 = Schema.tables[table2.name];\r\n\t\treturn {\r\n\t\t\ta: {table: table1, actingKey: foreignKey,},\r\n\t\t\tb: {table: table2, actingKey: table2.primaryKey, select,},\r\n\t\t};\r\n\t}\r\n}","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * SelectInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'SelectStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * TableInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TableExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * UnionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'UnionConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport FetchInterface from './FetchInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Table class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Table = class extends FetchInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(rows, alias, schema) {\r\n\t\tsuper();\r\n\t\tthis.rows = rows;\r\n\t\tthis.alias = alias;\r\n\t\tthis.schema = schema;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tdelete() {\r\n\t\tif (this.cursor < this.rows.length) {\r\n\t\t\tdelete this.rows[this.cursor];\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinsert(values, columns = []) {\r\n\t\tvar rowObj = {};\r\n\t\tif (this.schema.fields) {\r\n\t\t\tvar schemaColumns = Object.keys(this.schema.fields);\r\n\t\t\tif (columns.length) {\r\n\t\t\t\tvar unknownFields = columns.filter(col => schemaColumns.indexOf(col) === -1);\r\n\t\t\t\tif (unknownFields.length) {\r\n\t\t\t\t\tthrow new Error('Unknown column(s): ' + unknownFields.join(', '));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcolumns = schemaColumns;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar schemaColumns = columns;\r\n\t\t}\r\n\t\tif (columns.length !== values.length) {\r\n\t\t\tthrow new Error('Column/values count mismatch!');\r\n\t\t}\r\n\t\tschemaColumns.forEach(schemaColumnName => {\r\n\t\t\tvar keyColumnPosition = columns.indexOf(schemaColumnName);\r\n\t\t\tif (keyColumnPosition === -1) {\r\n\t\t\t\trowObj[schemaColumnName] = this.schema.fields && _isObject(this.schema.fields[schemaColumnName]) \r\n\t\t\t\t\t? this.schema.fields[schemaColumnName].default : null;\r\n\t\t\t} else {\r\n\t\t\t\trowObj[schemaColumnName] = values[keyColumnPosition];\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.rows.push(rowObj);\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Table;\r\n","\r\n/**\r\n * ---------------------------\r\n * FetchInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Table from './Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DerivedTable class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst DerivedTable = class extends Table {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(database, query, alias, schema, iterateOnce = false) {\r\n\t\tsuper(query.eval(database), alias, schema, iterateOnce);\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default DerivedTable;\r\n","\r\n/**\r\n * imports\r\n */\r\nimport Schema from '../Schema.js';\r\nimport _isBoolean from '@web-native-js/commons/js/isBoolean.js';\r\nimport _isObject from '@web-native-js/commons/js/isObject.js';\r\nimport _isEmpty from '@web-native-js/commons/js/isEmpty.js';\r\nimport _arrFrom from '@web-native-js/commons/arr/from.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\n\r\n/**\r\n * Requires the following tables: uac, uac_token (optional), account\r\n * Requires a USER object: {id, lineage, parent, privileges,}\r\n */\r\nexport default class Query {\r\n\t\r\n\t/**\r\n\t * Creates the UAC logic that sets the value of each field conditionally.\r\n\t *\r\n\t * @param object                    USER\r\n\t * @param string                    tableName\r\n\t * @param bool                      byRow\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tconstructor(USER, tableName, byRow) {\r\n        this.USER = USER || {\r\n            id: 0,\r\n            parent: 0,\r\n            lineage: '0',\r\n            privileges: [],\r\n        };\r\n        // ---------------\r\n        // MAIN QUERY\r\n        // ---------------\r\n\t\tthis.table = Schema.tables[tableName];\r\n        this.alias = 'MAIN';\r\n        this.select = [];\r\n        this.where = [];\r\n        // ---------------\r\n        // RULES\r\n        // ---------------\r\n        // JOIN: Table-wide rules most-specific to the guest\r\n        if (Schema.tables.uac) {\r\n            this.EXPLICIT_TABLE_ACCESS_QUERY = {\r\n                query: Query.getExplicitRulesQuery(this.USER, this.table.name),\r\n                alias: 'EXPLICIT_TABLE_ACCESS',\r\n                on: ['EXPLICIT_TABLE_ACCESS.table_row = 0'],\r\n            };\r\n        }\r\n        if (byRow) {\r\n            if (Schema.tables.uac) {\r\n                // JOIN: Row-wide rules most-specific to the guest\r\n                this.EXPLICIT_ROW_ACCESS_QUERY = {\r\n                    query: Query.getExplicitRulesQuery(this.USER, this.table.name),\r\n                    alias: 'EXPLICIT_ROW_ACCESS',\r\n                    on: ['EXPLICIT_ROW_ACCESS.table_row = ' + this.alias + '.' + this.table.primaryKey],\r\n                };\r\n            }\r\n            // ---------------\r\n            // RIGHTS\r\n            // ---------------\r\n            // JOIN: The guest's organic rights towards the owner\r\n            if (this.table.attributionKey && Schema.tables.account) {\r\n                var ownerGuestRelationshipQuery = Query.getOwnerGuestRelationshipQuery(this.USER, false/* groupConcat */);\r\n                this.AUTHOR_USER_RELATIONSHIP_QUERY = {\r\n                    query: ownerGuestRelationshipQuery,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \r\n                    alias: 'AUTHOR_USER_RELATIONSHIP',\r\n                    on: ['AUTHOR_USER_RELATIONSHIP.' + ownerGuestRelationshipQuery.table.primaryKey + ' = ' + this.alias + '.' + this.table.attributionKey],\r\n                };\r\n            }\r\n        }\r\n        // ---------------\r\n        // APPLY\r\n        // ---------------\r\n        // The UAC table control\r\n        this.where.push(this.deriveEntityAccess('view') + ' <> 0');\r\n    }\r\n    \r\n    /**\r\n     * --------------------------------------------------\r\n     * RELATED TABLES\r\n     * --------------------------------------------------\r\n     */\r\n    \r\n\t/**\r\n\t * Makes the Query that finds the winning descreet access rules\r\n\t * for the given access type, for the current user OR the closest ancestor on this table (or, table row).\r\n     *\r\n     *  Each row has the following schema:\r\n     * \r\n     *  table_name: ...,\r\n     *  table_row: ...,\r\n     *  target: 1/3/7,\r\n     *  uac: {\r\n     *      read: 0,\r\n     *      write: 0,\r\n     *  },\r\n     *  fields: {\r\n     *      fname: {\r\n     *          uac: {\r\n     *              read: 0,\r\n     *              write: 0,\r\n     *          }\r\n     *      }\r\n     *  },\r\n     *\r\n\t * @return object\r\n\t */\r\n\tstatic getExplicitRulesQuery(USER, tableName) {\r\n\t\tvar targetInLineageQuery = 'FIND_IN_SET(target, \"' + USER.lineage.replace('/', ',') + '\")';\r\n        return {\r\n            table: Schema.tables.uac,\r\n            select: ['*', targetInLineageQuery + ' AS `lineage.target`'],\r\n            where: [\r\n                'table_name = ' + tableName,\r\n                'target = ' + USER.id + ' OR ' + targetInLineageQuery,\r\n            ],\r\n            orderBy: '`lineage.target` DESC',\r\n            limit: 1,\r\n            toString() {\r\n                return 'SELECT ' + this.select.join(', ') \r\n                + ' FROM ' + this.table.name \r\n                + ' WHERE ' + this.where.join(' AND ') \r\n                + ' ORDER BY ' + this.orderBy \r\n                + ' LIMIT ' + this.limit;\r\n            },\r\n        };\r\n    }\r\n            \r\n    /**\r\n     * Composes a query that determines the relatiosnhip\r\n     * between a given owner and guest.\r\n     * \r\n     * A where clause can be subsequnetly added to the query\r\n     * to identify the said owner\r\n     * or a join clause can be added to dynamically identify the said owner\r\n     * as part of a larger query.\r\n     * \r\n     * @param object                   USER \r\n     * @param bool                     groupConcat \r\n     * \r\n     * @return object\r\n     */\r\n    static getOwnerGuestRelationshipQuery(USER, groupConcat = false) {\r\n\t\tvar accessRightQueries = {};\r\n\t\t// Descendant access right\r\n\t\taccessRightQueries['DESCENDANT'] = 'FIND_IN_SET(id, \"' + USER.lineage.replace(USER.id + '/', '').replace(/\\//g, ',') + '\")';\r\n\t\t// Child access right (also a descendant)\r\n\t\taccessRightQueries['DESCENDANT,CHILD'] = 'id = ' + USER.parent;\r\n\t\t// Sibling access right\r\n\t\taccessRightQueries['SIBLING'] = USER.parent + ' = parent';\r\n\t\t// Ancestor access right\r\n\t\taccessRightQueries['ANCESTOR'] = 'FIND_IN_SET(' + USER.id + ', REPLACE(REPLACE(lineage, CONCAT(id, \"/\"), \"\"), \"/\", \",\"))';\r\n\t\t// Parent access right (also an ancestor)\r\n\t\taccessRightQueries['ANCESTOR,PARENT'] = USER.id + ' = parent';\r\n\t\t// Direct attribution\r\n        accessRightQueries['AUTHOR'] = 'id = ' + USER.id;\r\n        // ------\r\n\t\tvar compiledAccessRights = 'NULL'; // No access right\r\n\t\t_each(accessRightQueries, (assertion, right) => {\r\n\t\t\tcompiledAccessRights = 'IF(' + assertion + ', \"' + right + '\", ' + compiledAccessRights + ')';\r\n        });\r\n        // ------\r\n\t\treturn {\r\n            table: Schema.tables.account,\r\n            select: (groupConcat ? 'GROUP_CONCAT(DISTINCT ' : '') + compiledAccessRights + (groupConcat ? ')' : '') + ' AS relationship',\r\n            where: [],\r\n            toString() {\r\n                return 'SELECT ' + this.select \r\n                + ' FROM ' + this.table.name\r\n                + (this.where.length ? ' WHERE ' + this.where.join(' AND ') : '');\r\n            },\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * --------------------------------------------------\r\n     * TOSTRING\r\n     * --------------------------------------------------\r\n     */\r\n    \r\n    /**\r\n     * Stringifies the query.\r\n     * \r\n     * @return string\r\n     */\r\n    toString() {\r\n        return 'SELECT ' + this.select.join(', ') \r\n        + ' FROM ' + this.table.name + ' AS ' + this.alias\r\n        + (this.EXPLICIT_TABLE_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_TABLE_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_TABLE_ACCESS_QUERY.on.join(' AND ') : '')\r\n        + (this.EXPLICIT_ROW_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_ROW_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_ROW_ACCESS_QUERY.on.join(' AND ') : '')\r\n        + (this.AUTHOR_USER_RELATIONSHIP_QUERY ? ' LEFT JOIN (' + this.AUTHOR_USER_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.on.join(' AND ') : '')\r\n        + ' WHERE ' + this.where.join(' AND ');\r\n    }\r\n    \r\n    /**\r\n     * --------------------------------------------------\r\n     * ACCESS LOGIC\r\n     * --------------------------------------------------\r\n     */\r\n\r\n\t/**\r\n\t * Creates the SQL logic that computes descreet access rules and all other rules into a final value\r\n\t * - for entity access.\r\n\t *\r\n\t * @param string \t                accessType\r\n\t * @param bool \t\t                withActingRights\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tderiveEntityAccess(accessType, withActingRights = false) {\r\n\t\tvar entityAccess = [];\r\n\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\r\n\t\t\tentityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\r\n        }\r\n        if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\r\n            entityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\r\n        }\r\n\t\tentityAccess.push(Query.getRightsRulesIntersectionExpression(Query.rules(this.table.uac, accessType), this.getGuestRightsExpression(), withActingRights));\r\n        // ---------------------\r\n\t\treturn 'COALESCE(' + entityAccess.join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates the SQL logic that computes descreet access rules and all \r\n     * other rules into their final values\r\n\t * - for table fields access.\r\n\t *\r\n\t * @param array \t                fields\r\n\t * @param string \t                accessType\r\n\t * @param bool \t\t                withActingRights\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tderiveFieldsAccess(fields, accessType, withActingRights = false) {\r\n\t\tvar fieldsAccesses = {};\r\n\t\tfields.forEach(field => {\r\n\t\t\tvar fieldAccess = [];\r\n\t\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\r\n\t\t\t\tfieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\r\n            }\r\n            if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\r\n\t\t\t    fieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\r\n            }\r\n            fieldAccess.push(Query.getRightsRulesIntersectionExpression(Query.rules(this.table.fields[field].uac, accessType), this.getGuestRightsExpression(), withActingRights));\r\n\t\t\t// In the form: id:\"0\"\r\n\t\t\tfieldsAccesses[field] = 'COALESCE(' + fieldAccess.join(', ') + ')';\r\n\t\t});\r\n\t\treturn fieldsAccesses;\r\n\t}\r\n    \r\n    /**\r\n     * --------------------------------------------------\r\n     * ORGANIC RIGHTS\r\n     * --------------------------------------------------\r\n     */\r\n \r\n    /**\r\n     * Creates the SQL expression for all user rights:\r\n     * Organic + Static Rights\r\n     * \r\n     * return string\r\n     */\r\n    getGuestRightsExpression() {\r\n        var rights = [];\r\n\t\tif (this.AUTHOR_USER_RELATIONSHIP_QUERY) {\r\n\t\t\trights.push(this.AUTHOR_USER_RELATIONSHIP_QUERY.alias + '.relationship');\r\n\t\t\tif (this.AUTHOR_USER_TOKEN_QUERY) {\r\n\t\t\t\trights.push('IF(' + this.AUTHOR_USER_TOKEN_QUERY.alias + '.id, \"user\", \"\")');\r\n\t\t\t}\r\n        }\r\n        if (this.USER.privileges.length) {\r\n            rights.push('\"' + this.USER.privileges.join(',') + '\"');\r\n        }\r\n        // If all conditions above have been met, then we should have here:\r\n        // CONCAT_WS(\",\", _RELATED_ACCOUNT.relationship, IF(_TOKEN.id, \"user\", \"\"), \"ADMIN,ETC\")\r\n        // This would resolve to:\r\n        // \"ANCESTOR,PARENT,101,ADMIN,ETC\";\r\n        return rights.length ? 'CONCAT_WS(\",\", ' + rights.join(', ') + ')' : '\"\"';\r\n    }\r\n    \t\r\n\t/**\r\n\t * Compiles to the SQL string that ssserts which of the current user's\r\n     * total access rights (static + organic rights) passes the\r\n\t * given access rules.\r\n\t *\r\n\t * @param array|string|bool|null\trules\r\n\t * @param string\t\t\t\t\trightsExpression\r\n\t * @param bool\t\t\t\t\t\twithActingRights\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tstatic getRightsRulesIntersectionExpression(rules, rightsExpression, withActingRights = false) {\r\n\t\tvar explicitFirstRule = _isBoolean(rules[0]) ? rules.shift() : null;\r\n\t\t// No rule? Implict TRUE of NULL.\r\n\t\t// Only rule is bool? Explicit TRUE/FALSE\r\n\t\tif (!rules.length) {\r\n\t\t\treturn _isBoolean(explicitFirstRule) ? parseInt(explicitFirstRule) : 'NULL';\r\n        }\r\n        // ---------------------\r\n\t\t// Which RULES are satisfied by RIGHTS?\r\n        // ---------------------\r\n        var nodeAccessAssertions = [];\r\n\t\trules.forEach(rule => {\r\n            var ruleSql = [];\r\n            // Where a rule specifies...\r\n            // PARENT+ETC\r\n\t\t\trule.split('+').forEach(r => {\r\n\t\t\t\truleSql.push('FIND_IN_SET(\"' + r + '\", ' + rightsExpression + ')');\r\n            });\r\n            // Then we would have...\r\n            // IF(FIND_IN_SET(\"PARENT\". \"ANCESTOR,PARENT,101,ADMIN,ETC\") AND FIND_IN_SET(\"ETC\". \"ANCESTOR,PARENT,101,ADMIN,ETC\"), \"PARENT+ETC\", NULL);\r\n\t\t\tnodeAccessAssertions.push('IF(' + ruleSql.join(' AND ') + ', \"' + rule + '\", NULL)');\r\n        });\r\n\t\t// Gather none-NULL assertions\r\n\t\tnodeAccessAssertions = 'COALESCE(' + nodeAccessAssertions.join(', ') + ')';\r\n        // ---------------------\r\n\t\t// So should we invert the given NULLness of the logic?\r\n        // ---------------------\r\n\t\treturn explicitFirstRule \r\n\t\t\t? 'IF(ISNULL(' + nodeAccessAssertions + '), 1, 0)' \r\n\t\t\t: 'IF(ISNULL(' + nodeAccessAssertions + '), 0, ' + (withActingRights ? nodeAccessAssertions : '1') + ')';\r\n    }\r\n    \r\n    /**\r\n     * Gets rules array\r\n     * \r\n     * @param array                     rules\r\n     * @param string                    accessType\r\n     * \r\n     * @return array\r\n     */\r\n    static rules(rules, accessType) {\r\n        if (_isObject(rules)) {\r\n            rules = rules[accessType];\r\n        }\r\n        return _isEmpty(rules) \r\n            ? [] \r\n            : _arrFrom(rules);\r\n    }\r\n};","\r\n/**\r\n * imports\r\n */\r\nimport Schema from '../Schema.js';\r\nimport _arrFrom from '@web-native-js/commons/arr/from.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport Query from './Query.js';\r\n\r\nexport default class Client {\r\n\t\r\n\t/**\r\n\t * Creates the UAC logic that sets the value of each field conditionally.\r\n\t *\r\n\t * @param object            USER\r\n\t * @param string            tableName\r\n\t * @param array\t\t\t\tcolumns\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic select(USER, tableName, columns) {\r\n\t\tcolumns = _arrFrom(columns);\r\n\t\tif (!columns.length || columns[0] === '*') {\r\n\t\t\tcolumns = Object.keys(Schema.tables[tableName].fields);\r\n\t\t}\r\n        // ---------------\r\n        // OBJECT_QUERY\r\n        // ---------------\r\n        var OBJECT_QUERY = new Query(USER, tableName, true);\r\n        // The UAC fields control\r\n\t\t_each(OBJECT_QUERY.deriveFieldsAccess(columns, 'view'), (field, accessPassExpression) => {\r\n\t\t\tOBJECT_QUERY.select.push('IF(' + accessPassExpression + ' <> 0, ' + OBJECT_QUERY.alias + '.' + field + ', NULL) AS ' + field);\r\n        });\r\n        return OBJECT_QUERY;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Returns the list of all accounts that the given rights can be applied to.\r\n\t *\r\n\t * @param object            USER\r\n\t * @param array\t \t\t\torganicRights\r\n\t * @param array\t \t\t\tpriorityAccounts\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic getRelatedAccounts(USER, organicRights, priorityAccounts = []) {\r\n\t\tvar accountSchema = Schema.tables.account;\r\n\t\tvar ACCOUNT_QUERY = {\r\n\t\t\ttable: accountSchema,\r\n\t\t\talias: 'ACCOUNT',\r\n\t\t\tselect: [],\r\n\t\t\twhere: [],\r\n\t\t\torderBy: [],\r\n\t\t\ttoString() {\r\n\t\t\t\treturn 'SELECT ' + this.select.join(', ')\r\n\t\t\t\t+ ' FROM ' + this.table.name + ' AS ' + this.alias\r\n\t\t\t\t+ ' RIGHT JOIN (' + this.AUTHOR_USER_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.on.join(' AND ')\r\n                + ' WHERE ' + this.where.join(' AND ') \r\n                + (this.orderBy.length ? ' ORDER BY ' + this.orderBy : '');\r\n\t\t\t}\r\n\t\t}\r\n\t\t// RIGHT JOIN\r\n\t\tACCOUNT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY = {\r\n\t\t\tquery: Query.getAuthorUserRelationshipQuery(USER, false/* groupConcat */),\r\n\t\t\talias: 'AUTHOR_USER_RELATIONSHIP',\r\n\t\t\ton: [\r\n\t\t\t\tACCOUNT_QUERY.alias + '.' + accountSchema.primaryKey + ' = AUTHOR_USER_RELATIONSHIP.' + accountSchema.primaryKey,\r\n\t\t\t\t'NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)',\r\n\t\t\t],\r\n\t\t};\r\n\t\tif (priorityAccounts) {\r\n\t\t\t// But ensure that the following accounts are listed first, if actually in list\r\n\t\t\tACCOUNT_QUERY.select.push('FIND_IN_SET(' + ACCOUNT_QUERY.alias + '.' + accountSchema.primaryKey + ', \"' + priorityAccounts.join(',') + '\") AS priority');\r\n\t\t\tACCOUNT_QUERY.orderBy.push('priority DESC');\r\n\t\t}\r\n\t\tif (organicRights) {\r\n\t\t\tACCOUNT_QUERY.where.push('AUTHOR_USER_RELATIONSHIP.relationship in (\"' + organicRights.join('\", \"') + '\")');\r\n\t\t}\r\n\t\treturn ACCOUNT_QUERY;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the Query that finds descreet access types\r\n\t * for the current user on this table (or, table row).\r\n\t *\r\n\t * @param object            USER\r\n\t * @param string|array\t\taccesses\r\n\t * @param string|int\t\toverObject\t\t\tThe ID of the subject object.\r\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(The object author will be basis for organic relationship.)\r\n\t * @param int\t\t\t\torAsRelatedTo\t\tWhen not overObject!\r\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(This user ID will be basis for organic relationship.)\r\n\t * @param bool\t\t\t\twithFields\r\n\t * @param bool\t\t\t\twithActingRights\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic getAccessesDoc(USER, accesses, overObject = null, orAsRelatedTo = null, withFields = false, withActingRights = false) {\r\n        // Either of the following two arguments are accepted. Not both\r\n\t\tif (overObject && orAsRelatedTo) {\r\n\t\t\tthrow new Error('UAC queries must be either over an object and its author (argument #2), or as related to a specific user (argument #3). But not both!');\r\n\t\t}\r\n        // ---------------\r\n        // OBJECT_QUERY\r\n        // ---------------\r\n        var OBJECT_QUERY = new Query(USER, tableName, objectId || orAsRelatedTo);\r\n        // JOIN: The user's organic rights towards the author\r\n        if (OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY) {\r\n            OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY.on.push('NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)');\r\n\t\t}\r\n\t\tif (overObject) {\r\n\t\t\t// The author of the object at the given row in _TABLE\r\n            OBJECT_QUERY.where.push(OBJECT_QUERY.table.primaryKey + ' = ' + overObject);\r\n\t\t} else if (OBJECT_QUERY.table.attributionKey && orAsRelatedTo) {\r\n\t\t\t// The author specified in orAsRelatedTo or all possible relationships.\r\n\t\t\t// Whichever the case, _TABLE gets to play no role in this query...\r\n            OBJECT_QUERY.where.push(OBJECT_QUERY.table.attributionKey + ' = ' + orAsRelatedTo);\r\n\t\t\tOBJECT_QUERY.limit = 1;\r\n        }\r\n        // ---------------\r\n        // DOC\r\n        // ---------------\r\n        if (!accesses.length || accesses === '*') {\r\n            accesses = Client.standardAccesses;\r\n        } else {\r\n            accesses = _arrFrom(accesses);\r\n        }\r\n\t\tvar entityJson = [],\r\n\t\t\tfieldsJson = {},\r\n\t\t\tfields = withFields ? Object.keys(OBJECT_QUERY.table.fields) : [];\r\n\t\taccesses.forEach(accessType => {\r\n\t\t\tentityJson.push('JSON_OBJECT(\"' + accessType + '\", COALESCE(' + Query.deriveEntityAccess(accessType, withActingRights) + '))');\r\n\t\t\t_each(Query.deriveFieldsAccess(fields, accessType, withActingRights), (field, access) => {\r\n                if (!fieldsJson[field]) {\r\n                    fieldsJson[field] = [];\r\n                }\r\n\t\t\t\tfieldsJson[field].push('JSON_OBJECT(\"' + accessType + '\", ' + access + ')');\r\n\t\t\t});\r\n\t\t});\r\n\t\tif (accesses.length > 1) {\r\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + entityJson.join(', ') + ') AS uac');\r\n\t\t} else {\r\n\t\t\tOBJECT_QUERY.select.push(entityJson.join(', ') + ' AS uac');\r\n\t\t}\r\n\t\tif (fieldsJson.length) {\r\n\t\t\tvar allFieldsJson = [];\r\n\t\t\t_each(fieldsJson, (field, accessesDocs) => {\r\n\t\t\t\tif (accesses.length > 1) {\r\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", JSON_MERGE(' + accessesDocs.join(', ') + '))');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", ' + accessesDocs.join(', ') + ')');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + allFieldsJson.join(', ') + ') AS fields');\r\n\t\t}\r\n\t\treturn OBJECT_QUERY;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nClient.standardAccesses = [\r\n\t'view', \r\n\t'create', \r\n\t'update', \r\n\t'delete', \r\n\t'stats', \r\n\t'use',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAbstractionInterface,\r\n\tReferenceInterface,\r\n\tLexer\r\n} from '../index.js';\r\nimport Schema from '../Schema.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _objFrom from '@web-native-js/commons/obj/from.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport SelectInterface from './SelectInterface.js';\r\nimport TableInterface from './TableInterface.js';\r\nimport UnionInterface from './UnionInterface.js';\r\nimport DerivedTableBase from '../Base/DerivedTable.js';\r\nimport TableBase from '../Base/Table.js';\r\nimport UACClient from '../Uac/Client.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Table class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Table = class extends TableInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, alias, claused = false) {\r\n\t\tsuper();\r\n\t\t// ReferenceInterface or AbstractionInterface\r\n\t\tthis.expr = expr;\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = claused;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database = null, trap = {}) {\r\n\t\t// Derived table???\r\n\t\tif (this.expr instanceof AbstractionInterface) {\r\n\t\t\treturn new DerivedTableBase(database, this.expr/*ABS*/.expr/*SELECT*/, this.alias, this.getSchema());\r\n\t\t}\r\n\t\tif (this.expr instanceof ReferenceInterface) {\r\n\t\t\t// We must eval() without context...\r\n\t\t\tif (this.expr.context) {\r\n\t\t\t\tvar tableData = this.expr.eval(_objFrom(this.expr.context.name, database), trap);\r\n\t\t\t} else {\r\n\t\t\t\tvar tableData = this.expr.eval(database, trap);\r\n\t\t\t}\r\n\t\t\tif (!_isArray(tableData)) {\r\n\t\t\t\tthrow new Error('Table \"' + this.getName() + '\" could not be initialized!');\r\n\t\t\t}\r\n\t\t\t// + this.expr.name does not have any backticka problem\r\n\t\t\treturn new TableBase(tableData, this.getAlias(), this.getSchema());\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.expr.toString(context), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * --------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tas(alias) {\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = true;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\t// Without backticks\r\n\t\treturn this.expr.name || '';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn this.alias || this.getName();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetSchema() {\r\n\t\tif (this.expr instanceof AbstractionInterface) {\r\n\t\t\tvar derivedQuery = this.expr/*ABS*/.expr/*SELECT*/;\r\n\t\t\tvar derivedTable = derivedQuery.getTable();\r\n\t\t\tvar derivedTableSchema = (_isArray(derivedTable) ? derivedTable[0] : derivedTable).getSchema();\r\n\t\t\tvar derivedTableSchemaAliased = {\r\n\t\t\t\tfields: {},\r\n\t\t\t\tuniqueKeys: [],\r\n\t\t\t};\r\n\t\t\tderivedTableSchemaAliased.name = this.getAlias();\r\n\t\t\t// RUNTIME FIELDS\r\n\t\t\tderivedQuery.getFields().forEach(field => {\r\n\t\t\t\tderivedTableSchemaAliased.fields[field.getAlias()] = derivedTableSchema.fields[field.getName()];\r\n\t\t\t\tif (derivedTableSchema.uniqueKeys.includes(field.getName())) {\r\n\t\t\t\t\tderivedTableSchemaAliased.uniqueKeys.push(field.getAlias());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// STANDARD FIELDS\r\n\t\t\t_each(derivedTableSchema.fields, (name, field) => {\r\n\t\t\t\tif (!derivedTableSchemaAliased.fields[name]) {\r\n\t\t\t\t\tderivedTableSchemaAliased.fields[name] = field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn derivedTableSchemaAliased;\r\n\t\t}\r\n\t\treturn Schema.tables[this.getName()] || {\r\n\t\t\tfields: {},\r\n\t\t\tuniqueKeys: [],\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Table) {\r\n\t\tvar parse = Lexer.lex(expr, [' (as )?'], {useRegex:'i'});\r\n\t\tif (parse.tokens.length < 3) {\r\n\t\t\tvar tableParse = parseCallback(parse.tokens[0]);\r\n\t\t\tif (tableParse instanceof ReferenceInterface) {\r\n\t\t\t\tif (params.withUac) {\r\n\t\t\t\t\ttableParse = parseCallback('(' + UACClient.select(null, tableParse.toString()) + ')', null, {withUac: false});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttableParse.isTableName = true;\r\n\t\t\t\t}\r\n\t\t\t} else if (!(tableParse instanceof AbstractionInterface && (tableParse.expr instanceof SelectInterface || tableParse.expr instanceof UnionInterface))) {\r\n\t\t\t\tthrow new Error('Table expression must be either a plain reference or a (derived) query!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\ttableParse, \r\n\t\t\t\t(parse.tokens[1] || '').trim(), \r\n\t\t\t\t(parse.matches[0] || '').trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Table;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer,\r\n\tAbstractionInterface,\r\n} from '../index.js';\r\nimport _instanceof from '@web-native-js/commons/js/instanceof.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _each from '@web-native-js/commons/obj/each.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport _arrFrom from '@web-native-js/commons/arr/from.js';\r\nimport _find from '@web-native-js/commons/obj/find.js';\r\nimport ArrowReference from '../ArrowReference.js';\r\nimport Table from './Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Delete class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Stmt = class {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetToString(context, callback) {\r\n\t\tvar strArray = [];\r\n\t\t_each(this.exprs, (clauseType, expr) => {\r\n\t\t\tif (!expr) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar str = null;\r\n\t\t\tvar clause = this.clauses[clauseType];\r\n\t\t\tif (clauseType === 'joins') {\r\n\t\t\t\tstr = expr.map((join, i) => clause[i] + ' ' + join.toString(context)).join(' ');\r\n\t\t\t} else if (clauseType === 'table') {\r\n\t\t\t\tstr = clause + ' ' + (\r\n\t\t\t\t\t_isArray(expr) ? expr.map(table => table.toString(context)).join(', ') : expr.toString(context)\r\n\t\t\t\t);\r\n\t\t\t} else if (!callback || !(str = callback(clauseType, expr, clause))) {\r\n\t\t\t\tstr = clause + ' ' + expr.toString(context);\r\n\t\t\t}\r\n\t\t\tstrArray.push(str);\r\n\t\t});\r\n\t\treturn strArray.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic getParse(expr, withUac, stmtClauses, parseCallback, callback) {\r\n\t\t// Match clauses; case-insensitively\r\n\t\tvar useRegex = 'i';\r\n\t\tvar parse = Lexer.lex(expr, Object.values(stmtClauses), {useRegex:useRegex});\r\n\t\tif (parse.matches.length) {\r\n\r\n\t\t\tvar exprs = {}, clauses = {}, vars = [];\r\n\t\t\tparse.matches.forEach((clause, i) => {\r\n\t\t\t\tvar clauseType = _find(stmtClauses, c => clause.match(new RegExp(c, useRegex)), true/*deep*/);\r\n\t\t\t\tvar _expr = parse.tokens[i + 1].trim();\r\n\t\t\t\tvar _exprParse = null;\r\n\t\t\t\tif (clauseType === 'joins') {\r\n\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\r\n\t\t\t\t\tif (_exprParse.type = clause.match(new RegExp('(INNER|CROSS|LEFT|RIGHT)', 'i'))) {\r\n\t\t\t\t\t\t_exprParse.type = _exprParse.type[0].toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!exprs[clauseType]) {\r\n\t\t\t\t\t\texprs[clauseType] = [_exprParse];\r\n\t\t\t\t\t\tclauses[clauseType] = [clause];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texprs[clauseType].push(_exprParse);\r\n\t\t\t\t\t\tclauses[clauseType].push(clause);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (clauseType === 'table') {\r\n\t\t\t\t\t\tvar tables = Lexer.split(_expr, [',']).map(\r\n\t\t\t\t\t\t\ttable => parseCallback(table.trim(), [Table], {withUac})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tvar _exprParse = tables.length === 1 ? tables[0] : tables;\r\n\t\t\t\t\t} else if (!callback || !(_exprParse = callback(clauseType, _expr))) {\r\n\t\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!_instanceof(_exprParse, AbstractionInterface)) {\r\n\t\t\t\t\t\t// Mine vars\r\n\t\t\t\t\t\t_arrFrom(_exprParse, false/*castObjects*/).forEach(__exprParse => {\r\n\t\t\t\t\t\t\tvars = vars.concat(__exprParse.meta.vars.filter(v => !v.isTableName));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Ramp up\r\n\t\t\t\t\tif (clauseType === 'where' && !exprs.joins) {\r\n\t\t\t\t\t\t// Wheres must not come before joins\r\n\t\t\t\t\t\t// This might happen on adding smart joins below\r\n\t\t\t\t\t\t// So we secure a place for joins\r\n\t\t\t\t\t\texprs.joins = [];\r\n\t\t\t\t\t\tclauses.joins = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\texprs[clauseType] = _exprParse;\r\n\t\t\t\t\tclauses[clauseType] = clause;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// ------------------\r\n\r\n\t\t\tvar arrowReferences = vars.filter(v => v.isArrowReference);\r\n\t\t\tif (arrowReferences.length) {\r\n\t\t\t\t// ---------------\r\n\t\t\t\t// Init\r\n\t\t\t\t// ---------------\r\n\t\t\t\tvar smartJoins = {}, tables = (_isArray(exprs.table) ? exprs.table : [exprs.table]).concat(exprs.joins || []);\r\n\t\t\t\tarrowReferences.forEach(arrowRef => {\r\n\t\t\t\t\tvar baseTable = (arrowRef.context ? tables.filter(table => table.getAlias() === arrowRef.context.name + '') : tables)[0];\r\n\t\t\t\t\tvar arrowRefEval = ArrowReference.eval(baseTable.getSchema(), arrowRef.name.replace(/`/g, ''));\r\n\t\t\t\t\tvar uuid = [baseTable.getAlias(), arrowRefEval.a.actingKey, arrowRefEval.b.actingKey, arrowRefEval.b.table.name,].join('_');\r\n\t\t\t\t\tif (!smartJoins[uuid]) {\r\n\t\t\t\t\t\tsmartJoins[uuid] = {\r\n\t\t\t\t\t\t\ta: arrowRefEval.a,\r\n\t\t\t\t\t\t\tb: arrowRefEval.b,\r\n\t\t\t\t\t\t\tselect: [],\r\n\t\t\t\t\t\t\tbaseTable,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The actual table to resolve from\r\n\t\t\t\t\t// id thid joined table\r\n\t\t\t\t\tarrowRef.arrowContext = uuid;\r\n\t\t\t\t\tsmartJoins[uuid].select.push(\r\n\t\t\t\t\t\tarrowRefEval.b.actingKey, // Must come first\r\n\t\t\t\t\t\tarrowRefEval.b.select + ' AS `' + arrowRef.name.replace(/`/g, '') + '`'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\t// ---------------\r\n\t\t\t\t// Use\r\n\t\t\t\t// ---------------\r\n\t\t\t\tif (!exprs.joins) {\r\n\t\t\t\t\texprs.joins = [];\r\n\t\t\t\t\tclauses.joins = [];\r\n\t\t\t\t}\r\n\t\t\t\t_each(smartJoins, (uuid, join) => {\r\n\t\t\t\t\tvar alias = join.b.table.name;\r\n\t\t\t\t\t// ------------------\r\n\t\t\t\t\tvar joinStmt = '(SELECT ' + (withUac ? 'WITH UAC ' : '') + alias + '.' + _unique(join.select).join(', ' + alias + '.') \r\n\t\t\t\t\t\t+ ' FROM ' + join.b.table.name + ' AS ' + alias\r\n\t\t\t\t\t+ ') AS ' + uuid\r\n\t\t\t\t\t+ ' ON ' + uuid + '.' + join.b.actingKey + ' = ' + join.baseTable.getAlias() + '.' + join.a.actingKey;\r\n\t\t\t\t\tjoinStmt = parseCallback(joinStmt);\r\n\t\t\t\t\tjoinStmt.type = 'left';\r\n\t\t\t\t\t// ------------------\r\n\t\t\t\t\texprs.joins.push(joinStmt);\r\n\t\t\t\t\tclauses.joins.push('LEFT JOIN');\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t\treturn {exprs:exprs, clauses:clauses};\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Stmt;\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeleteInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n\r\n/**\r\n * ---------------------------\r\n * Cursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Cursor extends Array {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\t\tthis._onfinish = [];\r\n\t\tthis.cursor = 0;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadvance() {\r\n\t\tif (this.cursor === this.length - 1) {\r\n\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t\treturn;\r\n\t\t}\r\n        this.cursor ++;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tfetch() {\r\n\t\tif (this.cursor < this.length) {\r\n\t\t\treturn this[this.cursor];\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _avg from '@web-native-js/commons/arr/avg.js';\r\nimport _unique from '@web-native-js/commons/arr/unique.js';\r\nimport _max from '@web-native-js/commons/arr/max.js';\r\nimport _min from '@web-native-js/commons/arr/min.js';\r\nimport _sum from '@web-native-js/commons/arr/sum.js';\r\nimport _rand from '@web-native-js/commons/arr/rand.js';\r\nimport _isNull from '@web-native-js/commons/js/isNull.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport _objFrom from '@web-native-js/commons/obj/from.js';\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _get from '@web-native-js/commons/obj/get.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Row class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Row {\r\n\t\r\n\tconstructor(trap) {\r\n\t\tObject.defineProperty(this, '.trap', {value: trap});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCONCAT(...args) {\r\n\t\treturn args.join('');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCONCAT_WS(...args) {\r\n\t\treturn args.join(args.shift());\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOALESCE(...args) {\r\n\t\treturn args.reduce((prev, next) => !_isNull(prev) ? prev : next, null);\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tFIND_IN_SET(substr, str) {\r\n\t\treturn str.indexOf(substr);\r\n\t}\r\n\t\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tISNULL(val) {\r\n\t\treturn _isNull(val);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * ----------------\r\n\t * AGGREGATE FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOUNT(rows, column) {\r\n\t\tif (column.toString() === '*') {\r\n\t\t\treturn rows.length;\r\n\t\t}\r\n\t\tif (arguments.length === 3 && column.toString().toUpperCase() === 'DISTINCT') {\r\n\t\t\tvar vals = _unique(this.COLUMN(rows, arguments[2]));\r\n\t\t} else {\r\n\t\t\tvar vals = this.COLUMN(rows, column);\r\n\t\t}\r\n\t\treturn vals.filter(v => !_isNull(v)).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUP_CONCAT(rows, column) {\r\n\t\treturn this.COLUMN(rows, column).join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUP_CONCAT_WS(rows, separator, column) {\r\n\t\treturn this.COLUMN(rows, column).join(separator.eval(this, this['.trap']));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tAVG(rows, column) {\r\n\t\treturn _avg(this.COLUMN(rows, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tMAX(rows, column) {\r\n\t\treturn _max(this.COLUMN(rows, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tMIN(rows, column) {\r\n\t\treturn _min(this.COLUMN(rows, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tSUM(rows, column) {\r\n\t\treturn _sum(this.COLUMN(rows, column));\r\n\t}\r\n\r\n\t/**\r\n\t * ----------------\r\n\t * AGGREGATE SUPPORT FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tANY_VALUE(rows, column) {\r\n\t\treturn _rand(this.COLUMN(rows, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUPING(rows, ...onColumns) {\r\n\t\tif (!this.AGGR || !this.AGGR.isRollup) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn onColumns.reduce((cum, column, i) => {\r\n\t\t\tvar match = this.AGGR.by.filter(by => {\r\n\t\t\t\tvar byStr = by.toString();\r\n\t\t\t\tvar columnStr = column.toString();\r\n\t\t\t\tif (columnStr.indexOf('.') === -1 && byStr.indexOf('.') > -1) {\r\n\t\t\t\t\tbyStr = _after(byStr, '.');\r\n\t\t\t\t}\r\n\t\t\t\treturn columnStr === byStr;\r\n\t\t\t});\r\n\t\t\treturn match.length ? i + 1 : cum;\r\n\t\t}, 0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOLUMN(rows, arg) {\r\n\t\treturn rows.map(row => arg.eval(row, this['.trap']));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOLUMNS(rows, args) {\r\n\t\treturn args.map(arg => this.COLUMN(rows, arg));\r\n\t}\r\n\t\r\n\t/**\r\n\t * ----------------\r\n\t * JSON FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_EXTRACT(doc, path) {\r\n\t\treturn _get(JSON.parse(doc), path.split('.').slice(1));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_OBJECT(name, value) {\r\n\t\treturn _objFrom(name, value);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_MERGE(doc1, doc2) {\r\n\t\treturn _merge(JSON.parse(doc1), JSON.parse(doc2));\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _sum from './sum.js';\r\n\r\n/**\r\n * Gets the average of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\treturn arr.length ? _sum(arr) / arr.length : 0;\r\n};","\r\n/**\r\n * Gets the maximum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.max(v1, v2), arr.shift());\r\n};\r\n","\r\n/**\r\n * Gets the minimum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.min(v1, v2), arr.shift());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _remove from '@web-native-js/commons/arr/remove.js';\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _objFrom from '@web-native-js/commons/obj/from.js';\r\nimport Cursor from './Cursor.js';\r\nimport Row from './Row.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Base class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Base {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(trap, table, where, ...joins) {\r\n\t\tthis.trap = trap;\r\n\t\tthis.table = table;\r\n\t\tthis.where = where;\r\n\t\tthis.joins = joins;\r\n\t\t// -------------------------\r\n\t\tthis.cursor = new Cursor(...table.rows.filter(r => r));\r\n\t\tthis.cursor.onfinish(() => {\r\n\t\t\tthis.eof = true;\r\n\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t});\r\n\t\tthis._onfinish = [];\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tcreateJoinCursors(baseAlias, baseRow, finishCallback) {\r\n\t\t// ----------\r\n\t\t// Fill cursors\r\n\t\t// ----------\r\n\t\tvar cursors = this.joins.map(join => {\r\n\t\t\tvar cursor = new Cursor;\r\n\t\t\tcursor.source = join;\r\n\t\t\treturn cursor;\r\n\t\t});\r\n\t\tfor (var i = 0; i < this.joins.length; i ++) {\r\n\t\t\tvar joinTable = this.joins[i];\r\n\t\t\tvar cursor = cursors.filter(cursor => cursor.source.alias === joinTable.alias)[0];\r\n\t\t\tjoinTable.rows.forEach(joinRow => {\r\n\t\t\t\tif (!joinRow) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!joinTable.join || joinTable.join.type === 'full') {\r\n\t\t\t\t\tcursor.push(joinRow);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (joinTable.join.conditionClause.trim().toLowerCase() === 'using') {\r\n\t\t\t\t\t\t\t// Join using \"column name\"...\r\n\t\t\t\t\t\t\tvar column = joinTable.join.condition.toString();\r\n\t\t\t\t\t\t\tvar shouldJoin = joinRow[column] === baseRow[column];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar rowComposition = new Row(this.trap);\r\n\t\t\t\t\t\t\trowComposition[baseAlias] = baseRow;\r\n\t\t\t\t\t\t\trowComposition[joinTable.alias] = joinRow;\r\n\t\t\t\t\t\t\tvar shouldJoin = joinTable.join.condition.eval(rowComposition, this.trap);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (shouldJoin) {\r\n\t\t\t\t\t\t\tcursor.push(joinRow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tthrow new Error('[\"' + joinTable.join.condition.toString() + '\" in JOIN clause]: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (!cursor.length) {\r\n\t\t\t\tswitch(joinTable.join.type) {\r\n\t\t\t\t\tcase 'left':\r\n\t\t\t\t\t\t// Clear joined table\r\n\t\t\t\t\t\tcursor.push({});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\t// Clear base table\r\n\t\t\t\t\t\tbaseRow = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'inner':\r\n\t\t\t\t\t\t// Invalid base row\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t// ----------\r\n\t\t// Setup cursors\r\n\t\t// ----------\r\n\t\treturn cursors.map((cursor, i) => {\r\n\t\t\tvar following = cursors[i + 1];\r\n\t\t\tif (!following) {\r\n\t\t\t\tcursor.onfinish(finishCallback);\r\n\t\t\t} else {\r\n\t\t\t\tcursor.onfinish(following.advance.bind(following));\r\n\t\t\t}\r\n\t\t\treturn cursor;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tfetch() {\r\n\t\tif (this.eof) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar rowComposition = new Row(this.trap);\r\n\t\trowComposition[this.table.alias] = this.cursor.fetch();\r\n\t\tif (this.joins.length) {\r\n\t\t\t// ----------\r\n\t\t\t// Setup\r\n\t\t\t// ----------\r\n\t\t\tif (!this.joinCursors) {\r\n\t\t\t\tvar baseAlias = this.table.alias;\r\n\t\t\t\tvar baseRow = this.cursor.fetch();\r\n\t\t\t\tthis.cursor.advance();\r\n\t\t\t\tthis.joinCursors = this.createJoinCursors(baseAlias, baseRow, () => {\r\n\t\t\t\t\tthis.joinCursors = null;\r\n\t\t\t\t});\r\n\t\t\t\t// An innerjoin caused an invalid row\r\n\t\t\t\tif (!this.joinCursors) {\r\n\t\t\t\t\treturn this.fetch();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ----------\r\n\t\t\t// Build rows now\r\n\t\t\t// ----------\r\n\t\t\tthis.joinCursors.forEach(cursor => {\r\n\t\t\t\trowComposition[cursor.source.alias] = cursor.fetch();\r\n\t\t\t});\r\n\t\t\tthis.joinCursors[0].advance();\r\n\t\t} else {\r\n\t\t\tthis.cursor.advance();\r\n\t\t}\r\n\t\t// ----------\r\n\t\t// Apply where\r\n\t\t// ----------\r\n\t\ttry {\r\n\t\t\tif (this.where && !this.where.eval(rowComposition, this.trap)) {\r\n\t\t\t\treturn this.fetch();\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.where.toString() + '\" in WHERE clause]: ' + e.message);\r\n\t\t}\r\n\t\treturn rowComposition;\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@web-native-js/commons/js/mixin.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport Stmt from './Stmt.js';\r\nimport DeleteInterface from './DeleteInterface.js';\r\nimport Base from '../Base/Base.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Delete class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Delete = class extends _mixin(Stmt, DeleteInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, trap = {}) {\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tvar tables = (_isArray(this.exprs.table) ? this.exprs.table : [this.exprs.table]).concat(this.exprs.joins || []);\r\n\t\ttables = tables.map(table => table.eval(database, trap))\r\n\t\tthis.base = new Base(trap, tables.shift(), this.exprs.where, ...tables);\r\n\t\tvar rowComposition, count = 0;\r\n\t\twhile(rowComposition = this.base.fetch()) {\r\n\t\t\tObject.keys(rowComposition).forEach(alias => {\r\n\t\t\t\tvar sourceTable;\r\n\t\t\t\tif (alias === this.base.table.alias) {\r\n\t\t\t\t\tsourceTable = this.base.table;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsourceTable = this.base.joins.filter(join => join.alias === alias)[0];\r\n\t\t\t\t}\r\n\t\t\t\tsourceTable.rows.forEach((row, i) => {\r\n\t\t\t\t\tif (row === rowComposition[alias]) {\r\n\t\t\t\t\t\tdelete sourceTable.rows[i];\r\n\t\t\t\t\t\tcount ++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.getToString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Delete) {\r\n\t\tif (expr.trim().match(/^DELETE[ ]+FROM/, 'i')) {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/DELETE[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, Static.clauses, parseCallback);\r\n\t\t\treturn new Static(stmtParse.exprs, stmtParse.clauses, withUac);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nDelete.clauses = {\r\n\ttable: 'DELETE[ ]+FROM',\r\n\twhere: 'WHERE',\r\n\t// inner join, cross join, {left|right} [outer] join\r\n\tjoins: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Delete;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FieldInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FieldExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAbstractionInterface,\r\n\tReferenceInterface,\r\n\tLexer\r\n} from '../index.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _objFrom from '@web-native-js/commons/obj/from.js';\r\nimport FieldInterface from './FieldInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Field class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Field = class extends FieldInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, alias, claused = false) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = claused;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * --------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tas(alias) {\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = true;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\t// Without backticks\r\n\t\treturn (this.expr.name || '').replace(/`/g, '');\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn (this.alias || '').replace(/`/g, '') || this.getName();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, database, trap = {}) {\r\n\t\tif (this.expr instanceof AbstractionInterface) {\r\n\t\t\tvar value = this.expr.eval(database, trap);\r\n\t\t} else {\r\n\t\t\tvar value = this.expr.eval(tempRow, trap);\r\n\t\t}\r\n\t\treturn _objFrom(this.getAlias(), value);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(tempRow = null) {\r\n\t\treturn [this.expr.toString(tempRow), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Field) {\r\n\t\tvar splits = Lexer.split(expr, [' (as )?'], {useRegex:'i', preserveDelims:true});\r\n\t\tvar exprParse = null;\r\n\t\tvar alias = splits.pop().trim();\r\n\t\tvar claused = alias.substr(0, 3).toLowerCase() === 'as ';\r\n\t\tif (claused) {\r\n\t\t\t// With an \"AS\" clause, its easy to obtain the alias...\r\n\t\t\t// E.g: SELECT first_name AS fname, 4 + 5 AS result, 5 + 5\r\n\t\t\talias = alias.substr(3).trim();\r\n\t\t\texprParse = parseCallback(splits.join('').trim());\r\n\t\t} else if (splits.length && (!alias.match(/[^0-9a-zA-Z_]/) || _wrapped(alias, '`', '`'))) {\r\n\t\t\t// Without an \"AS\" clause, its hard to determine if an expression is actually aliased...\r\n\t\t\t// E.g: In the statement SELECT first_name fname, 4 + 5 result, 5 + 5 FROM ...,\r\n\t\t\t// we can only assume that the last space-separated expr is rhe alias.\r\n\t\t\t// When that fails, then it is most-likely there is no alias. \r\n\t\t\ttry {\r\n\t\t\t\texprParse = parseCallback(splits.join('').trim());\r\n\t\t\t} catch(e) {}\r\n\t\t}\r\n\t\tif (!exprParse) {\r\n\t\t\talias = null;\r\n\t\t\texprParse = parseCallback(expr);\r\n\t\t}\r\n\t\texprParse.isFieldName = true;\r\n\t\treturn new Static(exprParse, alias, claused);\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Field;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * GroupByInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'GroupByExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '../index.js';\r\nimport _inherit from '@web-native-js/commons/obj/inherit.js';\r\nimport _copy from '@web-native-js/commons/obj/copy.js';\r\nimport _after from '@web-native-js/commons/str/after.js';\r\nimport GroupByInterface from './GroupByInterface.js';\r\nimport Row from '../Base/Row.js';\r\n\r\n/**\r\n * ---------------------------\r\n * GroupBy class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst GroupBy = class extends GroupByInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(columns, having = null, withRollup = false) {\r\n\t\tsuper();\r\n\t\tthis.columns = columns;\r\n\t\tthis.having = having;\r\n\t\tthis.withRollup = withRollup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, trap = {}) {\r\n\t\tvar groupBy = (rows, by, result) => {\r\n\t\t\t// This will end up either as\r\n\t\t\t// regular summary or rollup {super summary}\r\n\t\t\tif (by.length) {\r\n\t\t\t\t// Drilldown...\r\n\t\t\t\tvar grouping = {};\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar _for = by[0].eval(row, trap);\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tthrow new Error('[\"' + this.toString() + '\" in group by clause]: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgrouping[_for] = grouping[_for] || [];\r\n\t\t\t\t\tgrouping[_for].push(row);\r\n\t\t\t\t});\r\n\t\t\t\tObject.values(grouping).map(group => groupBy(group, by.slice(1), result));\r\n\t\t\t}\r\n\t\t\tif (!by.length/*We're on end nodes*/ || this.withRollup) {\r\n\t\t\t\tvar summaryRow = new Row(trap); _inherit(summaryRow, rows[0]);\r\n\t\t\t\tsummaryRow.$ = _copy(summaryRow.$);\r\n\t\t\t\tsummaryRow.AGGR = {rows: rows, by: by};\r\n\t\t\t\t// HOW WE'LL DETERMINE A SUPER AGGREGATE ROW...\r\n\t\t\t\tsummaryRow.AGGR.isRollup = by.length && this.withRollup;\r\n\t\t\t\tif (summaryRow.AGGR.isRollup) {\r\n\t\t\t\t\tby.forEach(b => {\r\n\t\t\t\t\t\tb = b.toString().indexOf('.') > -1 ? _after(b.toString(), '.') : b.toString();\r\n\t\t\t\t\t\tif (b in summaryRow.$) {\r\n\t\t\t\t\t\t\tsummaryRow.$[b] = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(summaryRow);\r\n\t\t\t\treturn summaryRow;\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar result = [];\r\n\t\tgroupBy(tempRows, this.columns.slice(), result);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [this.columns.map(c => c.toString(context)).join(', ')];\r\n\t\tif (this.withRollup) {\r\n\t\t\tstr.push('WITH ROLLUP');\r\n\t\t}\r\n\t\tif (this.having) {\r\n\t\t\tstr.push('HAVING ' + this.having.toString(context));\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = GroupBy) {\r\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP', 'HAVING'], {useRegex:'i'});\r\n\t\tvar columns = Lexer.split(parse.tokens.shift().trim(), [',']).map(\r\n\t\t\tc => parseCallback(c.trim())\r\n\t\t);\r\n\t\tvar having = null;\r\n\t\tvar withRollup = false;\r\n\t\tparse.matches.forEach(clauseType => {\r\n\t\t\tif (clauseType.toLowerCase().startsWith('with')) {\r\n\t\t\t\twithRollup = true;\r\n\t\t\t\tparse.tokens.shift();\r\n\t\t\t} else if (clauseType.toLowerCase().startsWith('having')) {\r\n\t\t\t\thaving = parseCallback(parse.tokens.shift().trim());\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn new Static(columns, having, withRollup);\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default GroupBy;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * InsertInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'InsertStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\n//import ValInterface from './ValInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Val class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst Val = class {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(input) {\r\n\t\tthis.input = input;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.input;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '?';\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Val;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '../index.js';\r\nimport _wrapped from '@web-native-js/commons/str/wrapped.js';\r\nimport _unwrap from '@web-native-js/commons/str/unwrap.js';\r\nimport _intersect from '@web-native-js/commons/arr/intersect.js';\r\nimport InsertInterface from './InsertInterface.js';\r\nimport Assignment from './Assignment.js';\r\nimport Reference from './Reference.js';\r\nimport Assertion from './Assertion.js';\r\nimport Comparison from './Comparison.js';\r\nimport Base from '../Base/Base.js';\r\nimport Table from './Table.js';\r\nimport Val from './Val.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Insert class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Insert = class extends InsertInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(table, columns, values, withUac, insertType, onDuplicateKeyUpdate) {\r\n\t\tsuper();\r\n\t\tthis.table = table;\r\n\t\tthis.columns = columns;\r\n\t\tthis.values = values;\r\n\t\tthis.withUac = withUac;\r\n\t\tthis.insertType = insertType;\r\n\t\tthis.onDuplicateKeyUpdate = onDuplicateKeyUpdate;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, trap = {}) {\r\n\t\tvar tableBase = this.table.eval(database, trap);\r\n\t\tvar tableSchema = this.table.getSchema();\r\n\t\t// ---------------------------\r\n\t\tvar values = this.values;\r\n\t\tvar insertType = this.insertType.toUpperCase();\r\n\t\tif (insertType === 'SET') {\r\n\t\t\tvar columns = values.map(assignment => assignment.reference.name);\r\n\t\t\tvalues = [values.map(assignment => assignment.val)];\r\n\t\t} else {\r\n\t\t\tif (insertType === 'SELECT') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvalues = values.eval(database, trap).map(row => Object.values(row));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tthrow new Error('[\"' + values.toString() + '\" in SELECT clause]: ' + e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar columns = this.columns || (tableSchema.fields ? Object.keys(tableSchema.fields) : []);\r\n\t\t}\r\n\t\tcolumns = columns.map(c => c + '');\r\n\t\tvar uniqueKeys = _intersect(tableSchema.uniqueKeys, columns);\r\n\t\tvar rowCount = 0;\r\n\t\tvar rowArr = null;\r\n\t\twhile (rowArr = values.shift()) {\r\n\t\t\t// ------------------------\r\n\t\t\t// HANDLE ON_DUPLICATE_KEY_UPDATE\r\n\t\t\t// ------------------------\r\n\t\t\tvar duplicateKeyUpdateCount = 0;\r\n\t\t\tif (uniqueKeys.length) {\r\n\t\t\t\t// Generate a comparisons list on values going into unique keys\r\n\t\t\t\tvar comparisons = uniqueKeys.map(columnName => {\r\n\t\t\t\t\tvar keyColumnPosition = columns.indexOf(columnName);\r\n\t\t\t\t\tvar valueExpr = insertType === 'SELECT' \r\n\t\t\t\t\t\t? new Val(rowArr[keyColumnPosition]) \r\n\t\t\t\t\t\t: rowArr[keyColumnPosition]/*Still a parse object*/;\r\n\t\t\t\t\tvar nameExpr = new Reference(null, columnName);\r\n\t\t\t\t\tnameExpr.parseCallback = this.parseCallback;\r\n\t\t\t\t\treturn new Comparison(nameExpr, valueExpr, '=');\r\n\t\t\t\t});\r\n\t\t\t\t// Generate the assertion\r\n\t\t\t\tvar where = new Assertion(comparisons, Assertion.operators.or);\r\n\t\t\t\tvar base = new Base(trap, this.table.eval(database, trap), where);\r\n\t\t\t\tvar rowBase;\r\n\t\t\t\twhile (rowBase = base.fetch()) {\r\n\t\t\t\t\tif (!this.onDuplicateKeyUpdate) {\r\n\t\t\t\t\t\tthrow new Error('Inserting duplicate values on unique keys: ' + uniqueKeys.join(', '));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.onDuplicateKeyUpdate.forEach(assignment => assignment.eval(rowBase, trap));\r\n\t\t\t\t\tduplicateKeyUpdateCount ++;\r\n\t\t\t\t}\r\n\t\t\t\trowCount += duplicateKeyUpdateCount;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// HANDLE INSERT\r\n\t\t\t// ------------------------\r\n\t\t\tif (!duplicateKeyUpdateCount) {\r\n\t\t\t\tif (insertType !== 'SELECT') {\r\n\t\t\t\t\trowArr = rowArr.map(val => val.eval(database, trap));\r\n\t\t\t\t}\r\n\t\t\t\ttableBase.insert(rowArr, columns);\r\n\t\t\t\trowCount ++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rowCount;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [this.table.toString(context)];\r\n\t\tif (this.insertType.toUpperCase() === 'SET') {\r\n\t\t\tstr.push('SET ' + this.values.map(assignment => assignment.toString(context)).join(', '));\r\n\t\t} else {\r\n\t\t\tif (this.columns) {\r\n\t\t\t\tstr.push('(' + this.columns.join(', ') + ')');\r\n\t\t\t}\r\n\t\t\tif (this.insertType.toUpperCase() === 'SELECT') {\r\n\t\t\t\tstr.push(this.values.toString(context));\r\n\t\t\t} else {\r\n\t\t\t\tstr.push('VALUES (' + this.values.map(\r\n\t\t\t\t\trow => row.map(\r\n\t\t\t\t\t\tval => val.toString(context)\r\n\t\t\t\t\t).join(', ')\r\n\t\t\t\t).join('), (') + ')');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.onDuplicateKeyUpdate) {\r\n\t\t\tstr.push('ON DUPLICATE KEY UPDATE ' + this.onDuplicateKeyUpdate.map(assignment => assignment.toString(context)).join(', '));\r\n\t\t}\r\n\t\treturn 'INSERT INTO ' + str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Insert) {\r\n\t\tif (expr.trim().match(/^INSERT([ ]+WITH[ ]+UAC)?([ ]+INTO)?/, 'i')) {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/INSERT[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar parse = Lexer.lex(expr, Object.values(Insert.clauses), {useRegex:'i'});\r\n\t\t\tparse.tokens.shift();\r\n\t\t\tvar table = parse.tokens.shift().trim();\r\n\t\t\tvar columns = [];\r\n\t\t\tvar values = parse.tokens.shift();\r\n\t\t\tvar insertType = parse.matches[1].toUpperCase();\r\n\t\t\tif (insertType === 'SET') {\r\n\t\t\t\ttable = parseCallback(table, [Table]);\r\n\t\t\t\tvalues = Lexer.split(values.trim(), [','])\r\n\t\t\t\t\t.map(e => parseCallback(e.trim(), [Assignment]));\r\n\t\t\t} else {\r\n\t\t\t\tvar tableColumnSplit = Lexer.split(table, [' ']);\r\n\t\t\t\ttable = parseCallback(tableColumnSplit.shift().trim(), [Table]);\r\n\t\t\t\tif (tableColumnSplit.length) {\r\n\t\t\t\t\tcolumns = tableColumnSplit[0].trim();\r\n\t\t\t\t\tcolumns = Lexer.split(_wrapped(columns, '(', ')') ? _unwrap(columns, '(', ')') : columns, [','])\r\n\t\t\t\t\t\t.map(c => c.trim());\r\n\t\t\t\t}\r\n\t\t\t\tif (insertType === 'SELECT') {\r\n\t\t\t\t\tvalues = parseCallback('SELECT ' + values.trim());\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// insertType === 'VALUES' || insertType === 'VALUE'\r\n\t\t\t\t\tvalues = Lexer.split(values.trim(), [','])\r\n\t\t\t\t\t\t.map(row => Lexer.split(_unwrap(row.trim(), '(', ')'), [','])\r\n\t\t\t\t\t\t\t.map(val => parseCallback(val.trim())));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar onDuplicateKeyUpdate = parse.tokens.shift();\r\n\t\t\tif (onDuplicateKeyUpdate) {\r\n\t\t\t\tonDuplicateKeyUpdate = Lexer.split(onDuplicateKeyUpdate.trim(), [','])\r\n\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [Assignment]));\r\n\t\t\t}\r\n\t\t\tvar instance = new Static(table, columns, values, withUac, insertType, onDuplicateKeyUpdate);\r\n\t\t\tinstance.parseCallback = parseCallback;\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nInsert.clauses = {\r\n\ttable: 'INSERT([ ]+INTO)?',\r\n\tvalues: '(VALUES|VALUE|SET|SELECT)',\r\n\tupdate: 'ON[ ]+DUPLICATE[ ]+KEY[ ]+UPDATE',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Insert;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'JoinConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport JoinInterface from './JoinInterface.js';\r\nimport {Lexer} from '../index.js';\r\nimport Table from './Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Join class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Join = class extends JoinInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(table, condition, conditionClause) {\r\n\t\tsuper();\r\n\t\tthis.table = table;\r\n\t\tthis.condition = condition;\r\n\t\tthis.conditionClause = conditionClause;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, trap = {}) {\r\n\t\tvar TableBase = this.table.eval(database, trap);\r\n\t\tTableBase.join = {\r\n\t\t\ttype: this.type, // Expected to be added by context\r\n\t\t\tcondition: this.condition, \r\n\t\t\tconditionClause: this.conditionClause\r\n\t\t};\r\n\t\treturn TableBase;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\treturn this.table.getName();\r\n\t}\t\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn this.table.getAlias();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.table.toString(context), \r\n\t\t\tthis.conditionClause, \r\n\t\t\tthis.condition.toString(context)\r\n\t\t].join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Join) {\r\n\t\tvar parse = Lexer.lex(expr, Join.clauses);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(parse.tokens[0], [Table]), \r\n\t\t\t\tparseCallback(parse.tokens[1]), \r\n\t\t\t\tparse.matches[0]\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nJoin.clauses = [' on ', ' using ', ' ON ', ' USING ',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Join;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Mql, {\r\n\tLexer\r\n} from '../index.js';\r\nimport _mixin from '@web-native-js/commons/js/mixin.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport _arrFrom from '@web-native-js/commons/arr/from.js';\r\nimport _pushUnique from '@web-native-js/commons/arr/pushUnique.js';\r\nimport _merge from '@web-native-js/commons/obj/merge.js';\r\nimport _find from '@web-native-js/commons/obj/find.js';\r\nimport SelectInterface from './SelectInterface.js';\r\nimport AggrInterface from './AggrInterface.js';\r\nimport JoinInterface from './JoinInterface.js';\r\nimport Field from './Field.js';\r\nimport Stmt from './Stmt.js';\r\nimport Window from './Window.js';\r\nimport GroupBy from './GroupBy.js';\r\nimport OrderBy from './OrderBy.js';\r\nimport Base from '../Base/Base.js';\r\nimport Schema from '../Schema.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Select class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Select = class extends _mixin(Stmt, SelectInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac = false, flags = [], references = []) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t\tthis.flags = flags;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Fields\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetFields() {\r\n\t\treturn this.exprs.fields;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Table component\r\n\t * \r\n\t * @return Object|array\r\n\t */\r\n\tgetTable() {\r\n\t\treturn this.exprs.table;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Where component\r\n\t * \r\n\t * @return Object\r\n\t */\r\n\tgetWhere() {\r\n\t\treturn this.exprs.where;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Join components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetJoins() {\r\n\t\treturn this.exprs.joins;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's GroupBy components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetGroupBy() {\r\n\t\treturn this.exprs.groupBy;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Windows components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetWindows() {\r\n\t\treturn this.exprs.windows;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's OrderBy components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetOrderBy() {\r\n\t\treturn this.exprs.orderBy;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Offset components\r\n\t * \r\n\t * @return string\r\n\t */\r\n\tgetOffset() {\r\n\t\treturn this.exprs.offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Limit components\r\n\t * \r\n\t * @return string\r\n\t */\r\n\tgetLimit() {\r\n\t\treturn this.exprs.limit;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, trap = {}) {\r\n\t\t// ---------------------------\r\n\t\t// UNDERSTAND AGGREGATIONS\r\n\t\t// ---------------------------\r\n\t\tvar aggrExprs = {aggr:[], win:[]};\r\n\t\tthis.meta.vars.forEach(x => {\r\n\t\t\tif (x instanceof AggrInterface) {\r\n\t\t\t\t_pushUnique(x.window ? aggrExprs.win : aggrExprs.aggr, x);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// ---------------------------\r\n\t\t// BUILD RESPONSE ROWS INTO THE \"$\" KEY\r\n\t\t// ---------------------------\r\n\t\tvar applyFields = (tempRows, fields, collectAggrs = null) => {\r\n\t\t\tif (collectAggrs) {\r\n\t\t\t\tcollectAggrs = {aggr:[], win:[]};\r\n\t\t\t}\r\n\t\t\ttempRows.forEach(tempRow => {\r\n\t\t\t\tif (!tempRow.$) {\r\n\t\t\t\t\ttempRow.$ = {};\r\n\t\t\t\t}\r\n\t\t\t\tfields.forEach(field => {\r\n\t\t\t\t\tif (collectAggrs) {\r\n\t\t\t\t\t\t// This build will ignore AGGR columns for nowthis.\r\n\t\t\t\t\t\tvar aggrs = field.expr.meta.vars.slice().concat([field.expr]).filter(x => x instanceof AggrInterface);\r\n\t\t\t\t\t\tif (aggrs.length) {\r\n\t\t\t\t\t\t\t_pushUnique(aggrs.filter(x => x.window).length ? collectAggrs.win : collectAggrs.aggr, field);\r\n\t\t\t\t\t\t\t// But we'll set them to UNDEFINED (not NULL), to secure their slots\r\n\t\t\t\t\t\t\tif (!(field.getAlias() in tempRow.$)) {\r\n\t\t\t\t\t\t\t\ttempRow.$[field.getAlias()] = undefined;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t_merge(1, tempRow.$, field.eval(tempRow, database, trap));\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tthrow new Error('[\"' + field.toString() + '\" in field list]: ' + e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn collectAggrs;\r\n\t\t};\r\n\t\t\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tvar tables = (_isArray(this.exprs.table) ? this.exprs.table : [this.exprs.table]).concat(this.exprs.joins || []);\r\n\t\tvar tablessss = tables.map(table => table.eval(database, trap));\r\n\t\tvar mainTable = tablessss.shift();\r\n\t\t\r\n\t\tthis.base = new Base(trap, mainTable, this.exprs.where, ...tablessss);\r\n\t\t// BUILD (TEMP) ROWS, WHERE\r\n\t\tvar tempRows = [], tempRow;\r\n\t\twhile (tempRow = this.base.fetch()) {\r\n\t\t\ttempRows.push(tempRow);\r\n\t\t}\r\n\t\t// BUILD FIELDS\r\n\t\tvar fields = [], _fields, _schema;\r\n\t\tthis.exprs.fields.forEach(field => {\r\n\t\t\tif (field.getName() === '*') {\r\n\t\t\t\ttables.forEach(table => {\r\n\t\t\t\t\tif (table instanceof JoinInterface) {\r\n\t\t\t\t\t\ttable = table.table;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(_schema = table.getSchema())) {\r\n\t\t\t\t\t\tthrow new Error('Can\\'t resolve *; schema not found for table \"' + table.getName() + '\".');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(_fields = Object.keys(_schema.fields)).length) {\r\n\t\t\t\t\t\tthrow new Error('Can\\'t resolve *; fields not defined for table \"' + table.getName() + '\".');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_fields.forEach(_field => {\r\n\t\t\t\t\t\tfields.push(Mql.parse(_field, [Field]));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfields.push(field);\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar aggrFields = applyFields(tempRows, fields, true/*collectAggrs*/);\r\n\r\n\t\t// ---------------------------\r\n\t\t// GROUP BY?\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.groupBy || aggrExprs.aggr.length) {\r\n\t\t\tvar groupBy = this.exprs.groupBy || new GroupBy([]);\r\n\t\t\ttempRows = groupBy.eval(tempRows, trap);\r\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR columns\r\n\t\t\tapplyFields(tempRows, aggrFields.aggr);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// WINDOWING\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.windows || aggrExprs.win.length) {\r\n\t\t\tvar completed = [];\r\n\t\t\taggrExprs.win.forEach(expr => {\r\n\t\t\t\tvar uuid = expr.window.toString();\r\n\t\t\t\tif (completed.indexOf(uuid) === -1) {\r\n\t\t\t\t\texpr.window.eval(tempRows, this.exprs.windows, trap);\r\n\t\t\t\t\tcompleted.push(uuid);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR OVER () columns\r\n\t\t\tapplyFields(tempRows, aggrFields.win);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// ORDER BY\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.orderBy) {\r\n\t\t\ttempRows = this.exprs.orderBy.eval(tempRows, trap);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// DISTINCT\r\n\t\t// ---------------------------\r\n\t\tif (this.flags.includes('DISTINCT')) {\r\n\t\t\ttempRows = tempRows.filter((tempRow, i) => i === _find(tempRows, _tempRow => _even(_tempRow, tempRow)));\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// LIMIT\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.offset || this.exprs.limit) {\r\n\t\t\tvar limit = this.exprs.limit ? this.exprs.limit.slice() : [];\r\n\t\t\tvar offset = this.exprs.offset || (limit.length === 2 ? limit.shift() : 0);\r\n\t\t\ttempRows = limit.length \r\n\t\t\t\t? tempRows.slice(offset, offset + limit[0]) \r\n\t\t\t\t: tempRows.slice(offset);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// SEND RESPONSE ROWS\r\n\t\t// ---------------------------\r\n\t\treturn tempRows.map(tempRow => tempRow.$);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.getToString(context, (clauseType, expr, clause) => {\r\n\t\t\tif (clauseType === 'fields') {\r\n\t\t\t\treturn clause + ' ' + (this.flags.length ? ' ' + this.flags.join(' ') : '') + expr.map(x => x.toString(context)).join(', ');\r\n\t\t\t} else if (clauseType === 'windows') {\r\n\t\t\t\treturn clause + ' ' + Object.keys(expr).map(\r\n\t\t\t\t\twindowName => windowName + ' AS ' + expr[windowName].toString(context)\r\n\t\t\t\t).join(', ');\r\n\t\t\t} else if (clauseType === 'groupBy' || clauseType === 'orderBy') {\r\n\t\t\t\treturn clause + ' ' + expr.toString(context);\r\n\t\t\t} else if (clauseType === 'limit') {\r\n\t\t\t\treturn clause + ' ' + expr.join(', ');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Select) {\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'select') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/SELECT[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, Static.clauses, parseCallback, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'fields') {\r\n\t\t\t\t\treturn Lexer.split(_expr, [',']).map(\r\n\t\t\t\t\t\tfield => parseCallback(field.trim(), [Field])\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (clauseType === 'windows') {\r\n\t\t\t\t\tvar windowsByName = {};\r\n\t\t\t\t\tLexer.split(_expr, [',']).forEach(window => {\r\n\t\t\t\t\t\t// WINDOW w AS (PARTITION BY country ORDER BY city ASC, state DESC), u AS (...)\r\n\t\t\t\t\t\t// NOTICE the space around \"as\", important in view of \"city ASC\"\r\n\t\t\t\t\t\tvar windowSplit = window.split(new RegExp(' as ', 'i'));\r\n\t\t\t\t\t\twindowsByName[windowSplit[0].trim()] = parseCallback(windowSplit[1].trim(), [Window]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn windowsByName;\r\n\t\t\t\t} else if (clauseType === 'groupBy') {\r\n\t\t\t\t\treturn parseCallback(_expr, [GroupBy]);\r\n\t\t\t\t} else if (clauseType === 'orderBy') {\r\n\t\t\t\t\treturn parseCallback(_expr, [OrderBy]);\r\n\t\t\t\t} else if (clauseType === 'limit') {\r\n\t\t\t\t\treturn _expr.split(',').map(n => parseInt(n));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn new Static(\r\n\t\t\t\tstmtParse.exprs, \r\n\t\t\t\tstmtParse.clauses, \r\n\t\t\t\twithUac,\r\n\t\t\t\tstmtParse.clauses.fields.replace(/SELECT/i, '').split(' ').filter(flag => flag),\r\n\t\t\t\tstmtParse.references,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nSelect.clauses = {\r\n\tfields: 'SELECT([ ]+(ALL|DISTINCT))?',\r\n\ttable: 'FROM',\r\n\twhere: 'WHERE',\r\n\t// INNER JOIN, CROSS JOIN, {LEFT|RIGHT} [OUTER] JOIN\r\n\tjoins: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n\tgroupBy: 'GROUP[ ]+BY',\r\n\twindows: 'WINDOW',\r\n\torderBy: 'ORDER[ ]+BY',\r\n\toffset: 'OFFSET',\r\n\tlimit: 'LIMIT',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Select;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {Lexer} from '../index.js';\r\nimport OrderBy from './OrderBy.js';\r\nimport UnionInterface from './UnionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Union class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Union = class extends UnionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(query, queries, orderBy = null, limit = null) {\r\n\t\tsuper();\r\n\t\tthis.query = query;\r\n\t\tthis.queries = queries;\r\n\t\tthis.orderBy = orderBy;\r\n\t\tthis.limit = limit;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [[this.query.toString(context)].concat(\r\n\t\t\tthis.queries.map(q => (q.onDuplicate ? q.onDuplicate.toUpperCase() + ' ' : '') + q.select.toString(context))\r\n\t\t).join(' UNION ')];\r\n\t\tif (this.orderBy) {\r\n\t\t\tstr.push('ORDER BY ' + this.orderBy.toString(context));\r\n\t\t}\r\n\t\tif (this.limit) {\r\n\t\t\tstr.push('LIMIT ' + this.limit.join(', '));\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Union) {\r\n\t\tvar parse = null;\r\n\t\tvar paramsRegex = {useRegex: 'i'};\r\n\t\tif ((parse = Lexer.lex(expr, [' UNION([ ]+(ALL|DISTINCT))? '], paramsRegex)) && parse.matches.length) {\r\n\t\t\tvar selects = parse.tokens;\r\n\t\t\tvar clauses = parse.matches;\r\n\t\t\tvar orderBy = null;\r\n\t\t\tvar limit = null;\r\n\t\t\t// Are the selects parenthisized? Then there could be outer ORDER BY / LIMIT clauses\r\n\t\t\tif (selects[0].trim().startsWith('(')) {\r\n\t\t\t\tvar lastStmtSplit = Lexer.lex(selects.pop(), ['ORDER[ ]+BY', 'LIMIT'], paramsRegex);\r\n\t\t\t\tselects.push(lastStmtSplit.tokens.shift());\r\n\t\t\t\tlastStmtSplit.matches.forEach(clause => {\r\n\t\t\t\t\tvar _expr = lastStmtSplit.tokens.shift().trim();\r\n\t\t\t\t\tif (clause.toUpperCase().startsWith('ORDER')) {\r\n\t\t\t\t\t\torderBy = parseCallback(_expr, [OrderBy]);\r\n\t\t\t\t\t} else if (clause.toUpperCase().startsWith('LIMIT')) {\r\n\t\t\t\t\t\tlimit = _expr.split(',').map(n => parseInt(n));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(selects.shift().trim()),\r\n\t\t\t\tselects.map((select, i) => {return {\r\n\t\t\t\t\tselect: parseCallback(select.trim()),\r\n\t\t\t\t\tonDuplicate: (clauses[i].match(new RegExp('ALL|DISTINCT', 'i')) || [])[0]\r\n\t\t\t\t}}),\r\n\t\t\t\torderBy,\r\n\t\t\t\tlimit\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Union;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * UpdateInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'UpdateStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '../index.js';\r\nimport _mixin from '@web-native-js/commons/js/mixin.js';\r\nimport _isArray from '@web-native-js/commons/js/isArray.js';\r\nimport UpdateInterface from './UpdateInterface.js';\r\nimport Assignment from './Assignment.js';\r\nimport Base from '../Base/Base.js';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Update class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Update = class extends _mixin(Stmt, UpdateInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, trap = {}) {\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tvar tables = (_isArray(this.exprs.table) ? this.exprs.table : [this.exprs.table]).concat(this.exprs.joins || []);\r\n\t\ttables = tables.map(table => table.eval(database, trap))\r\n\t\tthis.base = new Base(trap, tables.shift(), this.exprs.where, ...tables);\r\n\t\tvar rowComposition, count = 0;\r\n\t\twhile(rowComposition = this.base.fetch()) {\r\n\t\t\tthis.exprs.assignments.forEach(assignment => assignment.eval(rowComposition, trap));\r\n\t\t\tcount ++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.getToString(context, (clauseType, expr, clause) => {\r\n\t\t\tif (clauseType === 'assignments') {\r\n\t\t\t\treturn clause + ' ' + expr.map(assignment => assignment.toString(context)).join(', ');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}, Static = Update) {\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'update') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/UPDATE[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, Static.clauses, parseCallback, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'assignments') {\r\n\t\t\t\t\treturn Lexer.split(_expr, [','])\r\n\t\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [Assignment]));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn new Static(stmtParse.exprs, stmtParse.clauses, withUac);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nUpdate.clauses = {\r\n\ttable: 'UPDATE',\r\n\tassignments: 'SET',\r\n\twhere: 'WHERE',\r\n\t// inner join, cross join, {left|right} [outer] join\r\n\tjoins: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Update;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tLexer\r\n} from '@web-native-js/jsen';\r\nimport Mql from './Mql.js';\r\nimport ExprInterface from './ExprInterface.js';\r\n// Reuse\r\nimport {\r\n\tAbstraction,\r\n\tBool,\r\n\tMath,\r\n\tNum,\r\n\tStr,\r\n\tVoid,\r\n} from '@web-native-js/jsen';\r\nimport {\r\n\tAbstractionInterface,\r\n\tBoolInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n} from '@web-native-js/jsen';\r\nimport * as Commons from '@web-native-js/commons';\r\n// Extended\r\nimport {\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tReferenceInterface,\r\n} from '@web-native-js/jsen';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport Call from './Expr/Call.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport Reference from './Expr/Reference.js';\r\n// New types\r\nimport Aggr from './Expr/Aggr.js';\r\nimport AggrInterface from './Expr/AggrInterface.js';\r\nimport Delete from './Expr/Delete.js';\r\nimport DeleteInterface from './Expr/DeleteInterface.js';\r\nimport Field from './Expr/Field.js';\r\nimport FieldInterface from './Expr/FieldInterface.js';\r\nimport GroupBy from './Expr/GroupBy.js';\r\nimport GroupByInterface from './Expr/GroupByInterface.js';\r\nimport Insert from './Expr/Insert.js';\r\nimport InsertInterface from './Expr/InsertInterface.js';\r\nimport Join from './Expr/Join.js';\r\nimport JoinInterface from './Expr/JoinInterface.js';\r\nimport OrderBy from './Expr/OrderBy.js';\r\nimport OrderByInterface from './Expr/OrderByInterface.js';\r\nimport Select from './Expr/Select.js';\r\nimport SelectInterface from './Expr/SelectInterface.js';\r\nimport Table from './Expr/Table.js';\r\nimport TableInterface from './Expr/TableInterface.js';\r\nimport Union from './Expr/Union.js';\r\nimport UnionInterface from './Expr/UnionInterface.js';\r\nimport Update from './Expr/Update.js';\r\nimport UpdateInterface from './Expr/UpdateInterface.js';\r\nimport Window from './Expr/Window.js';\r\nimport WindowInterface from './Expr/WindowInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nMql.grammars = {\r\n\t// Statements and union\r\n\tUnion: Union,\t\t\t\t// ... UNION ...\r\n\tSelect: Select,\t\t\t\t// SELECT ... FROM ...\r\n\tInsert: Insert,\t\t\t\t// INSERT INTO ...\r\n\tUpdate: Update,\t\t\t\t// UPDATE ...\r\n\tDelete: Delete,\t\t\t\t// DELETE FROM ...\r\n\t// Expressions\r\n\tJoin: Join,\t\t\t\t\t// table2 ON|USING ...\r\n\tAbstraction: Abstraction,\t// (...)\r\n\tCondition: Condition,\t\t// IF(..., ..., ...)\r\n\tAssertion: Assertion,\t\t// !field1 OR field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tAggr: Aggr,\t\t\t\t\t// MIN() OVER()\r\n\tCall: Call,\t\t\t\t\t// COUNT()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tLexer\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tAggr,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDelete,\r\n\tField,\r\n\tGroupBy,\r\n\tInsert,\r\n\tJoin,\r\n\tMath,\r\n\tNum,\r\n\tOrderBy,\r\n\tReference,\r\n\tSelect,\r\n\tStr,\r\n\tTable,\r\n\tUnion,\r\n\tUpdate,\r\n\tVoid,\r\n\tWindow\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tAggrInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeleteInterface,\r\n\tFieldInterface,\r\n\tGroupByInterface,\r\n\tInsertInterface,\r\n\tJoinInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tOrderByInterface,\r\n\tReferenceInterface,\r\n\tSelectInterface,\r\n\tStrInterface,\r\n\tTableInterface,\r\n\tUnionInterface,\r\n\tUpdateInterface,\r\n\tVoidInterface,\r\n\tWindowInterface\r\n};\r\nexport default Mql;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Mql from './index.js';\r\n\r\n// As globals\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Mql = Mql;"],"sourceRoot":""}