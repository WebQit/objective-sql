{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@webqit/util/js/isArray.js","webpack:///./node_modules/@webqit/util/js/isTypeFunction.js","webpack:///./node_modules/@webqit/util/js/isFunction.js","webpack:///./node_modules/@webqit/util/js/isObject.js","webpack:///./node_modules/@webqit/util/js/isTypeObject.js","webpack:///./node_modules/@webqit/util/js/isNumber.js","webpack:///./node_modules/@webqit/util/js/isNumeric.js","webpack:///./node_modules/@webqit/util/arr/pushUnique.js","webpack:///./node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///./node_modules/@webqit/util/obj/mergeCallback.js","webpack:///./node_modules/@webqit/util/obj/merge.js","webpack:///./node_modules/@webqit/util/js/isNull.js","webpack:///./node_modules/@webqit/util/js/isUndefined.js","webpack:///./node_modules/@webqit/util/js/isEmpty.js","webpack:///./node_modules/@webqit/util/arr/remove.js","webpack:///./node_modules/@webqit/util/js/instanceof.js","webpack:///./node_modules/@webqit/util/js/isPlainObject.js","webpack:///./node_modules/@webqit/util/js/isBoolean.js","webpack:///./node_modules/@webqit/util/obj/each.js","webpack:///./node_modules/@webqit/util/obj/even.js","webpack:///./node_modules/@webqit/util/obj/compareCallback.js","webpack:///./node_modules/@web-native-js/subscript/src/ExprInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ReferenceInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/CallInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/IndependentExprInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/IfInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/SyntaxError.js","webpack:///./node_modules/@web-native-js/subscript/src/Jsen.js","webpack:///./node_modules/@webqit/util/js/isClass.js","webpack:///./node_modules/@webqit/util/js/isString.js","webpack:///./node_modules/@webqit/util/str/after.js","webpack:///./node_modules/@webqit/util/str/before.js","webpack:///./node_modules/@webqit/util/arr/unique.js","webpack:///./node_modules/@web-native-js/subscript/src/ReferenceError.js","webpack:///./node_modules/@web-native-js/subscript/src/Scope.js","webpack:///./node_modules/@webqit/util/str/wrapped.js","webpack:///./node_modules/@webqit/util/str/beforeLast.js","webpack:///./node_modules/@webqit/util/str/unwrap.js","webpack:///./node_modules/@webqit/util/arr/from.js","webpack:///./node_modules/@webqit/util/js/isTypeArray.js","webpack:///./node_modules/@webqit/util/arr/flatten.js","webpack:///./node_modules/@webqit/util/arr/first.js","webpack:///./node_modules/@webqit/util/arr/last.js","webpack:///./node_modules/@webqit/util/obj/copyPlain.js","webpack:///./node_modules/@webqit/util/str/Lexer.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/AbstractionInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Abstraction.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ArrInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Arr.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ArgumentsInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Arguments.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/AssertionInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Assertion.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/AssignmentInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Assignment.js","webpack:///./node_modules/@webqit/util/obj/copy.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/BlockInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ReturnInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/DeletionInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Block.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/BoolInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Bool.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Call.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ComparisonInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Comparison.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ConditionInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Condition.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Deletion.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/FuncInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Func.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/If.js","webpack:///./node_modules/@webqit/util/arr/intersect.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/MathInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Math.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/NumInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Num.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/ObjInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Obj.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/PresenceInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Presence.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Reference.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Return.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/StrInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Str.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/VoidInterface.js","webpack:///./node_modules/@web-native-js/subscript/src/Expr/Void.js","webpack:///./node_modules/@web-native-js/subscript/src/index.js","webpack:///./src/Rql.js","webpack:///./src/Expr/Assertion.js","webpack:///./src/Expr/Comparison.js","webpack:///./src/Expr/Reference.js","webpack:///./node_modules/@webqit/util/js/mixin.js","webpack:///./node_modules/@webqit/util/obj/find.js","webpack:///./src/Expr/AggrInterface.js","webpack:///./node_modules/@webqit/util/obj/inherit.js","webpack:///./src/Expr/WindowInterface.js","webpack:///./src/Expr/OrderByInterface.js","webpack:///./src/Expr/OrderBy.js","webpack:///./node_modules/@webqit/util/arr/sort.js","webpack:///./src/Expr/Window.js","webpack:///./src/Expr/Aggr.js","webpack:///./node_modules/@webqit/util/obj/first.js","webpack:///./src/Expr/ArrowReferenceInterface.js","webpack:///./src/Base/_Database.js","webpack:///./src/Base/_Factory.js","webpack:///./src/Expr/ArrowReference.js","webpack:///./node_modules/@webqit/util/arr/all.js","webpack:///./src/Stmt/DeleteInterface.js","webpack:///./node_modules/@webqit/util/obj/from.js","webpack:///./src/Expr/LiteralInterface.js","webpack:///./src/Expr/Literal.js","webpack:///./src/Expr/TableInterface.js","webpack:///./src/Base/_Cursor.js","webpack:///./src/Base/_Store.js","webpack:///./src/Base/View.js","webpack:///./src/Base/DuplicateKeyViolationError.js","webpack:///./src/Base/odb/ODBCursor.js","webpack:///./src/Base/odb/ODBStore.js","webpack:///./src/Base/odb/ODBDatabase.js","webpack:///./src/Base/odb/ODBFactory.js","webpack:///./node_modules/@webqit/util/arr/max.js","webpack:///./src/Expr/Table.js","webpack:///./node_modules/@webqit/util/arr/sum.js","webpack:///./src/Base/Row.js","webpack:///./node_modules/@webqit/util/arr/avg.js","webpack:///./node_modules/@webqit/util/arr/min.js","webpack:///./node_modules/@webqit/util/arr/rand.js","webpack:///./node_modules/@webqit/util/obj/get.js","webpack:///./src/Base/Base.js","webpack:///./src/Uac/Query.js","webpack:///./src/Uac/Client.js","webpack:///./src/Stmt/Stmt.js","webpack:///./src/Stmt/Delete.js","webpack:///./src/Expr/FieldInterface.js","webpack:///./src/Expr/Field.js","webpack:///./src/Expr/GroupByInterface.js","webpack:///./src/Expr/GroupBy.js","webpack:///./src/Stmt/InsertInterface.js","webpack:///./src/Stmt/Insert.js","webpack:///./src/Expr/JoinInterface.js","webpack:///./src/Expr/Join.js","webpack:///./src/Expr/PlaceholderInterface.js","webpack:///./src/Stmt/SelectInterface.js","webpack:///./src/Stmt/Select.js","webpack:///./src/Stmt/UnionInterface.js","webpack:///./src/Stmt/UpdateInterface.js","webpack:///./src/Stmt/Update.js","webpack:///./src/index.js","webpack:///./src/Stmt/Union.js","webpack:///./src/Expr/Condition.js","webpack:///./src/Expr/Placeholder.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","Number","isNaN","items","forEach","itm","arr","indexOf","push","keysAll","until","prototypalChain","obj","getPrototypeOf","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","arguments","undefined","keys","limit","splice","classB","mixinTest","classA","Function","prototypes","reduce","prevAns","constructor","returnValue","parseFloat","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","args","super","cache","expr","Parsers","params","_parsed","allowCache","parseOne","parsers","values","grammars","parsed","assert","SyntaxError","Parser","deepVars","varsUnlodged","deepVarsUnlodged","parse","_expr","_Parsers","_params","subStmt","ReferenceInterface","CallInterface","lodge","_var","reference","context","IndependentExprInterface","IfInterface","onTrue","concat","onFalse","explain","String","search","subject","pos","afterLast","lastIndexOf","substr","beforeLast","filter","index","self","stack","errorLevel","local","$local","trap","observe","props","prop","_has","main","scope","changes","references","delta","map","path","oldValue","subtree","tags","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","test","initKeyword","type","set","_set","cntxt","localContxtMeta","LogicalError","ReferenceError","deleteProperty","del","prop2","contextObj2","fn","exec","apply","execUnknown","has","startsWith","openingTag","endsWith","closingTag","castObject","slice","_flatten","withObjects","acc","count","firsts","amount","reverse","str","delims","options","copyResult","nesting","maxDepth","tokens","matches","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","nextIndex","quote","block","Math","max","testList","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","stringify","parseCallback","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","trim","split","ArgumentsInterface","list","arg","AssertionInterface","logic","Assertion","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","operator","postIncrDecr","initialVal","getEval","includes","operandA","operandB","_pushUnique","message","testBlockEnd","isIncrDecr","role","a","b","BlockInterface","stmts","delim","stringifyEach","callEval","stmt","catch","results","isDirectEventTarget","f","v","isIndirectEventTarget","ReturnInterface","DeletionInterface","BoolInterface","state","pop","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","splits","Deletion","red","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","_context","onTrueIsBlock","onFalseIsBlock","rest","arr2","val1","val2","MathInterface","currentTotal","sub","NumInterface","int","dec","parseInt","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","backticks","sourceContext","subjectContext","separator","nameSplit","exprLc","StrInterface","VoidInterface","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","Call","Reference","mutates","placeholdersTransformed","console","log","opts","AND","OR","like","interpreted","ref","tempRow","$","Traps","classes","Base","supersMap","Mixin","_class","supers","supersReturnValues","supr","_find","deep","subKey","prev","curr","OrderByInterface","columns","withRollup","tempRows","order","rows","by","grouping","row","_for","_arr","sort","localeCompare","WindowInterface","dfn","definitions","uuid","partitionBy","partitioning","partition","orderBy","WINDOWS","clauseType","AggrInterface","unshift","window","AGGR","aggrFlag","replace","aggrMatch","funcFlagMatch","aggrMatchRegex","funcs","funcName","funcCategory","normal","explicitOver","support","_Database","database","schema","storeName","exists","drop","schemaCreateStores","_create","_drop","base","_schema","validateTableSchema","table","autoIncrement","primaryKey","fields","fieldName","field","referencedEntity","query","_query","databaseName","defaultDB","currentDatabases","existingVersions","version","payload","Promise","all","data","async","open","addAll","_export","storeNames","store","getAll","factoryGetSchema","DB_FACTORY","ArrowReferenceInterface","schema1","process","isReference","arrLeft","arrRight","schema2","SCHEMAS","isIncoming","actingKey","sourceTable","select","_sourceTable","foreignKey","prevTest","LiteralInterface","_Cursor","flags","_onfinish","__eof","uniqueKeys","putAll","rowObj","existing","readKeyPath","matchingKey","existingRow","constraintName","keyPath","multiValues","duplicateKeyCallback","forceAutoIncrement","ongoingAdd","forUpdates","inserts","line","_columns","columnName","handleInput","shouldMatchInput","duplicateRow","resolve","beforeAdd","add","timestamp","Date","toLocaleString","hour12","default","multiRows","ongoingPut","beforePut","put","onupdate","multiIDs","delete","beforeDelete","applyDefaults","rowObjColumns","schemaColumns","unknownFields","col","_value","nullable","syncCursors","ongoingWrite","_store","rowID","DuplicateKeyViolationError","processPrimaryKey","reject","assertExisting","canAutoIncrement","primaryKeyVal","primaryKeyPath","databases","TableInterface","alias","claused","associatedReferences","isDerivedQuery","getDerivedQuery","getTable","getName","derivedName","getAlias","derivedQuery","derivedQuerySources","getSources","getAliasOfField","getFields","ALL_SCHEMAS","source","getSchema","MAIN_SCHEMA","derivedSchema","derived","getContextName","keyPathAliased","engine","then","derivedStore","getDatabaseName","SCHEMA","tableParse","DB_SCHEMA","fullTableName","tableName","validation","assertTableValidity","total","next","flag","column","COLUMN","min","rand","floor","random","onColumns","isRollup","cum","byStr","columnStr","width","_v","doc","reciever","_ctxt","ctxt","_key","JSON","doc1","doc2","joins","where","mainCursor","getCursor","joinCursors","j","lastJoinCursor","prevCursor","currentCursor","onfinish","eof","rowComposition","rowCompositionRejection","__main","__mainCursor","__mainFetch","fetch","__mainAlias","__joins","__joinCursors","joinFetches","__joinCursor","__joinFetch","__joinAlias","conditionClause","condition","conditionRowComposition","__joinFetches","_rowComposition","rowMember","__tables","__cursors","syncCursor","Query","tableXSchema","user","UAC_PARAMS","createParams","id","parent","lineage","privileges","uac","EXPLICIT_TABLE_ACCESS_QUERY","getExplicitRulesQuery","on","CONTROL_LEVEL","EXPLICIT_ROW_ACCESS_QUERY","attributionKey","account","ownerGuestRelationshipQuery","getOwnerGuestRelationshipQuery","AUTHOR_user_RELATIONSHIP_QUERY","deriveEntityAccess","accessType","withActingRights","entityAccess","getRightsRulesIntersectionExpression","getGuestRightsExpression","fieldsAccesses","fieldAccess","rights","AUTHOR_user_TOKEN_QUERY","tableSpecifiers","UAC","tableSpecifier","TABLE_SPECIFIERS","tableNameSplit","tableXName","targetInLineageQuery","groupConcat","accessRightQueries","compiledAccessRights","right","rules","rightsExpression","explicitFirstRule","nodeAccessAssertions","rule","ruleSql","OBJECT_QUERY","organicRights","priorityAccounts","ACCOUNT_QUERY","AUTHOR_USER_RELATIONSHIP_QUERY","accesses","overObject","orAsRelatedTo","withFields","standardAccesses","entityJson","fieldsJson","deriveFieldsAccess","access","allFieldsJson","accessesDocs","tables","TABLE_REFERENCES","JOIN_CLAUSE","WHERE_CLAUSE","_t","when","repeat","strArray","clause","clauses","x","_isFunction","withUac","stmtClauses","literalValidateCallback","EXPRS","CLAUSES","TABLES","VARS","_exprParse","USING_CLAUSE","tableAlias","tableSchema","_VARS","__exprParse","ref_name","ref_context","associateReference","impliedFields","_ref_context","arrowReferences","getAssociateReferences","_joins","_select","joinUUID","schemas","DeleteInterface","targetTableNames","mainTable","DELETE_LIST","getBase","targetTables","deletionIDs","_rowID","deleteAll","getToString","stmtParse","getParse","FieldInterface","multiple","exprParse","isFieldName","GroupByInterface","having","groupBy","group","summaryRow","InsertInterface","COLUMNS_LIST","VALUES_LIST","WITH_UAC","IGNORE","INSERT_TYPE","UPDATE_CLAUSE","tableBase","insertType","assignment","newRow","ignore","tableColumnSplit","onDuplicateKeyUpdate","JoinInterface","SelectInterface","SELECT_LIST","getJoins","GROUP_BY_CLAUSE","WINDOWS_CLAUSE","ORDER_BY_CLAUSE","OFFSET_CLAUSE","LIMIT_CLAUSE","applyFields","collectAggrs","aggr","win","aggrs","getAggrExprs","fieldValObject","aggrExprs","aggrFields","completed","_tempRow","_even","offset","windowName","aliases","windowsByName","windowSplit","literal","UpdateInterface","ASSIGNMENT_LIST","__keys","Union","UnionInterface","queries","q","onDuplicate","paramsRegex","selects","lastStmtSplit","Select","Insert","Update","Delete","Join","Aggr","Placeholder","PlaceholderInterface","notation","ArrowReference","WN","Rql","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConstruct'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _instanceof from '@webqit/util/js/instanceof.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Jsen {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !Parsers && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar parsers = Object.values(Parsers || this.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, parsers[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!Parsers && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = parsers[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Parser, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar vars = [], deepVars = [],\r\n\t\t\tvarsUnlodged = [], deepVarsUnlodged = [];\r\n\t\tvar parsed = Parser.parse(expr, (_expr, _Parsers, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _Parsers, _params ? _merge({}, params, _params) : params);\r\n\t\t\tif (_instanceof(subStmt, ReferenceInterface) || _instanceof(subStmt, CallInterface)) {\r\n\t\t\t\tif (_params.lodge !== false) {\r\n\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvarsUnlodged.push(subStmt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (subStmt) {\r\n\t\t\t\tif (_params.lodge !== false) {\r\n\t\t\t\t\tsubStmt.meta.vars.forEach(_var => vars.push(_var));\r\n\t\t\t\t\tsubStmt.meta.deepVars.forEach(_var => deepVars.push(_var));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsubStmt.meta.varsUnlodged.forEach(_var => varsUnlodged.push(_var));\r\n\t\t\t\t\tsubStmt.meta.deepVarsUnlodged.forEach(_var => deepVarsUnlodged.push(_var));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (!parsed.meta) {\r\n\t\t\t\tparsed.meta = {};\r\n\t\t\t}\r\n\t\t\tparsed.meta.vars = vars;\r\n\t\t\tparsed.meta.deepVars = deepVars;\r\n\t\t\tparsed.meta.varsUnlodged = varsUnlodged;\r\n\t\t\tparsed.meta.deepVarsUnlodged = deepVarsUnlodged;\r\n\t\t\tif (_instanceof(parsed, CallInterface)) {\r\n\t\t\t\tif (parsed.reference.context) {\r\n\t\t\t\t\tparsed.meta.vars.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if (_instanceof(parsed, IndependentExprInterface)) {\r\n\t\t\t\tparsed.meta.vars.splice(0);\r\n\t\t\t\tparsed.meta.deepVars.splice(0);\r\n\t\t\t\tparsed.meta.varsUnlodged.splice(0);\r\n\t\t\t\tparsed.meta.deepVarsUnlodged.splice(0);\r\n\t\t\t} else if (_instanceof(parsed, IfInterface)) {\r\n\t\t\t\tif (parsed.onTrue) {\r\n\t\t\t\t\tparsed.onTrue.meta.vars.concat(parsed.onTrue.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparsed.onTrue.meta.varsUnlodged.concat(parsed.onTrue.meta.deepVarsUnlodged).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.varsUnlodged, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVarsUnlodged.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed.onFalse) {\r\n\t\t\t\t\tparsed.onFalse.meta.vars.concat(parsed.onFalse.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparsed.onFalse.meta.varsUnlodged.concat(parsed.onFalse.meta.deepVarsUnlodged).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.varsUnlodged, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVarsUnlodged.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.params = params;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Scope.create(this.stack.super, {errorLevel: params.errorLevel});\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\tchanges = changes.filter(delta => delta.name === 'main');\r\n\t\t\tvar references = changes.map(delta => _after(delta.path, '.'))\r\n\t\t\t\t.filter(path => path);\r\n\t\t\tvar props = references.map(path => _before(path, '.'));\r\n\t\t\tif (!references.length && changes.length && changes[0].value) {\r\n\t\t\t\tprops = _unique((\r\n\t\t\t\t\t\t_isTypeObject(changes[0].value) ? Object.keys(changes[0].value) : []\r\n\t\t\t\t\t).concat(changes[0].oldValue && _isTypeObject(changes[0].oldValue) ? Object.keys(changes[0].oldValue) : [])\r\n\t\t\t\t);\r\n\t\t\t\treferences = props;\r\n\t\t\t}\r\n\t\t\tif (props.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope:'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}) {\r\n\t\treturn cntxt instanceof Scope ? cntxt : new Scope({\r\n\t\t\tmain: cntxt,\r\n\t\t}, params);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator, this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'ASSIGNMENT_SPECIFIER';\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\t// Current!\r\n\t\tparams = params ? _copy(params) : {};\r\n\t\tcontext = Scope.create(context);\r\n\t\t// Stringifies JSEN vars\r\n\t\tvar stringifyEach = list => _unique(list.map(expr => _before(_before(expr.toString(), '['), '(')));\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar vars = stringifyEach(stmt.meta.vars);\r\n\t\t\tvar deepVars = stringifyEach(stmt.meta.deepVars || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(f => vars.filter(v => (v + '.').startsWith(f + '.')).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(f => deepVars.filter(v => (v + '.').startsWith(f + '.')).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = _copy(params);\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tif (stmt instanceof ReturnInterface) {\r\n\t\t\t\t\treturn callEval(stmt, context, _params);\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\t// This is a local change!\r\n\t\t\t\tif (params.references && ((stmt instanceof AssignmentInterface) || (stmt instanceof DeletionInterface))) {\r\n\t\t\t\t\tparams.references = params.references.concat(stringifyEach([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'CALL_SPECIFIER';\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim(), null, {lodge: false})) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'DELETION_SPECIFIER';\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport IndependentExprInterface from '../IndependentExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            }\r\n\t\t\treturn new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.role = 'CONTEXT';\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr ? 'return ' + this.expr.stringify(params) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport Scope from './Scope.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Block from './Expr/Block.js';\r\nimport BlockInterface from './Expr/BlockInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport If from './Expr/If.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Presence from './Expr/Presence.js';\r\nimport PresenceInterface from './Expr/PresenceInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\nimport Void from './Expr/Void.js';\r\nimport VoidInterface from './Expr/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tIndependentExprInterface,\r\n\tScope\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from '@web-native-js/subscript';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Mql (base) class\r\n *\r\n * TODO:\r\n *\t\tSELECT *\r\n *\t\tSELECT ... FROM (SELECT ...)\r\n *\t\tPREPARED STATEMENTS PLACEHOLDERS\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Rql extends Jsen {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}) {\r\n\t\tif (!('mutates' in params)) {\r\n\t\t\tparams.mutates = true;\r\n\t\t}\r\n\t\tif (!params.placeholdersTransformed && expr.indexOf('?') > 0) {\r\n\t\t\texpr = Lexer.split(expr, ['?'], {blocks:[]}).reduce((expr, t, i) => expr ? expr + '?' + (i - 1) + t : t, null);\r\n\t\t\tparams.placeholdersTransformed = true;\r\n\t\t\tconsole.log('===============', expr);\r\n\t\t}\r\n\t\tif (!params.opts) {\r\n\t\t\tparams.opts = {};\r\n\t\t}\r\n\t\tif (!('ci' in params.opts)) {\r\n\t\t\tparams.opts.ci = true;\r\n\t\t}\r\n\t\tparams.allowCache = false;\r\n\t\treturn super.parse(expr, Parsers, params);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAssertion as _Assertion\r\n} from '@web-native-js/subscript';\r\n\r\n/**\r\n * @extends\r\n */\r\nexport default class Assertion extends _Assertion {};\r\n\r\n/**\r\n * @var string\r\n */\r\nAssertion.negation = 'NOT ';\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssertion.operators = {\r\n\tand: ' and ',\r\n\tor: ' or ',\r\n\tAND: ' AND ',\r\n\tOR: ' OR ',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tComparison as _Comparison\r\n} from '@web-native-js/subscript';\r\n\r\n\r\n/**\r\n * @extends\r\n */\r\nexport default class Comparison extends _Comparison {};\r\n\r\n/**\r\n * @prop array\r\n */\r\nComparison.operators = {\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t},\r\n\tpartial: {\r\n\t\tany: 'any',\r\n\t\tin: 'in',\r\n\t\tlike: 'like',\r\n\t},\r\n\texact: {\r\n\t\tnotEqualsTo: '<>',\r\n\t\t// must be after all ocurrencies of \"=\"\r\n\t\tis: '=',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tScope,\r\n\tReference as _Reference,\r\n} from '@web-native-js/subscript';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Reference extends _Reference {\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (this.interpreted && params.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.map(ref => ref.stringify(params)).join(', ');\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.stringify(params);\r\n\t\t}\r\n\t\t// -----------\r\n\t\treturn super.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(tempRow, params = {}) {\r\n\t\t// ------------\r\n\t\t// For those calling getEval() directly\r\n\t\tif (this.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.reduce((map, ref) => {\r\n\t\t\t\t\tmap[ref.name] = ref.getEval(tempRow, params);\r\n\t\t\t\t\treturn map;\r\n\t\t\t\t}, {});\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.getEval(tempRow, params);\r\n\t\t}\r\n\t\t// -----------\r\n\t\t// Lets find the table that contains the column\r\n\t\tvar sourceContext = tempRow, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tsourceContext = this.context.eval(tempRow, params);\r\n\t\t} else if (!(this.role === 'CONTEXT' || this.role === 'CALL_SPECIFIER')) {\r\n\t\t\tif (!tempRow.$) {\r\n\t\t\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t\t\t}\r\n\t\t\tsourceContext = tempRow.$;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext).exec(name.toUpperCase(), args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, params = {}) {\r\n\t\tif (this.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.map(ref => ref.eval(tempRow, params))\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.eval(tempRow, params);\r\n\t\t}\r\n\t\treturn this.getEval(tempRow, params).get();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, ...args) {\r\n\t\treturn super.parse(expr, ...args);\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from './isArray.js';\r\nimport _isFunction from './isFunction.js';\r\nimport _arrLast from '../arr/last.js';\r\nimport _mergeCallback from '../obj/mergeCallback.js';\r\nimport _each from '../obj/each.js';\r\n\r\n/**\r\n * A multi-inheritance implementstion.\r\n *\r\n * @param array\t \t...classes\r\n *\r\n * @return object\r\n */\r\nexport default function(...classes) {\r\n\t\r\n\tvar Traps = {};\r\n\tvar RetrnDirective = 'last';\r\n\tif (_isArray(arguments[0])) {\r\n\t\tclasses = arguments[0];\r\n\t\tTraps = arguments[1];\r\n\t\tif (arguments[2]) {\r\n\t\t\tRetrnDirective = arguments[2];\r\n\t\t}\r\n\t}\r\n\tvar Base = _arrLast(classes);\r\n\tvar supersMap = {};\r\n\tvar Mixin = class extends Base {\r\n\t\tconstructor(...args) {\r\n\t\t\tsuper(...args);\r\n\t\t}\r\n\t};\r\n\t// A trap for _instanceof()\r\n\tMixin.prototypes = classes;\r\n\t// ---------------------\r\n\t// Extend (merge) properties but keep methods\r\n\tclasses.forEach(_class => {\r\n\t\t// Copy const members\r\n\t\t_mergeCallback([Mixin, _class], (key, obj1, obj2) => ![\r\n\t\t\t'name', 'prototype', 'prototypes', 'length', 'caller', 'callee', 'arguments', 'constructor', 'apply', \"bind\", 'call', 'toString',/**/\r\n\t\t].includes(key), true/*deepProps*/);\r\n\t\t_mergeCallback([Mixin.prototype, _class.prototype], (key, obj1, obj2) => {\r\n\t\t\tif (!['prototype', 'prototypes'].includes(key)) {\r\n\t\t\t\tif (_isFunction(obj2[key])) {\r\n\t\t\t\t\tif (_isArray(supersMap[key])) {\r\n\t\t\t\t\t\tsupersMap[key].push(obj2[key]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsupersMap[key] = [obj2[key]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}, true/*deepProps*/);\r\n\t});\r\n\t// Extend (proxy) methods\r\n\t_each(supersMap, (name, supers) => {\r\n\t\tif (name === 'constructor') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// NOTE: this must not be defined as an arrow function\r\n\t\t// for the benefit of the \"this\".\r\n\t\tMixin.prototype[name] = function(...args) {\r\n\t\t\tif (Object.hasOwnProperty(Traps, name) && _isFunction(Traps[name])) {\r\n\t\t\t\t// Wrap a call to the trap...\r\n\t\t\t\t// So mixin supers are passed to traps\r\n\t\t\t\treturn Traps[name].call(this, supers, ...args);\r\n\t\t\t} else {\r\n\t\t\t\t// Call each super and return\r\n\t\t\t\t// the last one's return value\r\n\t\t\t\tvar supersReturnValues = [];\r\n\t\t\t\tsupers.forEach(supr => {\r\n\t\t\t\t\tsupersReturnValues.push(supr.call(this, ...args));\r\n\t\t\t\t})\r\n\t\t\t\treturn _arrLast(supersReturnValues);\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn Mixin;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Finds a value in an array/object and returns the key (or path when found deep).\r\n *\r\n * @param array}object \tobj\r\n * @param function\t\tcallback\r\n * @param bool\t\t\tdeep\r\n *\r\n * @return number|string|array\r\n */\r\nconst _find = function(obj, callback, deep = false) {\r\n\tvar keys = null;\r\n\tvar values = obj;\r\n\tif (!_isArray(obj)) {\r\n\t\tkeys = Object.keys(obj);\r\n\t\tvalues = Object.values(obj);\r\n\t}\r\n\tvar subKey = undefined;\r\n\tvar value = values.reduce((prev, curr) => {\r\n\t\tif (subKey === undefined) {\r\n\t\t\tif (callback(curr, prev)) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t\tif (deep && (_isTypeObject(curr) || _isFunction(curr)) && (subKey = _find(curr, callback, deep)) !== undefined) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn prev;\r\n\t}, undefined);\r\n\tif (value !== undefined) {\r\n\t\tvar key = keys ? keys[values.indexOf(value)] : values.indexOf(value);\r\n\t\treturn subKey !== undefined ? [key].concat(_arrFrom(subKey)) : key;\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _find;","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * AggrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AggregateExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects into first array/object but only when not set;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (key, obj1, obj2) => {\r\n\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\tif (obj1.indexOf(obj2[key]) === -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else if (!(key in obj1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * WindowInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'WindowConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * OrderByInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'OrderByExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _sort from '@webqit/util/arr/sort.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _beforeLast from '@webqit/util/str/beforeLast.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport OrderByInterface from './OrderByInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * OrderBy class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class OrderBy extends OrderByInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(columns, withRollup = false) {\r\n\t\tsuper();\r\n\t\tthis.columns = columns;\r\n\t\tthis.withRollup = withRollup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, params = {}) {\r\n\t\tvar order = (rows, by) => {\r\n\t\t\t// Drilldown...\r\n\t\t\tvar grouping = {};\r\n\t\t\trows.forEach(row => {\r\n\t\t\t\tvar _for = by[0].expr.eval(row, params);\r\n\t\t\t\tgrouping[_for] = grouping[_for] || [];\r\n\t\t\t\tgrouping[_for].push(row);\r\n\t\t\t});\r\n\t\t\t// Get esults flattened\r\n\t\t\tvar result = [];\r\n\t\t\t_sort(Object.keys(grouping), by[0].order).forEach(_for => {\r\n\t\t\t\tresult = result.concat(by.length > 1 ? order(grouping[_for], by.slice(1)) : grouping[_for]);\r\n\t\t\t});\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\treturn order(tempRows, this.columns);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [this.columns.map(\r\n\t\t\tc => c.expr.stringify(params) + (c.order ? ' ' + c.order : '')\r\n\t\t).join(', ')];\r\n\t\tif (this.withRollup) {\r\n\t\t\tstr.push('WITH ROLLUP');\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar columns = [];\r\n\t\tvar withRollup = false;\r\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP'], {useRegex:'i'});\r\n\t\tcolumns = Lexer.split(parse.tokens.shift().trim(), [',']).map(c => {\r\n\t\t\tvar order = c.match(/ASC|DESC/, 'i');\r\n\t\t\tif (order) {\r\n\t\t\t\torder = order[0];\r\n\t\t\t\tc = _beforeLast(c, order).trim();\r\n\t\t\t}\r\n\t\t\treturn {expr:parseCallback(c), order:order};\r\n\t\t});\r\n\t\tif (parse.matches.length === 1) {\r\n\t\t\twithRollup = true;\r\n\t\t}\r\n\t\treturn new this(columns, withRollup);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Sorts a list performantly.\r\n *\r\n * @param array\t \t\t\t\t\tarr\r\n * @param string\t \t\t\t\torder\t\t\tASC|DESC \r\n * @param function\t\t\t\t\tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, order, callback = null) {\r\n\tvar _arr = [];\r\n\t// Make a shallow copy\r\n\tvar length = arr.length;\r\n\tfor (var i = 0; i < length; i ++) {\r\n\t\t_arr.push({index: i, value: callback ? callback(arr[i]) : arr[i]});\r\n\t};\r\n\t_arr.sort(function(a, b) {\r\n\t\t// Using localeCompare if possible\r\n\t\tif (_isString(a.value) && \"\".localeCompare) {\r\n\t\t\treturn a.value.localeCompare(b.value);\r\n\t\t};\r\n\t\treturn a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\r\n\t});\r\n\tif ((order || '').trim().toLowerCase() === 'desc') {\r\n\t\t_arr = _arr.reverse();\r\n\t};\r\n\t// Fill the order with actual values\r\n\treturn _arr.map(itm => arr[itm.index]);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _inherit from '@webqit/util/obj/inherit.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport WindowInterface from './WindowInterface.js';\r\nimport OrderBy from './OrderBy.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Window class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Window extends WindowInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(dfn) {\r\n\t\tsuper();\r\n\t\tthis.dfn = dfn;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, definitions = {}, params = {}) {\r\n\t\tvar dfn = this.dfn;\r\n\t\tvar uuid = this.stringify();\r\n\t\tif (this.dfn.name) {\r\n\t\t\tif (!definitions || !definitions[this.dfn.name]) {\r\n\t\t\t\tthrow new Error('Window name \"' + this.dfn.name + '\" is undefined!');\r\n\t\t\t}\r\n\t\t\tdfn = _inherit({}, this.dfn, definitions[this.dfn.name]);\r\n\t\t}\r\n\t\tvar exec = (rows, partitionBy) => {\r\n\t\t\tif (partitionBy.length) {\r\n\t\t\t\t// Drilldown...\r\n\t\t\t\tvar partitioning = {};\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tvar _for = partitionBy[0].eval(row, params);\r\n\t\t\t\t\tpartitioning[_for] = partitioning[_for] || [];\r\n\t\t\t\t\tpartitioning[_for].push(row);\r\n\t\t\t\t});\r\n\t\t\t\tObject.values(partitioning).map(partition => exec(partition, partitionBy.slice(1)));\r\n\t\t\t} else {\r\n\t\t\t\tif (dfn.orderBy) {\r\n\t\t\t\t\trows = dfn.orderBy.eval(rows, params);\r\n\t\t\t\t}\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tif (!row.WINDOWS) {\r\n\t\t\t\t\t\trow.WINDOWS = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\trow.WINDOWS[uuid] = rows;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\ttry {\r\n\t\t\texec(tempRows, dfn.partitionBy || []);\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.stringify() + '\" in window definition]: ' + e.message);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar length = Object.keys(this.dfn).length;\r\n\t\tif (length === 1 && this.dfn.name) {\r\n\t\t\treturn this.dfn.name;\r\n\t\t}\r\n\t\tvar str = [this.dfn.name];\r\n\t\tif (this.dfn.partitionBy) {\r\n\t\t\tstr.push('PARTITION BY ' + this.dfn.partitionBy.map(expr => expr.stringify(params)).join(', '));\r\n\t\t}\r\n\t\tif (this.dfn.orderBy) {\r\n\t\t\tstr.push('ORDER BY ' + this.dfn.orderBy.stringify(params));\r\n\t\t}\r\n\t\treturn '(' + str.filter(a => a).join(' ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar dfn = {};\r\n\t\tif (_wrapped(expr, '(', ')')) {\r\n\t\t\tif (expr = _unwrap(expr, '(', ')')) {\r\n\t\t\t\tvar parse = Lexer.lex(expr, ['PARTITION[ ]+BY', 'ORDER[ ]+BY'], {useRegex:'i'});\r\n\t\t\t\tdfn.name = parse.tokens.shift().trim();\r\n\t\t\t\tparse.matches.forEach(clauseType => {\r\n\t\t\t\t\tif (clauseType.toLowerCase().startsWith('partition')) {\r\n\t\t\t\t\t\tdfn.partitionBy = Lexer.split(parse.tokens.shift().trim(), [','])\r\n\t\t\t\t\t\t\t.map(expr => parseCallback(expr));\r\n\t\t\t\t\t} else if (clauseType.toLowerCase().startsWith('order')) {\r\n\t\t\t\t\t\tdfn.orderBy = parseCallback(parse.tokens.shift().trim(), [OrderBy]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdfn.name = expr;\r\n\t\t}\r\n\t\treturn new this(dfn);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { Call } from '@web-native-js/subscript';\r\nimport _instanceof from '@webqit/util/js/instanceof.js';\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _find from '@webqit/util/obj/find.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AggrInterface from './AggrInterface.js';\r\nimport Window from './Window.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Aggr class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Aggr extends _mixin(Call, AggrInterface) {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context, params = {}) {\r\n\t\tvar args = this.args.list.slice();\r\n\t\targs.unshift(this.window ? context.WINDOWS[this.window.stringify()] : context.AGGR.rows, this.aggrFlag);\r\n\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = super.stringify(params);\r\n\t\tif (this.aggrFlag) {\r\n\t\t\tstr = str.replace('(', '(' + this.aggrFlag + ' ');\r\n\t\t}\r\n\t\treturn str + (this.window ? ' OVER ' + this.window.stringify(params) : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar aggrMatch, funcFlagMatch, aggrFlag = '';\r\n\t\tvar aggrMatchRegex = _flatten(this.funcs).join(\"\\\\(|\") + \"\\\\(\";\r\n\t\tif (aggrMatch = expr.trim().match(new RegExp('^(' + aggrMatchRegex + ')', 'i'))) {\r\n\t\t\tvar funcName = _before(aggrMatch[0], '(').toUpperCase();\r\n\t\t\tvar funcFlagStart = _after(expr, funcName + '(');\r\n\t\t\tif (funcFlagMatch = funcFlagStart.match(new RegExp('^(([ ]+)?' + ['ALL', 'DISTINCT'].join('[ ]+|([ ]+)?') + '[ ]+)', 'i'))) {\r\n\t\t\t\taggrFlag = funcFlagMatch[0];\r\n\t\t\t\texpr = expr.replace(aggrFlag, '');\r\n\t\t\t}\r\n\t\t\tvar funcCategory = _find(this.funcs, val => val === funcName, true)[0];\r\n\t\t\tvar splits = Lexer.split(expr, ['OVER'], {ci:true});\r\n\t\t\tif (funcCategory === 'explicitOver' && splits.length === 1) {\r\n\t\t\t\tthrow new Error(aggrMatch[0] + '() requires an OVER clause!');\r\n\t\t\t}\r\n\t\t\tvar instance = super.parse(splits.shift().trim(), parseCallback, params);\r\n\t\t\tinstance.funcCategory = funcCategory;\r\n\t\t\tinstance.aggrFlag = aggrFlag.trim();\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tinstance.window = parseCallback(splits.pop().trim(), [Window]);\r\n\t\t\t}\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAggr.funcs = {\r\n\tnormal: [\r\n\t\t'AVG', \r\n\t\t'BIT_AND', \r\n\t\t'BIT_OR', \r\n\t\t'BIT_XOR', \r\n\t\t'COUNT', \r\n\t\t'JSON_ARRAYAGG', \r\n\t\t'JSON_OBJECTAGG', \r\n\t\t'MAX', \r\n\t\t'MIN',\r\n\t\t'STDDEV_POP',\r\n\t\t'STDDEV',\r\n\t\t'STD',\r\n\t\t'STDDEV_SAMP',\r\n\t\t'SUM',\r\n\t\t'VAR_POP',\r\n\t\t'VARIANCE',\r\n\t\t'VAR_SAMP',\r\n\t\t// May not apply to OVER()\r\n\t\t'GROUP_CONCAT',\r\n\t\t'GROUP_CONCAT_WS',\r\n\t],\r\n\texplicitOver: [\r\n\t\t'CUME_DIST', \r\n\t\t'DENSE_RANK', \r\n\t\t'FIRST_VALUE', \r\n\t\t'LAG', \r\n\t\t'LAST_VALUE', \r\n\t\t'LEAD', \r\n\t\t'NTH_VALUE', \r\n\t\t'NTLE',\r\n\t\t'PERCENT_RANK',\r\n\t\t'RANK',\r\n\t\t'ROW_NUMBER',\r\n\t],\r\n\tsupport: [\r\n\t\t'ANY_VALUE', \r\n\t\t'COLUMN', \r\n\t\t'COLUMNS', \r\n\t\t'GROUPING', \r\n\t],\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _arrFirst from '../arr/first.js';\r\n\r\n/**\r\n * Returns the FIRST ENTRY.\r\n *\r\n * @param array|object \tobj\r\n *\r\n * @return mixed\r\n */\r\nexport default function(obj) {\r\n\treturn _isArray(obj) ? _arrFirst(obj) : obj[Object.keys(obj)[0]];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Reference from './Reference.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AggrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends Reference {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrowReferenceExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * _Database class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class _Database {\r\n\t\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor(database, schema = {}) {\r\n\t\tthis.database = database;\r\n\t\tthis.schema = schema;\r\n\t\t// --------------\r\n\t\tthis.name = database.name;\r\n\t}\r\n\r\n    /**\r\n     * Store existence.\r\n     * \r\n     * @param String storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    exists(storeName) {\r\n        var stores = this.list();\r\n        return stores.includes(storeName);\r\n    }\r\n\t\r\n    /**\r\n     * Creates a store.\r\n     * \r\n     * @param String storeName\r\n     * @param Object schema\r\n     * @param Bool replace\r\n     * \r\n     * @return _Store\r\n     */\r\n    async create(storeName, schema, replace = false) {\r\n        if (this.exists(storeName)) {\r\n            if (!replace) {\r\n                throw new Error('Table \"' + storeName + '\" already exists.');\r\n            }\r\n            await this.drop(storeName);\r\n\t\t}\r\n\t\tschema.name = storeName;\r\n        // ------------------\r\n        schemaCreateStores(this.schema, [schema], replace);\r\n        // ------------------\r\n        return await this._create(storeName, schema, replace);\r\n    }\r\n\r\n    /**\r\n     * Drops a store.\r\n     * \r\n     * @param String storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    async drop(storeName) {\r\n        if (!this.exists(storeName)) {\r\n            throw new Error('Table \"' + storeName + '\" has not been defined.');\r\n        }\r\n        // ------------------\r\n        delete this.schema[storeName];\r\n        // ------------------\r\n        return await this._drop(storeName);\r\n    }\r\n};\r\n\r\n/**\r\n * ---------\r\n * HELPERS\r\n * ---------\r\n */\r\n\r\n/**\r\n * Helps create Object Stores\r\n * \r\n * @param Object base \r\n * @param Array schema \r\n * @param Bool replace\r\n * \r\n * @return void\r\n */\r\nexport const schemaCreateStores = (base, schema, replace) => {\r\n    return schema.map(_schema => {\r\n        validateTableSchema(_schema);\r\n        if (base[_schema.name]) {\r\n            if (!replace) {\r\n                throw new Error('Store name \"' + _schema.name + '\" already exists!');\r\n            }\r\n        }\r\n        base[_schema.name] = _schema;\r\n    });\r\n};\r\n\r\n/**\r\n * Helps validate a Table schema definition.\r\n * \r\n * @param Object table \r\n * \r\n * @return void\r\n */\r\nconst validateTableSchema = (table) => {\r\n    if (!_isObject(table)) {\r\n        throw new Error('Table definition must be an object.');\r\n    }\r\n    if (!table.name) {\r\n        throw new Error('Table must have a name.');\r\n    }\r\n    if (table.autoIncrement) {\r\n        if (!table.primaryKey) {\r\n            throw new Error('The Auto-Increment directive cannot be used without a Primary Key.');\r\n        }\r\n        if (_arrFrom(table.primaryKey).length > 1) {\r\n            throw new Error('The Auto-Increment directive cannot be used with a composite Primary Key.');\r\n        }\r\n    }\r\n    if (!_isObject(table.fields)) {\r\n        throw new Error('Table must have a valid \"fields\" list.');\r\n    }\r\n    _each(table.fields, (fieldName, field) => {\r\n        if (!_isObject(field)) {\r\n            throw new Error('Invalid field definition: \"' + fieldName + '\" at \"' + table.name + '\".');\r\n        }\r\n        if (field.referencedEntity\r\n            && !(_isObject(field.referencedEntity) && field.referencedEntity.name)) {\r\n            throw new Error('Invalid foreign key definition: \"' + fieldName + '\" at \"' + table.name + '\".');\r\n        }\r\n    });\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport { schemaCreateStores } from './_Database.js';\r\n\r\n/**\r\n * --------------------------\r\n * Programmatic API for database management.\r\n * --------------------------\r\n * .list()\r\n * .exists()\r\n * .open()\r\n * .create()\r\n * .drop()\r\n */\r\nexport default class _Factory {\r\n\r\n    /**\r\n     * ---------\r\n     * QUERY\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * Parses and evaluates a query.\r\n     * \r\n     * @param String query\r\n     * @param Array ...args\r\n     * \r\n     * @return Any\r\n\t */\r\n\tstatic async query(query, ...args) {\r\n        // -----------------\r\n        var params, vars;\r\n        if (_isArray(args[0])) {\r\n            vars = args.shift();\r\n        }\r\n        params = args.shift() || {};\r\n        if (vars) {\r\n            params.vars = vars;\r\n        }\r\n        // -----------------\r\n        return this._query(query, params);\r\n    }\r\n\r\n    /**\r\n     * Has a database?\r\n     * \r\n     * @param String databaseName\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async exists(databaseName = this.defaultDB) {\r\n        var databases = await this.list();\r\n        return databases.filter(database => database.name === databaseName).length > 0;\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array  tables\r\n     * @param Bool  replace\r\n     * \r\n     * @return Object\r\n     */\r\n    static async create(databaseName = this.defaultDB, schema = [], replace = false) {\r\n        var currentDatabases = await this.list();\r\n        var existingVersions = _arrFrom(currentDatabases).filter(d => d.name === databaseName).map(d => d.version);\r\n        if (existingVersions.length) {\r\n            if (!replace) {\r\n                throw new Error('Database \"' + databaseName + '\" already exists at versions: ' + existingVersions.join(',') + '!');\r\n            }\r\n            await this.drop(databaseName);\r\n        }\r\n        // ------------------\r\n        this.schema[databaseName] = {};\r\n        if (Object.keys(schema || {}).length) {\r\n            if (_isObject(schema)) {\r\n                _each(schema, (name, _schema) => {\r\n                    // Replace\r\n                    _schema.name = name;\r\n                });\r\n                schema = Object.values(schema);\r\n            }\r\n            schemaCreateStores(this.schema[databaseName], schema);\r\n        }\r\n        // ------------------\r\n        return await this._create(databaseName, schema, replace);\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async drop(databaseName = this.defaultDB) {\r\n        if (!(await this.exists(databaseName))) {\r\n            throw new Error('Database \"' + databaseName + '\" has not been defined.');\r\n        }\r\n        // ------------------\r\n        delete this.schema[databaseName];\r\n        // ------------------\r\n        return await this._drop(databaseName);;\r\n    }\r\n    \r\n    /**\r\n     * ---------\r\n     * IMPORT/EXPORT\r\n     * ---------\r\n     */\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Object payload\r\n     * @param Bool replace\r\n     * \r\n     * @return Array\r\n     */\r\n    static async import(databaseName, payload, replace = false) {\r\n        var database = await this.create(databaseName, payload.schema, replace);\r\n        return Promise.all(Object.keys(payload.data || {}).map(async storeName => {\r\n            var store = await database.open(storeName, 'readwrite');\r\n            return store.addAll(payload.data[storeName]);\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array ...args\r\n     * \r\n     * @return Object\r\n     */\r\n    static async export(databaseName, ...args) {\r\n        var database = await this.open(databaseName, ...args);\r\n        // -------------------\r\n        var _export = {schema: database.schema, data: {}};\r\n        // -------------------\r\n        var storeNames = await database.list();\r\n        await Promise.all(storeNames.map(async name => {\r\n            var store = await database.open(name);\r\n            _export.data[name] = await store.getAll();\r\n        }));\r\n        return _export;\r\n    }\r\n};\r\n\r\n/**\r\n * Databases definitions.\r\n * \r\n * @var Object\r\n */\r\n_Factory.schema = {};\r\n\r\n/**\r\n * Default Database name.\r\n * \r\n * @var String\r\n */\r\n_Factory.defaultDB = 'default';\r\n\r\n/**\r\n * DB Schema\r\n */\r\nexport const factoryGetSchema = (DB_FACTORY = null, databaseName = null) => {\r\n    //DB_FACTORY = DB_FACTORY || _Factory;\r\n    if (DB_FACTORY && (DB_FACTORY.prototype instanceof _Factory || DB_FACTORY === _Factory)) {\r\n        return DB_FACTORY.schema[databaseName || DB_FACTORY.defaultDB];\r\n    }\r\n    if (!databaseName && DB_FACTORY) {\r\n        return DB_FACTORY;\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _objFirst from '@webqit/util/obj/first.js';\r\nimport ArrowReferenceInterface from './ArrowReferenceInterface.js';\r\nimport { factoryGetSchema } from '../Base/_Factory.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrowReference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class ArrowReference extends ArrowReferenceInterface {\r\n\r\n\t/**\r\n\t * Gets the immediate target in a reference path.\r\n\t * \r\n\t * @param {Object} schema1\r\n\t * @param {Object} DB_FACTORY\r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n\tprocess(schema1, DB_FACTORY = null) {\r\n\t\tvar reference = this.interpreted ? this.interpreted.toString() : this.toString();\r\n\t\treturn ArrowReference.process(schema1, reference.replace(/`/g, ''), DB_FACTORY);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (this.isReference(expr)) {\r\n\t\t\tvar parse = super.parse(expr, parseCallback, params);\r\n\t\t\tif (parse)\r\n\t\t\tparse.backticks = true;\r\n\t\t\treturn parse;\r\n\t\t}\r\n\t}\r\n\r\n\t// ------------------------\r\n\r\n\t/**\r\n\t * Tells if a column is a reference.\r\n\t *\r\n\t * @param {String} str\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isReference(str) {\r\n\t\treturn str.indexOf(this.arrLeft) > -1 || str.indexOf(this.arrRight) > -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tells if a path is an outgoing reference in direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isOutgoing(reference) {\r\n\t\treturn reference.indexOf(this.arrRight) > -1 && _before(reference, this.arrRight).indexOf(this.arrLeft) === -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tells if a path is an incoming reference in direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic isIncoming(reference) {\r\n\t\treturn reference.indexOf(this.arrLeft) > -1 && _before(reference, this.arrLeft).indexOf(this.arrRight) === -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the relationshipPath in reverse direction.\r\n\t *\r\n\t * @param {String} reference\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tstatic reverse(reference) {\r\n\t\treturn reference.replace(new RegExp(this.arrRight, 'g'), '|' + this.arrRight + '|').replace(new RegExp(this.arrLeft, 'g'), '|' + this.arrLeft + '|')\r\n\t\t\t.split('|').map(str => str === this.arrRight ? this.arrLeft : (str === this.arrLeft ? this.arrRight : str)).reverse().join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the immediate target in a reference path.\r\n\t * \r\n\t * @param {Object} schema1 \r\n\t * @param {String} reference \r\n\t * @param {Object} DB_FACTORY \r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n    static process(schema1, reference, DB_FACTORY = null) {\r\n\t\tvar schema2,\r\n\t\t\tSCHEMAS = factoryGetSchema(DB_FACTORY, schema1 ? schema1.databaseName : null) || {fields: {}};\r\n\t\tif (this.isIncoming(reference)) {\r\n\t\t\t// reference === actingKey<-...\r\n\t\t\tvar actingKey = _before(reference, this.arrLeft),\r\n\t\t\t\tsourceTable = _after(reference, this.arrLeft);\r\n\t\t\tif (actingKey.indexOf('.') > 0) {\r\n\t\t\t\tif (!schema1) {\r\n\t\t\t\t\t// schema1 that's explicitly given takes precedence\r\n\t\t\t\t\t// as the \"context\" given in reference might be only an alias\r\n\t\t\t\t\tschema1 = SCHEMAS[_before(actingKey, '.')];\r\n\t\t\t\t}\r\n\t\t\t\tactingKey = _after(actingKey, '.');\r\n\t\t\t}\r\n\t\t\t// --------------------------\r\n\t\t\tif (this.isIncoming(sourceTable)) {\r\n\t\t\t\t// reference === actingKey<-actingKey2<-table->?...\r\n\t\t\t\tschema2 = this.process(null, sourceTable/* as new reference */, DB_FACTORY).a.table;\r\n\t\t\t\tvar select = sourceTable;\r\n\t\t\t} else {\r\n\t\t\t\t// reference === actingKey<-table->?...\r\n\t\t\t\tvar _sourceTable = _before(sourceTable, this.arrRight)\r\n\t\t\t\t\tselect = _after(sourceTable, this.arrRight);\r\n\t\t\t\tif (!(schema2 = SCHEMAS[_sourceTable])) {\r\n\t\t\t\t\tthrow new Error('[' + reference + ']: The implied table \"' + _sourceTable + '\" is not defined.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!schema1) {\r\n\t\t\t\t// --------------------------\r\n\t\t\t\t// Now get schema1 from schema2\r\n\t\t\t\t// --------------------------\r\n\t\t\t\tvar referencedEntity;\r\n\t\t\t\tif (!schema2.fields[actingKey] || !(referencedEntity = schema2.fields[actingKey].referencedEntity)) {\r\n\t\t\t\t\tthrow new Error('[' + reference + ']: The \"' + schema2.name + '\" table does not define the implied foreign key \"' + actingKey + '\".');\r\n\t\t\t\t}\r\n\t\t\t\tschema1 = SCHEMAS[referencedEntity.name];\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ta: {table: schema1, actingKey: schema1.primaryKey,},\r\n\t\t\t\tb: {table: schema2, actingKey, select,},\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// --------------------------\r\n\t\t// reference === foreignKey->...\r\n\t\t// --------------------------\r\n\t\tvar foreignKey = _before(reference, this.arrRight)\r\n\t\t\tselect = _after(reference, this.arrRight);\r\n\t\tif (foreignKey.indexOf('.') > 0) {\r\n\t\t\tif (!schema1) {\r\n\t\t\t\t// schema1 that's explicitly given takes precedence\r\n\t\t\t\t// as the \"context\" given in reference might be only an alias\r\n\t\t\t\tschema1 = SCHEMAS[_before(foreignKey, '.')];\r\n\t\t\t}\r\n\t\t\tforeignKey = _after(foreignKey, '.');\r\n\t\t} else {\r\n\t\t\tschema1 = _objFirst(SCHEMAS);\r\n\t\t}\r\n\t\t// --------------------------\r\n\t\t// Now get schema2 from schema1\r\n\t\t// --------------------------\r\n\t\tvar referencedEntity;\r\n\t\tif (!schema1.fields[foreignKey] || !(referencedEntity = schema1.fields[foreignKey].referencedEntity)) {\r\n\t\t\tthrow new Error('[' + schema1.name + this.arrRight + reference + ']: The \"' + schema1.name + '\" table does not define the implied foreign key \"' + foreignKey + '\".');\r\n\t\t}\r\n\t\tschema2 = SCHEMAS[referencedEntity.name];\r\n\t\treturn {\r\n\t\t\ta: {table: schema1, actingKey: foreignKey,},\r\n\t\t\tb: {table: schema2, actingKey: schema2.primaryKey, select,},\r\n\t\t};\r\n\t}\r\n};\r\n\r\n/**\r\n * @var string\r\n */\r\nArrowReference.arrRight = '~>';\r\nArrowReference.arrLeft = '<~';","\r\n/**\r\n * Tells if ALL items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest && callback(itm, i), true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * DeleteInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Literal'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport LiteralInterface from './LiteralInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Literal class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Literal extends LiteralInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback = null, params = {}) {\r\n\t\treturn new this(expr);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * TableInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TableExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n\r\n/**\r\n * ---------------------------\r\n * _Cursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class _Cursor {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(rows) {\r\n\t\tthis.cache = rows;\r\n\t\tthis.key = 0;\r\n\t\tthis.flags = {};\r\n\t\tthis._onfinish = [];\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tnext() {\r\n\t\tif (!this.cache.length || this.key === this.cache.length - 1) {\r\n\t\t\tthis.__eof = true;\r\n\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t\tthis.key = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n        this.key ++;\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teof() {\r\n\t\treturn !this.cache.length || this.key === this.cache.length - 1;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync fetch() {\r\n\t\tif (this.key < this.cache.length) {\r\n\t\t\treturn this.cache[this.key];\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _all from '@webqit/util/arr/all.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Store class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class _Store {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(store, name, schema = {}, params = {}) {\r\n\t\t// -----------------\r\n\t\tthis.store = store;\r\n\t\tthis.name = name;\r\n\t\tthis.schema = !_isEmpty(schema) ? schema : {\r\n\t\t\tname: store.name,\r\n\t\t\tprimaryKey: '',\r\n\t\t\tfields: {},\r\n\t\t\tuniqueKeys: {},\r\n\t\t};\r\n\t\tthis.params = params;\r\n\t\t// -----------------\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs a cursor.\r\n\t * \r\n\t * @param Cursor cursor\r\n\t * \r\n\t * @return Number\r\n\t */\r\n\tasync syncCursor(cursor) {\r\n\t\treturn await this.putAll(cursor.cache);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync match(rowObj) {\r\n\t\t// -----------\r\n\t\tvar primaryKey, existing;\r\n\t\tif (this.schema.primaryKey \r\n\t\t&& (primaryKey = readKeyPath(rowObj, this.schema.primaryKey)) \r\n\t\t&& (existing = await this.get(primaryKey))) {\r\n\t\t\treturn {\r\n\t\t\t\tmatchingKey: 'PRIMARY_KEY',\r\n\t\t\t\tprimaryKey,\r\n\t\t\t\trow: existing,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// -----------\r\n\t\tvar match;\r\n\t\tif (this.schema.uniqueKeys) {\r\n\t\t\t(await this.getAll()).forEach((existingRow, i) => {\r\n\t\t\t\tif (match) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t_each(this.schema.uniqueKeys, (constraintName, keyPath) => {\r\n\t\t\t\t\tif (existingRow && readKeyPath(rowObj, keyPath) === readKeyPath(existingRow, keyPath)) {\r\n\t\t\t\t\t\tmatch = {\r\n\t\t\t\t\t\t\tmatchingKey: constraintName,\r\n\t\t\t\t\t\t\tprimaryKey: this.schema.primaryKey ? readKeyPath(existingRow, this.schema.primaryKey) : i,\r\n\t\t\t\t\t\t\trow: {...existingRow},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------\r\n\t */\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync addAll(multiValues, columns = [], duplicateKeyCallback = null, forceAutoIncrement = false) {\r\n\r\n\t\tvar ongoingAdd;\r\n\t\tvar forUpdates = [];\r\n\r\n\t\tvar inserts = await Promise.all(multiValues.map(async (values, line) => {\r\n\r\n\r\n\t\t\tvar rowObj = {};\r\n\t\t\tif (_isObject(values)) {\r\n\t\t\t\trowObj = values;\r\n\t\t\t} else {\r\n\t\t\t\tvar _columns = columns.length ? columns : Object.keys(this.schema.fields);\r\n\t\t\t\tif (_columns.length && _columns.length !== values.length) {\r\n\t\t\t\t\tthrow new Error('Column/values count mismatch at line ' + line + '!');\r\n\t\t\t\t}\r\n\t\t\t\t_columns.forEach((columnName, i) => {\r\n\t\t\t\t\trowObj[columnName] = values[i];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// -------------\r\n\t\t\tthis.handleInput(rowObj, true);\t\t\t\t\t\r\n\t\t\t// -------------\r\n\r\n\t\t\tif (this.shouldMatchInput(rowObj) || duplicateKeyCallback) {\r\n\t\t\t\tongoingAdd/* next iteration should wait */ = new Promise(async resolve => {\r\n\t\t\t\t\tawait ongoingAdd;/* wait prev iteration */\r\n\r\n\t\t\t\t\tvar match = await this.match(rowObj);\r\n\t\t\t\t\tif (match && duplicateKeyCallback) {\r\n\t\t\t\t\t\tvar duplicateRow = {...match.row};\r\n\t\t\t\t\t\tif (duplicateKeyCallback(duplicateRow, rowObj)) {\r\n\t\t\t\t\t\t\tforUpdates.push(duplicateRow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// The duplicate situation had been handled\r\n\t\t\t\t\t\t// ...positive or negative\r\n\t\t\t\t\t\treturn resolve(0);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// We're finally going to add!\r\n\t\t\t\t\t// We must not do this earlier...\r\n\t\t\t\t\t// as \"onupdate\" rows will erronously take on a new timestamp on this column\r\n\t\t\t\t\tawait this.beforeAdd(rowObj, match);\r\n\t\t\t\t\tresolve(this.add(rowObj));\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ongoingAdd;\r\n\t\t\t}\r\n\r\n\t\t\tawait this.beforeAdd(rowObj);\r\n\t\t\treturn this.add(rowObj);\r\n\t\t}));\r\n\r\n\t\t// OnDuplicateKey updates\r\n\t\tif (forUpdates.length) {\r\n\t\t\tinserts = inserts.concat(await this.putAll(forUpdates));\r\n\t\t}\r\n\r\n\t\treturn inserts;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforeAdd(rowObj, match) {\r\n\t\tvar timestamp = (new Date).toLocaleString('en-CA', {hour12: false});\r\n\t\t_each(this.schema.fields || {}, (name, field) => {\r\n\t\t\tif ((field.type === 'datetime' || field.type === 'timestamp') && field.default === 'CURRENT_TIMESTAMP') {\r\n\t\t\t\trowObj[name] = timestamp;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync putAll(multiRows) {\r\n\t\tvar ongoingPut;\r\n\t\tvar updates = await Promise.all(multiRows.map(async rowObj => {\r\n\r\n\t\t\t// -------------\r\n\t\t\tthis.handleInput(rowObj);\t\t\t\t\t\r\n\t\t\t// -------------\r\n\t\t\tif (this.shouldMatchInput(rowObj)) {\r\n\t\t\t\tongoingPut/* next iteration should wait */ = new Promise(async resolve => {\r\n\t\t\t\t\tawait ongoingPut;/* wait prev iteration */\r\n\r\n\t\t\t\t\tawait this.beforePut(rowObj, await this.match(rowObj));\r\n\t\t\t\t\tresolve(this.put(rowObj));\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ongoingPut;\r\n\t\t\t}\r\n\r\n\t\t\tawait this.beforePut(rowObj);\r\n\t\t\treturn this.put(rowObj);\r\n\t\t}));\r\n\r\n\t\treturn updates;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforePut(rowObj, match) {\r\n\t\tif (match && !_all(Object.keys(rowObj), key => rowObj[key] === match.row[key])) {\r\n\t\t\tvar timestamp = (new Date).toLocaleString('en-CA', {hour12: false});\r\n\t\t\t_each(this.schema.fields || {}, (name, field) => {\r\n\t\t\t\tif ((field.type === 'datetime' || field.type === 'timestamp') && field.onupdate === 'CURRENT_TIMESTAMP') {\r\n\t\t\t\t\trowObj[name] = timestamp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync deleteAll(multiIDs) {\r\n\t\tvar deletes = await Promise.all(multiIDs.map(async primaryKey => {\r\n\t\t\treturn this.delete(await this.beforeDelete(primaryKey));\r\n\t\t}));\r\n\r\n\t\treturn deletes;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforeDelete(primaryKey) {\t\r\n\t\treturn primaryKey;\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------\r\n\t */\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\thandleInput(rowObj, applyDefaults = false) {\r\n\t\tvar rowObjColumns = Object.keys(rowObj);\r\n\t\tvar schemaColumns = Object.keys(this.schema.fields);\r\n\t\t// ------------------\r\n\t\tvar unknownFields = rowObjColumns.filter(col => schemaColumns.indexOf(col) === -1);\r\n\t\tif (unknownFields.length) {\r\n\t\t\tthrow new Error('Unknown column: ' + unknownFields[0]);\r\n\t\t}\r\n\t\t// ------------------\r\n\t\tschemaColumns.forEach(columnName => {\r\n\t\t\tvar value = rowObj[columnName];\r\n\t\t\tvar field = _isObject(this.schema.fields[columnName]) ? this.schema.fields[columnName] : {};\r\n\t\t\tif (rowObjColumns.includes(columnName)) {\r\n\t\t\t\t// TODO: Validate supplied value\r\n\t\t\t\tif (field.type === 'json') {\r\n\t\t\t\t\tif (!_isTypeObject(_value) && (!_isString(value) || (!_wrapped(value, '[', ']') && !_wrapped(value, '{', '}')))) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['char', 'tinytext', 'smalltext', 'text', 'bigtext', 'varchar'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isString(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['bit', 'tinyint', 'smallint', 'int', 'bigint', 'decimal', 'number', 'float', 'real'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isNumeric(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['enum', 'set'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isNumeric(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['date', 'datetime', 'timestamp'].includes(field.type)) {\r\n\t\t\t\t\tif (!_isString(value)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (applyDefaults && !_intersect(_arrFrom(columnName), _arrFrom(this.schema.primaryKey)).length) {\r\n\t\t\t\t// DONE: Apply defaults...\r\n\t\t\t\trowObj[columnName] = ('default' in field) && !(['date', 'datetime', 'timestamp'].includes(field.type) && field.default === 'CURRENT_TIMESTAMP') \r\n\t\t\t\t\t? field.default \r\n\t\t\t\t\t: null;\r\n\t\t\t}\r\n\t\t\t// Non-nullable\r\n\t\t\tif (field.nullable === false && (_isNull(rowObj[columnName]) || _isUndefined(rowObj[columnName]))) {\r\n\t\t\t\tthrow new Error('Inserting NULL on non-nullable column: ' + columnName);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tshouldMatchInput(rowObj) {\r\n\t\treturn Object.keys(this.schema.fields).filter(name => {\r\n\t\t\tvar field = this.schema.fields[name];\r\n\t\t\treturn ['datetime', 'timestamp'].includes(field.type) \r\n\t\t\t\t&& (field.default === 'CURRENT_TIMESTAMP' || field.onupdate === 'CURRENT_TIMESTAMP')\r\n\t\t}).length;\r\n\t}\r\n};\r\n\r\n/**\r\n * @AutoIncremen\r\n */\r\nconst readKeyPath = (rowObj, keyPath) => {\r\n\treturn _arrFrom(keyPath).map(key => rowObj[key]).filter(v => v).join('-');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _Cursor from './_Cursor.js';\r\nimport _Store from './_Store.js';\r\n\r\n/**\r\n * ---------------------------\r\n * View class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class View extends _Store {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmt, store, name, schema = {}, params = {}) {\r\n\t\tsuper(store, name, schema, params);\r\n\t\tthis.stmt = stmt;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t * \r\n\t * @return Cursor\r\n\t */\r\n\tgetCursor() {\r\n\t\treturn new _Cursor((this.store || []).filter(row => row));\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs cursors at the base.\r\n\t * \r\n\t * @param Cursor cursor\r\n\t * \r\n\t * @return Number\r\n\t */\r\n\tasync syncCursor(cursor) {\r\n\t\treturn this.stmt.base.syncCursors();\r\n\t}\r\n};","export default class extends Error {};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Cursor from '../_Cursor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBCursor class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBCursor extends _Cursor {};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport DuplicateKeyViolationError from '../DuplicateKeyViolationError.js';\r\nimport _Store from '../_Store.js';\r\nimport ODBCursor from './ODBCursor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBStore class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBStore extends _Store {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(store, name, schema = {}, params = {}) {\r\n\t\tsuper(...arguments);\r\n\t\tthis.ongoingWrite = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t * \r\n\t * @return Cursor\r\n\t */\r\n\tgetCursor() {\r\n\t\treturn new ODBCursor(\r\n\t\t\t// IMPORTANT: Deep copy... that is... copy each row\r\n\t\t\t(this.store || []).reduce((_store, row) => _store.concat(row ? {...row} : undefined), []).filter(row => row)\r\n\t\t);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync getAll() {\r\n\t\t// IMPORTANT: Deep copy... that is... copy each row\r\n\t\treturn (this.store || []).reduce((_store, row) => _store.concat(row ? {...row} : undefined), []);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync get(rowID) {\r\n\t\tif (!this.schema.primaryKey) {\r\n\t\t\tthrow new Error('Table must define a Primary Key to fetch an item by Primary Key.');\r\n\t\t}\r\n\t\tvar store = this.store;\r\n\t\trowID = _arrFrom(rowID).join('-');\r\n\t\tif (this.schema.autoIncrement) {\r\n\t\t\treturn store[rowID - 1] ? {...store[rowID - 1]} : undefined;\r\n\t\t}\r\n\t\treturn store[rowID] ? {...store[rowID]} : undefined;\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync count() {\r\n\t\tvar store = this.store;\r\n\t\treturn store.length;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tshouldMatchInput(rowObj) {\r\n\t\treturn this.schema.primaryKey || super.shouldMatchInput(rowObj);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforeAdd(rowObj, match) {\r\n\t\tif (match) {\r\n\t\t\tthrow new DuplicateKeyViolationError('Inserting duplicate values on unique key constraint: ' + match.matchingKey);\r\n\t\t} else {\r\n\t\t\tvar store = this.store;\r\n\t\t\tprocessPrimaryKey(store, rowObj, this.schema.primaryKey, this.schema.autoIncrement);\r\n\t\t}\r\n\r\n\t\tawait super.beforeAdd(rowObj, match);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(rowObj) {\r\n\t\tthis.ongoingWrite = new Promise(async (resolve, reject) => {\r\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\r\n\t\t\tvar store = this.store;\r\n\t\t\tvar primaryKey = readKeyPath(rowObj, this.schema.primaryKey);\r\n\t\t\tif (this.schema.autoIncrement) {\r\n\t\t\t\tstore[primaryKey - 1] = rowObj;\r\n\t\t\t} else {\r\n\t\t\t\tstore[primaryKey] = rowObj;\r\n\t\t\t}\r\n\t\t\tresolve(primaryKey);\r\n\t\t});\r\n\r\n\t\treturn this.ongoingWrite;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync beforePut(rowObj, match) {\r\n\t\tif (match) {\r\n\t\t\t_each(match.row, (key, value) => {\r\n\t\t\t\tif (!(key in rowObj)) {\r\n\t\t\t\t\trowObj[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvar store = this.store;\r\n\t\t\tprocessPrimaryKey(store, rowObj, this.schema.primaryKey, this.schema.autoIncrement);\r\n\t\t}\r\n\r\n\t\tawait super.beforePut(rowObj, match);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tput(rowObj) {\r\n\t\tthis.ongoingWrite = new Promise(async resolve => {\r\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\r\n\t\t\tvar store = this.store,\r\n\t\t\t\tprimaryKey = readKeyPath(rowObj, this.schema.primaryKey);\r\n\t\t\tif (this.schema.autoIncrement) {\r\n\t\t\t\tstore[primaryKey - 1] = rowObj;\r\n\t\t\t} else {\r\n\t\t\t\tstore[primaryKey] = rowObj;\r\n\t\t\t}\r\n\t\t\tresolve(primaryKey);\r\n\t\t});\r\n\r\n\t\treturn this.ongoingWrite;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tdelete(rowID, assertExisting = true) {\r\n\t\tthis.ongoingWrite = new Promise(async (resolve, reject) => {\r\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\r\n\t\t\tvar primaryKey, store = this.store;\r\n\t\t\tif (this.schema.autoIncrement) {\r\n\t\t\t\tif (store[rowID - 1]) {\r\n\t\t\t\t\tdelete store[rowID - 1];\r\n\t\t\t\t\tprimaryKey = rowID;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (store[rowID]) {\r\n\t\t\t\t\tdelete store[rowID];\r\n\t\t\t\t\tprimaryKey = rowID;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!primaryKey && assertExisting) {\r\n\t\t\t\treturn reject(new Error('The given row (with ' + _arrFrom(this.schema.primaryKey).join(',') + ' = ' + primaryKey + ') does not exist in the store.'));\r\n\t\t\t}\r\n\t\t\tresolve(primaryKey);\r\n\t\t});\r\n\r\n\t\treturn this.ongoingWrite;\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync clear() {\r\n\t\tvar store = this.store;\r\n\t\tstore.splice(0);\r\n\t\treturn true;\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @AutoIncremen\r\n */\r\nvar readKeyPath = (rowObj, keyPath) => {\r\n\treturn _arrFrom(keyPath).map(key => rowObj[key]).filter(v => v).join('-');\r\n};\r\n\r\n/**\r\n * @AutoIncremen\r\n */\r\nexport function processPrimaryKey(store, rowObj, primaryKey, canAutoIncrement) {\r\n\tif (!primaryKey) {\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvar primaryKeyVal = readKeyPath(rowObj, primaryKey);\r\n\tif (!primaryKeyVal && canAutoIncrement) {\r\n\t\tvar primaryKeyPath = _arrFrom(primaryKey);\r\n\t\tif (primaryKeyPath.length > 1) {\r\n\t\t\tthrow new Error('The Auto-Increment flag cannot be used with Composite Primary Keys.');\r\n\t\t}\r\n\t\tprimaryKeyVal = store.length + 1;\r\n\t\trowObj[primaryKeyPath[0]] = primaryKeyVal;\r\n\t}\r\n\r\n\treturn primaryKeyVal;\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Database from '../_Database.js';\r\nimport ODBStore from './ODBStore.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBDatabase class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBDatabase extends _Database {\r\n\r\n    /**\r\n     * Returns store names.\r\n     * \r\n     * @return Array\r\n     */\r\n    list() {\r\n        return Object.keys(this.database);\r\n    }\r\n\t \r\n\t/**\r\n\t * Opens a store.\r\n     * \r\n     * @param String  storeName\r\n     * @param String  mode\r\n     * @param Object params\r\n     * \r\n     * @return ODBStore\r\n\t */\r\n\topen(storeName, mode = 'readonly', params = {}) {\r\n\t\tvar store = this.database[storeName];\r\n\t\tparams.mode = mode;\r\n\t\treturn new ODBStore(store, storeName, this.schema[storeName], params);\r\n\t}\r\n\t\r\n    /**\r\n     * Creates a store\r\n     * \r\n     * @param String  storeName\r\n     * @param Object schema\r\n     * @param Bool  replace\r\n     * \r\n     * @return ODBStore\r\n     */\r\n    async _create(storeName, schema, replace) {\r\n        var store = [];\r\n        this.database[storeName] = store;\r\n        return new ODBStore(store, this.schema[storeName]);\r\n\t}\r\n\t\r\n    /**\r\n     * Drops a store.\r\n     * \r\n     * @param String  storeName\r\n     * \r\n     * @return Bool\r\n     */\r\n    async _drop(storeName) {\r\n        delete this.database[storeName];\r\n        return true;\r\n    }\r\n};","\r\n\r\n/**\r\n * @imports\r\n */\r\nimport _Factory from '../_Factory.js';\r\nimport ODBDatabase from './ODBDatabase.js';\r\nimport Rql from '../../index.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ODBFactory class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ODBFactory extends _Factory {\r\n\r\n    /**\r\n     * ---------\r\n     * QUERY\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * @inheritdoc\r\n\t */\r\n\tstatic async _query(query, params = {}) {\r\n        params.DB_FACTORY = this;\r\n        return Rql.parse(query, null, params).eval(this);\r\n    }\r\n    \r\n    /**\r\n     * ---------\r\n     * API\r\n     * ---------\r\n     */\r\n\t \r\n\t/**\r\n     * Returns a list of database definitions.\r\n     * \r\n     * @return Array\r\n\t */\r\n\tstatic async list() {\r\n        return Object.keys(this.databases).map(d => { return {name: d, version: 0}; });\r\n\t}\r\n\t \r\n\t/**\r\n\t * Opens a database.\r\n\t * \r\n\t * @inheritdoc\r\n\t */\r\n\tstatic async open(databaseName = this.defaultDB, version = 0) {\r\n\t\treturn new ODBDatabase(this.databases[databaseName], this.schema[databaseName]);\r\n\t}\r\n\t\r\n    /**\r\n     * ---------\r\n     * DATABASE\r\n     * ---------\r\n     */\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * @param Array  schema\r\n     * @param Bool  replace\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async _create(databaseName, schema, replace = false) {\r\n        this.databases[databaseName] = {};\r\n        if ((schema || []).length) {\r\n            schema.forEach(_schema => {\r\n                this.databases[databaseName][_schema.name] = [];\r\n            });\r\n        }\r\n        return new ODBDatabase(this.databases[databaseName], this.schema[databaseName]);\r\n    }\r\n\r\n    /**\r\n     * Drops a database.\r\n     * \r\n     * @param String databaseName\r\n     * \r\n     * @return Bool\r\n     */\r\n    static async _drop(databaseName) {\r\n        delete this.databases[databaseName];\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Databases storage.\r\n * \r\n * @var Object\r\n */\r\nODBFactory.databases = {};\r\n","\r\n/**\r\n * Gets the maximum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.max(v1, v2), arr.shift());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAbstraction,\r\n\tAbstractionInterface,\r\n\tReferenceInterface,\r\n} from '../index.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _instanceof from '@webqit/util/js/instanceof.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _promise from '@webqit/util/js/promise.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _objFirst from '@webqit/util/obj/first.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport LiteralInterface from '../Expr/LiteralInterface.js';\r\nimport Literal from '../Expr/Literal.js';\r\nimport TableInterface from './TableInterface.js';\r\nimport View from '../Base/View.js';\r\nimport _Factory, { factoryGetSchema } from '../Base/_Factory.js';\r\nimport _Database from '../Base/_Database.js';\r\nimport { DB } from '../../.tests/install.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Table class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Table extends TableInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, alias, claused = false, schema = null) {\r\n\t\tsuper();\r\n\t\t// LiteralInterface or AbstractionInterface\r\n\t\tthis.expr = expr;\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = claused;\r\n\t\tthis.schema = schema;\r\n\t\tthis.associatedReferences = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * --------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tas(alias) {\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = true;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetDatabaseName() {\r\n\t\treturn (this.expr + \"\").split('.').slice(0, -1)[0] || '';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\t// Ask down the line?\r\n\t\tif (this.isDerivedQuery()) {\r\n\t\t\treturn _arrFrom(this.getDerivedQuery().getTable(), false)[0].getName();\r\n\t\t}\r\n\t\t// Without backticks\r\n\t\treturn (this.expr + \"\").split('.').pop();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn this.alias || this.getName();\r\n\t}\r\n\r\n\t/**\r\n\t * Tells if this is a derived query\r\n\t * \r\n\t * @return Bool\r\n\t */\r\n\tisDerivedQuery() {\r\n\t\treturn this.expr instanceof AbstractionInterface;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the derived query\r\n\t * \r\n\t * @return Bool\r\n\t */\r\n\tgetDerivedQuery() {\r\n\t\treturn this.expr/*ABS*/.expr/*SELECT*/;\r\n\t}\r\n\r\n\t/**\r\n\t * Associates a Reference\r\n\t * \r\n\t * @param Object reference\r\n\t * \r\n\t * @return void\r\n\t */\r\n\tassociateReference(reference) {\r\n\t\treturn this.associatedReferences.push(reference);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the associated References\r\n\t * \r\n\t * @return Array\r\n\t */\r\n\tgetAssociateReferences() {\r\n\t\treturn this.associatedReferences;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetSchema() {\r\n\t\tif (!this.schema && this.isDerivedQuery()) {\r\n\t\t\tvar derivedName = this.getAlias();\r\n\t\t\tvar derivedQuery = this.getDerivedQuery();\r\n\t\t\tvar derivedQuerySources = derivedQuery.getSources(true/* resolve */);\r\n\t\t\tvar getAliasOfField = fieldName => derivedQuery.getFields().reduce((alias, field) => alias || (fieldName === field.getName() ? field.getAlias() : null), null);\r\n\t\t\t// ---------------------\r\n\t\t\t// Sources schemas\r\n\t\t\tvar ALL_SCHEMAS = {};\r\n\t\t\tderivedQuerySources.forEach(source => {\r\n\t\t\t\tALL_SCHEMAS[source.getAlias()] = source.getSchema();\r\n\t\t\t});\r\n\t\t\tvar MAIN_SCHEMA = _objFirst(ALL_SCHEMAS);\r\n\t\t\t// ---------------------\r\n\t\t\t// Fields schemas\r\n\t\t\tvar derivedSchema = { name: derivedName, fields: {}, uniqueKeys: {}, derived: true, };\r\n\t\t\tderivedQuery.getFields().forEach(field => {\r\n\t\t\t\tif (_instanceof(field.expr, ReferenceInterface)) {\r\n\t\t\t\t\tif (field.getName() === '*') {\r\n\t\t\t\t\t\tfield.expr.interpreted.forEach(ref => {\r\n\t\t\t\t\t\t\tderivedSchema.fields[ref.name] = ((ALL_SCHEMAS[ref.context.name] || {}).fields || {})[name] || {type: 'any', derived: true};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar name = field.getName(), context = field.getContextName();\r\n\t\t\t\t\t\tderivedSchema.fields[field.getAlias()] = (((context ? ALL_SCHEMAS[context] : MAIN_SCHEMA) || {}).fields || {})[name] || {type: 'any', derived: true};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tderivedSchema.fields[field.getAlias()] = {type: 'any', derived: true};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// ---------------------\r\n\t\t\t// PRIMARY KEY\r\n\t\t\tderivedSchema.primaryKey = _isArray(MAIN_SCHEMA.primaryKey) \r\n\t\t\t\t? MAIN_SCHEMA.primaryKey.map(fieldName => getAliasOfField(fieldName))\r\n\t\t\t\t: getAliasOfField(MAIN_SCHEMA.primaryKey);\r\n\t\t\tderivedSchema.autoIncrement = MAIN_SCHEMA.autoIncrement;\r\n\t\t\tif (_isEmpty(derivedSchema.primaryKey)) {\r\n\t\t\t\tdelete derivedSchema.primaryKey;\r\n\t\t\t\tdelete derivedSchema.autoIncrement;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// RUNTIME UNIQUE\r\n\t\t\t_each(MAIN_SCHEMA.uniqueKeys || {}, (name, keyPath) => {\r\n\t\t\t\tvar keyPathAliased = _arrFrom(keyPath).map(fieldName => getAliasOfField(fieldName));\r\n\t\t\t\tderivedSchema.uniqueKeys[name] = !_isArray(keyPath) ? keyPathAliased[0] : keyPathAliased;\r\n\t\t\t\tif (_isEmpty(derivedSchema.uniqueKeys[name])) {\r\n\t\t\t\t\tdelete derivedSchema.uniqueKeys[name];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// ---------------------\r\n\t\t\t// ENGINE\r\n\t\t\tderivedSchema.engine = MAIN_SCHEMA.engine;\r\n\r\n\t\t\t// Cache\r\n\t\t\tthis.schema = derivedSchema;\r\n\t\t}\r\n\r\n\t\treturn this.schema;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(DB_FACTORY = null, params = {}) {\r\n\r\n\t\tif (this.interpreted) {\r\n\t\t\treturn this.interpreted.eval(DB_FACTORY, params);\r\n\t\t}\r\n\r\n\t\t// --------------------------\r\n\r\n\t\tif (!DB_FACTORY) {\r\n\t\t\tthrow new Error('Context must be provided!');\r\n\t\t}\r\n\r\n\t\t// --------------------------\r\n\r\n\t\t// Derived table???\r\n\t\tif (this.isDerivedQuery()) {\r\n\r\n\t\t\tvar derivedName = this.getAlias(),\r\n\t\t\t\tderivedQuery = this.getDerivedQuery(),\r\n\t\t\t\tderivedSchema = this.getSchema(DB_FACTORY);\r\n\t\t\treturn derivedQuery.eval(DB_FACTORY, params).then(derivedStore => {\r\n\t\t\t\tvar _params = {...params};\r\n\t\t\t\t_params.alias = derivedName;\r\n\t\t\t\treturn new View(derivedQuery, derivedStore, derivedName, derivedSchema, _params);\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve().then(() => {\r\n\t\t\tvar databaseName = this.getDatabaseName();\r\n\t\t\tif (DB_FACTORY.prototype instanceof _Factory) {\r\n\t\t\t\treturn databaseName ? DB_FACTORY.open(databaseName) : DB_FACTORY.open();\r\n\t\t\t}\r\n\t\t\tif (databaseName) {\r\n\t\t\t\tthrow new Error('[' + this.expr + ']: For tables that are fully-qualified with a database name, a database factory must be provided as context.');\r\n\t\t\t}\r\n\t\t\treturn DB_FACTORY;\r\n\t\t}).then(database => {\r\n\t\t\tif (!(database instanceof _Database)) {\r\n\t\t\t\tthrow new Error('[' + this.expr + ']: The provided context could not be resolved to a valid database instance.');\r\n\t\t\t}\r\n\t\t\treturn database.open(this.getName(), params.mode, {alias: this.getAlias()});\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\t// --------------------------\r\n\t\tif (this.interpreted && params.interpreted) {\r\n\t\t\treturn this.interpreted.stringify(params);\r\n\t\t}\r\n\t\t// --------------------------\r\n\t\treturn [this.expr.stringify(params), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, [' (as )?'], {useRegex:'i'});\r\n\t\tif (parse.tokens.length < 3) {\r\n\t\t\tvar SCHEMA;\r\n\t\t\tvar tableParse = parseCallback(parse.tokens[0], [Abstraction, Literal]);\r\n\t\t\tvar alias = (parse.tokens[1] || '').trim(), \r\n\t\t\t\tclaused = (parse.matches[0] || '').trim();\r\n\r\n\t\t\t// -------------------\r\n\t\t\t// OBTAIN OR CREATE TABLE SCHEMA\r\n\t\t\t// -------------------\r\n\r\n\t\t\tif (tableParse instanceof LiteralInterface) {\r\n\t\t\t\tvar DB_SCHEMA = {},\r\n\t\t\t\t\tfullTableName = tableParse.toString().split('.'),\r\n\t\t\t\t\ttableName = fullTableName.pop(),\r\n\t\t\t\t\tdatabaseName = fullTableName.pop();\r\n\t\t\t\t\tDB_SCHEMA = factoryGetSchema(params.DB_FACTORY, databaseName);\r\n\t\t\t\t// -----------\r\n\t\t\t\tif (DB_SCHEMA && DB_SCHEMA[tableName]) {\r\n\t\t\t\t\tSCHEMA = DB_SCHEMA[tableName];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (params.validation !== false && params.assertTableValidity !== false) {\r\n\t\t\t\t\t\t// Throw \"Table unknown!\"\r\n\t\t\t\t\t\tthrow new Error('Unknown table: ' + tableName + '.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tSCHEMA = { name: tableName, fields: {}, derived: true, };\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new this(tableParse, alias, claused, SCHEMA);\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * Sums an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((total, v) => total + v, arr.shift());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _avg from '@webqit/util/arr/avg.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _max from '@webqit/util/arr/max.js';\r\nimport _min from '@webqit/util/arr/min.js';\r\nimport _sum from '@webqit/util/arr/sum.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _rand from '@webqit/util/arr/rand.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _get from '@webqit/util/obj/get.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Row class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Row {\r\n\t\r\n\tconstructor(params) {\r\n\t\tObject.defineProperty(this, '.params', {value: params});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCONCAT(...args) {\r\n\t\treturn args.join('');\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCONCAT_WS(...args) {\r\n\t\treturn args.join(args.shift());\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOALESCE(...args) {\r\n\t\treturn args.reduce((prev, next) => !_isNull(prev) ? prev : next, null);\r\n\t}\r\n\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tFIND_IN_SET(substr, str) {\r\n\t\treturn str.indexOf(substr);\r\n\t}\r\n\t\t\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tISNULL(val) {\r\n\t\treturn _isNull(val);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * ----------------\r\n\t * AGGREGATE FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOUNT(rows, flag, column) {\r\n\t\tif (column.stringify() === '*') {\r\n\t\t\t// NULLs accepted\r\n\t\t\treturn rows.length;\r\n\t\t}\r\n\t\treturn this.COLUMN(rows, flag, column).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUP_CONCAT(rows, flag, column) {\r\n\t\treturn this.COLUMN(rows, flag, column).join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUP_CONCAT_WS(rows, flag, separator, column) {\r\n\t\treturn this.COLUMN(rows, flag, column).join(separator.eval(this, this['.params']));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tAVG(rows, flag, column) {\r\n\t\treturn _avg(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tMAX(rows, flag, column) {\r\n\t\treturn _max(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tMIN(rows, flag, column) {\r\n\t\treturn _min(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tSUM(rows, flag, column) {\r\n\t\treturn _sum(this.COLUMN(rows, flag, column));\r\n\t}\r\n\r\n\t/**\r\n\t * ----------------\r\n\t * AGGREGATE SUPPORT FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tFIRST(rows, flag, column) {\r\n\t\t// NULLs accepted\r\n\t\treturn column.eval(_first(rows) || {}, this['.params']);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tLAST(rows, flag, column) {\r\n\t\t// NULLs accepted\r\n\t\treturn column.eval(_last(rows) || {}, this['.params']);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tANY_VALUE(rows, flag, column) {\r\n\t\treturn _rand(this.COLUMN(rows, flag, column));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tGROUPING(rows, flag, ...onColumns) {\r\n\t\tif (!this.AGGR || !this.AGGR.isRollup) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn onColumns.reduce((cum, column, i) => {\r\n\t\t\tvar match = this.AGGR.by.filter(by => {\r\n\t\t\t\tvar byStr = by.stringify();\r\n\t\t\t\tvar columnStr = column.stringify();\r\n\t\t\t\tif (columnStr.indexOf('.') === -1 && byStr.indexOf('.') > -1) {\r\n\t\t\t\t\tbyStr = _after(byStr, '.');\r\n\t\t\t\t}\r\n\t\t\t\treturn columnStr === byStr;\r\n\t\t\t});\r\n\t\t\treturn match.length ? i + 1 : cum;\r\n\t\t}, 0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOLUMN(rows, flag, arg) {\r\n\t\tvar result = rows.map(row => arg.eval(row, this['.params']));\r\n\t\t// COALESCE?\r\n\t\tif (_isArray(result[0])) {\r\n\t\t\tvar width = result[0].length;\r\n\t\t\tresult = result.filter(values => {\r\n\t\t\t\tif (!_isArray(values) || values.length !== width) {\r\n\t\t\t\t\tthrow new Error('Aggregate column list not even!');\r\n\t\t\t\t}\r\n\t\t\t\treturn values.reduce((_v, v) => !_isNull(_v) ? _v : v, null);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// NO NULLS!\r\n\t\tresult = result.filter(v => !_isNull(v));\r\n\t\t// DISTINCT?\r\n\t\tif (flag.toUpperCase() === 'DISTINCT') {\r\n\t\t\tresult = _unique(result);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tCOLUMNS(rows, flag, args) {\r\n\t\treturn args.map(arg => this.COLUMN(rows, flag, arg));\r\n\t}\r\n\t\r\n\t/**\r\n\t * ----------------\r\n\t * JSON FUNCTIONS\r\n\t * ----------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_EXTRACT(doc, path) {\r\n\t\treturn _get(JSON.parse(doc), path.split('.').slice(1));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_OBJECT(name, value) {\r\n\t\treturn _objFrom(name, value);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tJSON_MERGE(doc1, doc2) {\r\n\t\treturn _merge(JSON.parse(doc1), JSON.parse(doc2));\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _sum from './sum.js';\r\n\r\n/**\r\n * Gets the average of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\treturn arr.length ? _sum(arr) / arr.length : 0;\r\n};","\r\n/**\r\n * Gets the minimum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.min(v1, v2), arr.shift());\r\n};\r\n","\r\n/**\r\n * Gets one or more random values from an array.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar result = [];\r\n\tvar rand = null;\r\n\twhile (result.length < amount && (rand = arr[Math.floor(Math.random() * arr.length)]) && result.indexOf(rand) === -1) {\r\n\t\tresult.push(rand);\r\n\t};\r\n\treturn arguments.length > 1 ? result : result[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport Row from './Row.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Base class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Base {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(main, joins, where, params) {\r\n\t\t// -------------------------\r\n\t\tthis.main = main;\r\n\t\tthis.joins = joins;\r\n\t\t// -------------------------\r\n\t\tthis.mainCursor = main.then(m => m.getCursor());\r\n\t\tthis.joinCursors = joins.map(join => join.then(j => j.getCursor()));\r\n\t\t// -------------------------\r\n\t\tthis.where = where;\r\n\t\tthis.params = params;\r\n\t\t// -------------------------\r\n\t\tthis._onfinish = [];\r\n\t\tPromise.all(this.joinCursors).then(joinCursors => {\r\n\t\t\t// Advcance joins sequentially...\r\n\t\t\tvar lastJoinCursor = joinCursors.reduce((prevCursor, currentCursor) => {\r\n\t\t\t\tif (prevCursor) {\r\n\t\t\t\t\tprevCursor.onfinish(currentCursor.next.bind(currentCursor));\r\n\t\t\t\t}\r\n\t\t\t\treturn currentCursor;\r\n\t\t\t}, null);\r\n\t\t\tthis.mainCursor.then(mainCursor => {\r\n\t\t\t\t// Last join cursor should advance main cursor\r\n\t\t\t\tif (lastJoinCursor) {\r\n\t\t\t\t\tlastJoinCursor.onfinish(mainCursor.next.bind(mainCursor));\r\n\t\t\t\t}\r\n\t\t\t\t// Fire onfinish event from main cursor\r\n\t\t\t\tmainCursor.onfinish(() => {\r\n\t\t\t\t\tthis.eof = true;\r\n\t\t\t\t\tthis._onfinish.forEach(callback => callback());\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tonfinish(callback) {this._onfinish.push(callback);}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync fetch() {\r\n\t\tif (this.eof) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar rowComposition, rowCompositionRejection;\r\n\t\t// -----------\r\n\t\tlet __main = await this.main,\r\n\t\t\t__mainCursor = await this.mainCursor,\r\n\t\t\t__mainFetch = await __mainCursor.fetch(),\r\n\t\t\t__mainAlias = __main.params.alias || __main.name;\r\n\t\t// -----------\r\n\t\tlet __joins = await Promise.all(this.joins),\r\n\t\t\t__joinCursors = await Promise.all(this.joinCursors);\r\n\t\t// -----------\r\n\t\tlet joinFetches = __joinCursors.map(async (__joinCursor, i) => {\r\n\t\t\t\tif (rowCompositionRejection) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar __joinFetch = await __joinCursor.fetch(),\r\n\t\t\t\t\t__joinAlias = __joins[i].params.alias || __joins[i].name;\r\n\t\t\t\tif (!__joins[i].join || __joins[i].join.type === 'full') {\r\n\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\r\n\t\t\t\t\treturn __joinFetch;\r\n\t\t\t\t} else if (__joins[i].join.conditionClause.trim().toLowerCase() === 'using') {\r\n\t\t\t\t\t// Join using \"column name\"...\r\n\t\t\t\t\tvar column = __joins[i].join.condition.stringify();\r\n\t\t\t\t\tif (__joinFetch[column] === __mainFetch[column]) {\r\n\t\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\r\n\t\t\t\t\t\treturn __joinFetch;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar conditionRowComposition = new Row(this.params);\r\n\t\t\t\t\tconditionRowComposition[__mainAlias] = __mainFetch;\r\n\t\t\t\t\tconditionRowComposition[__joinAlias] = __joinFetch;\r\n\t\t\t\t\tif (__joins[i].join.condition.eval(conditionRowComposition, this.params)) {\r\n\t\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\r\n\t\t\t\t\t\treturn __joinFetch;\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// Left/Right Join \r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!__joinCursor.flags[__mainCursor.key]) {\r\n\t\t\t\t\tif (__joinCursor.eof() && __joins[i].join.type.toLowerCase() === 'left') {\r\n\t\t\t\t\t\treturn {};\r\n\t\t\t\t\t} else if (__mainCursor.eof() && __joins[i].join.type.toLowerCase() === 'right') {\r\n\t\t\t\t\t\t__mainFetch = {};\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trowCompositionRejection = true;\r\n\t\t});\r\n\t\tlet __joinFetches = await Promise.all(joinFetches);\r\n\t\t// -------------------------\r\n\t\t// Advance cursor.\r\n\t\t// IMPORTANT: AFTER HAVING WAITED FOR joinFetches\r\n\t\t(__joinCursors[0] || __mainCursor).next();\r\n\t\t// -------------------------\r\n\t\t// Filter by join status\r\n\t\tif (__joinFetches.filter(t => t).length === joinFetches.length) {\r\n\t\t\tvar _rowComposition = new Row(this.params);\r\n\t\t\t_rowComposition[__mainAlias] = __mainFetch;\r\n\t\t\t__joinFetches.forEach((rowMember, i) => {\r\n\t\t\t\tvar __joinAlias = __joins[i].params.alias || __joins[i].name;\r\n\t\t\t\t_rowComposition[__joinAlias] = rowMember;\r\n\t\t\t});\r\n\t\t\trowComposition = _rowComposition;\r\n\t\t}\r\n\t\t// ----------\r\n\t\t// Apply where\r\n\t\t// ----------\r\n\t\ttry {\r\n\t\t\tif (!rowComposition || (this.where && !this.where.eval(rowComposition, this.params))) {\r\n\t\t\t\treturn await this.fetch();\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error('[\"' + this.where.stringify() + '\" in WHERE clause]: ' + e.message);\r\n\t\t}\r\n\t\treturn rowComposition;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync syncCursors() {\r\n\t\tvar __tables = await Promise.all(this.joins.concat(this.main));\r\n\t\tvar __cursors = await Promise.all(this.joinCursors.concat(this.mainCursor));\r\n\t\treturn Promise.all(__cursors.map((cursor, i) => {\r\n\t\t\treturn __tables[i].syncCursor(cursor);\r\n\t\t}));\r\n\t}\r\n};","\r\n/**\r\n * imports\r\n */\r\nimport _isBoolean from '@webqit/util/js/isBoolean.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport { factoryGetSchema } from '../Base/_Factory.js';\r\n\r\n/**\r\n * Requires the following tables: uac, uac_token (optional), account\r\n * Requires a user object: {id, lineage, parent, privileges,}\r\n */\r\nexport default class Query {\r\n\t\r\n\t/**\r\n\t * Creates the UAC logic that sets the value of each field conditionally.\r\n\t *\r\n\t * @param object                    params\r\n\t * @param object                    tableXSchema\r\n\t * @param object                    user\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tconstructor(params, tableXSchema, user) {\r\n        // ---------------------\r\n        var UAC_PARAMS = createParams(params, ['uac']);\r\n        // ---------------------\r\n        this.user = user || {\r\n            id: 0,\r\n            parent: 0,\r\n            lineage: '0',\r\n            privileges: [],\r\n        };\r\n        // ---------------\r\n        // MAIN QUERY\r\n        // ---------------\r\n\t\tthis.schema = tableXSchema;\r\n        this.alias = 'MAIN';\r\n        this.select = [];\r\n        this.where = [];\r\n        // ---------------\r\n        // RULES\r\n        // ---------------\r\n        // JOIN: Table-wide rules most-specific to the guest\r\n        if (UAC_PARAMS.SCHEMAS.uac) {\r\n            this.EXPLICIT_TABLE_ACCESS_QUERY = {\r\n                query: getExplicitRulesQuery(UAC_PARAMS, this.schema.name, this.user),\r\n                alias: 'EXPLICIT_TABLE_ACCESS',\r\n                on: ['EXPLICIT_TABLE_ACCESS.table_row = 0'],\r\n            };\r\n        }\r\n        if (UAC_PARAMS.CONTROL_LEVEL === 'row') {\r\n            if (UAC_PARAMS.SCHEMAS.uac) {\r\n                // JOIN: Row-wide rules most-specific to the guest\r\n                this.EXPLICIT_ROW_ACCESS_QUERY = {\r\n                    query: getExplicitRulesQuery(UAC_PARAMS, this.schema.name, this.user),\r\n                    alias: 'EXPLICIT_ROW_ACCESS',\r\n                    on: ['EXPLICIT_ROW_ACCESS.table_row = ' + this.alias + '.' + this.schema.primaryKey],\r\n                };\r\n            }\r\n            // ---------------\r\n            // RIGHTS\r\n            // ---------------\r\n            // JOIN: The guest's organic rights towards the owner\r\n            if (this.schema.attributionKey && UAC_PARAMS.SCHEMAS.account) {\r\n                var ownerGuestRelationshipQuery = getOwnerGuestRelationshipQuery(UAC_PARAMS, this.user, false/* groupConcat */);\r\n                this.AUTHOR_user_RELATIONSHIP_QUERY = {\r\n                    query: ownerGuestRelationshipQueryr\n                    alias: 'AUTHOR_user_RELATIONSHIP',\r\n                    on: ['AUTHOR_user_RELATIONSHIP.' + ownerGuestRelationshipQuery.schema.primaryKey + ' = ' + this.alias + '.' + this.schema.attributionKey],\r\n                };\r\n            }\r\n        }\r\n        // ---------------\r\n        // APPLY\r\n        // ---------------\r\n        // The UAC table control\r\n        this.where.push(this.deriveEntityAccess('view') + ' <> 0');\r\n    }\r\n    \r\n    /**\r\n     * --------------------------\r\n     * ACCESS LOGIC\r\n     * --------------------------\r\n     */\r\n\r\n\t/**\r\n\t * Creates the SQL logic that computes descreet access rules and all other rules into a final value\r\n\t * - for entity access.\r\n\t *\r\n\t * @param string \t                accessType\r\n\t * @param bool \t\t                withActingRights\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tderiveEntityAccess(accessType, withActingRights = false) {\r\n\t\tvar entityAccess = [];\r\n\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\r\n\t\t\tentityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\r\n        }\r\n        if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\r\n            entityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\r\n        }\r\n\t\tentityAccess.push(getRightsRulesIntersectionExpression(rules(this.schema.uac, accessType), this.getGuestRightsExpression(), withActingRights));\r\n        // ---------------------\r\n\t\treturn 'COALESCE(' + entityAccess.join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates the SQL logic that computes descreet access rules and all \r\n     * other rules into their final values\r\n\t * - for table fields access.\r\n\t *\r\n\t * @param array \t                fields\r\n\t * @param string \t                accessType\r\n\t * @param bool \t\t                withActingRights\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tderiveFieldsAccess(fields, accessType, withActingRights = false) {\r\n\t\tvar fieldsAccesses = {};\r\n\t\tfields.forEach(field => {\r\n\t\t\tvar fieldAccess = [];\r\n\t\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\r\n\t\t\t\tfieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\r\n            }\r\n            if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\r\n\t\t\t    fieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\r\n            }\r\n            fieldAccess.push(getRightsRulesIntersectionExpression(rules(this.schema.fields[field].uac, accessType), this.getGuestRightsExpression(), withActingRights));\r\n\t\t\t// In the form: id:\"0\"\r\n\t\t\tfieldsAccesses[field] = 'COALESCE(' + fieldAccess.join(', ') + ')';\r\n\t\t});\r\n\t\treturn fieldsAccesses;\r\n\t}\r\n    \r\n    /**\r\n     * --------------------------\r\n     * ORGANIC RIGHTS\r\n     * --------------------------\r\n     */\r\n \r\n    /**\r\n     * Creates the SQL expression for all user rights:\r\n     * Organic + Static Rights\r\n     * \r\n     * return string\r\n     */\r\n    getGuestRightsExpression() {\r\n        var rights = [];\r\n\t\tif (this.AUTHOR_user_RELATIONSHIP_QUERY) {\r\n\t\t\trights.push(this.AUTHOR_user_RELATIONSHIP_QUERY.alias + '.relationship');\r\n\t\t\tif (this.AUTHOR_user_TOKEN_QUERY) {\r\n\t\t\t\trights.push('IF(' + this.AUTHOR_user_TOKEN_QUERY.alias + '.id, \"user\", \"\")');\r\n\t\t\t}\r\n        }\r\n        if (this.user.privileges.length) {\r\n            rights.push('\"' + this.user.privileges.join(',') + '\"');\r\n        }\r\n        // If all conditions above have been met, then we should have here:\r\n        // CONCAT_WS(\",\", _RELATED_ACCOUNT.relationship, IF(_TOKEN.id, \"user\", \"\"), \"ADMIN,ETC\")\r\n        // This would resolve to:\r\n        // \"ANCESTOR,PARENT,101,ADMIN,ETC\";\r\n        return rights.length ? 'CONCAT_WS(\",\", ' + rights.join(', ') + ')' : '\"\"';\r\n    }\r\n    \r\n    /**\r\n     * --------------------------\r\n     * TOSTRING\r\n     * --------------------------\r\n     */\r\n    \r\n    /**\r\n     * Stringifies the query.\r\n     * \r\n     * @return string\r\n     */\r\n    toString() {\r\n        return 'SELECT ' + this.select.join(', ') \r\n        + ' FROM ' + this.schema.name + ' AS ' + this.alias\r\n        + (this.EXPLICIT_TABLE_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_TABLE_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_TABLE_ACCESS_QUERY.on.join(' AND ') : '')\r\n        + (this.EXPLICIT_ROW_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_ROW_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_ROW_ACCESS_QUERY.on.join(' AND ') : '')\r\n        + (this.AUTHOR_user_RELATIONSHIP_QUERY ? ' LEFT JOIN (' + this.AUTHOR_user_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_user_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_user_RELATIONSHIP_QUERY.on.join(' AND ') : '')\r\n        + ' WHERE ' + this.where.join(' AND ');\r\n    }\r\n};\r\n\r\n/**\r\n * Helps resolve UAC params from user-supplied params.\r\n * Applies sensible defaults.\r\n * \r\n * @param Object params\r\n * @param Array tableSpecifiers\r\n * \r\n * @return Object\r\n */\r\nexport function createParams(params, tableSpecifiers = []) {\r\n    // --------------\r\n    var UAC_PARAMS = _merge({\r\n        DB_FACTORY: params.DB_FACTORY,\r\n        SCHEMAS: {},\r\n    }, params.UAC || {});\r\n    // --------------\r\n    tableSpecifiers.forEach(tableSpecifier => {\r\n        var fullTableName = tableSpecifier;\r\n        if (UAC_PARAMS.TABLE_SPECIFIERS) {\r\n            // Use custom-defined name\r\n            fullTableName = UAC_PARAMS.TABLE_SPECIFIERS[tableSpecifier];\r\n        }\r\n        var tableNameSplit = fullTableName.split('.');\r\n        var tableName = tableNameSplit.pop(),\r\n            databaseName = tableNameSplit.pop();\r\n        UAC_PARAMS.SCHEMAS[tableSpecifier] = (factoryGetSchema(UAC_PARAMS.DB_FACTORY, databaseName) || {})[tableName];\r\n    });\r\n    // --------------\r\n    return UAC_PARAMS;\r\n};\r\n  \r\n/**\r\n * --------------------------\r\n * TABLE-LEVEL UAC QUERY\r\n * - EXPLICIT and ORGANIC\r\n * --------------------------\r\n */\r\n\r\n/**\r\n * Makes the Query that finds the winning descreet access rules\r\n * for the given access type, for the current user OR the closest ancestor on this table (or, table row).\r\n *\r\n *  Each row has the following schema:\r\n * \r\n *  table_name: ...,\r\n *  table_row: ...,\r\n *  target: 1/3/7,\r\n *  uac: {\r\n *      read: 0,\r\n *      write: 0,\r\n *  },\r\n *  fields: {\r\n *      fname: {\r\n *          uac: {\r\n *              read: 0,\r\n *              write: 0,\r\n *          }\r\n *      }\r\n *  },\r\n *\r\n * @return object\r\n */\r\nexport function getExplicitRulesQuery(UAC_PARAMS, tableXName, user) {\r\n    var targetInLineageQuery = 'FIND_IN_SET(target, \"' + user.lineage.replace('/', ',') + '\")';\r\n    return {\r\n        schema: UAC_PARAMS.SCHEMAS.uac,\r\n        select: ['*', targetInLineageQuery + ' AS `lineage.target`'],\r\n        where: [\r\n            'table_name = ' + tableXName,\r\n            'target = ' + user.id + ' OR ' + targetInLineageQuery,\r\n        ],\r\n        orderBy: '`lineage.target` DESC',\r\n        limit: 1,\r\n        toString() {\r\n            return 'SELECT ' + this.select.join(', ') \r\n            + ' FROM ' + this.schema.name \r\n            + ' WHERE ' + this.where.join(' AND ') \r\n            + ' ORDER BY ' + this.orderBy \r\n            + ' LIMIT ' + this.limit;\r\n        },\r\n    };\r\n};\r\n      \r\n/**\r\n * Composes a query that determines the relatiosnhip\r\n * between a given owner and guest.\r\n * \r\n * A where clause can be subsequnetly added to the query\r\n * to identify the said owner\r\n * or a join clause can be added to dynamically identify the said owner\r\n * as part of a larger query.\r\n * \r\n * @param object                   UAC_PARAMS \r\n * @param object                   user \r\n * @param bool                     groupConcat \r\n * \r\n * @return object\r\n */\r\nexport function getOwnerGuestRelationshipQuery(UAC_PARAMS, user, groupConcat = false) {\r\n    var accessRightQueries = {};\r\n    // Descendant access right\r\n    accessRightQueries['DESCENDANT'] = 'FIND_IN_SET(id, \"' + user.lineage.replace(user.id + '/', '').replace(/\\//g, ',') + '\")';\r\n    // Child access right (also a descendant)\r\n    accessRightQueries['DESCENDANT,CHILD'] = 'id = ' + user.parent;\r\n    // Sibling access right\r\n    accessRightQueries['SIBLING'] = user.parent + ' = parent';\r\n    // Ancestor access right\r\n    accessRightQueries['ANCESTOR'] = 'FIND_IN_SET(' + user.id + ', REPLACE(REPLACE(lineage, CONCAT(id, \"/\"), \"\"), \"/\", \",\"))';\r\n    // Parent access right (also an ancestor)\r\n    accessRightQueries['ANCESTOR,PARENT'] = user.id + ' = parent';\r\n    // Direct attribution\r\n    accessRightQueries['AUTHOR'] = 'id = ' + user.id;\r\n    // ------\r\n    var compiledAccessRights = 'NULL'; // No access right\r\n    _each(accessRightQueries, (assertion, right) => {\r\n        compiledAccessRights = 'IF(' + assertion + ', \"' + right + '\", ' + compiledAccessRights + ')';\r\n    });\r\n    // ------\r\n    return {\r\n        schema: UAC_PARAMS.SCHEMAS.account,\r\n        select: (groupConcat ? 'GROUP_CONCAT(DISTINCT ' : '') + compiledAccessRights + (groupConcat ? ')' : '') + ' AS relationship',\r\n        where: [],\r\n        toString() {\r\n            return 'SELECT ' + this.select \r\n            + ' FROM ' + this.schema.name\r\n            + (this.where.length ? ' WHERE ' + this.where.join(' AND ') : '');\r\n        },\r\n    };\r\n};\r\n  \r\n/**\r\n * --------------------------\r\n * GENERAL HELPERS\r\n * --------------------------\r\n */\r\n    \r\n/**\r\n * Compiles to the SQL string that ssserts which of the current user's\r\n * total access rights (static + organic rights) passes the\r\n * given access rules.\r\n *\r\n * @param array|string|bool|null\trules\r\n * @param string\t\t\t\t\trightsExpression\r\n * @param bool\t\t\t\t\t\twithActingRights\r\n *\r\n * @return string\r\n */\r\nexport function getRightsRulesIntersectionExpression(rules, rightsExpression, withActingRights = false) {\r\n    var explicitFirstRule = _isBoolean(rules[0]) ? rules.shift() : null;\r\n    // No rule? Implict TRUE of NULL.\r\n    // Only rule is bool? Explicit TRUE/FALSE\r\n    if (!rules.length) {\r\n        return _isBoolean(explicitFirstRule) ? parseInt(explicitFirstRule) : 'NULL';\r\n    }\r\n    // ---------------------\r\n    // Which RULES are satisfied by RIGHTS?\r\n    // ---------------------\r\n    var nodeAccessAssertions = [];\r\n    rules.forEach(rule => {\r\n        var ruleSql = [];\r\n        // Where a rule specifies...\r\n        // PARENT+ETC\r\n        rule.split('+').forEach(r => {\r\n            ruleSql.push('FIND_IN_SET(\"' + r + '\", ' + rightsExpression + ')');\r\n        });\r\n        // Then we would have...\r\n        // IF(FIND_IN_SET(\"PARENT\". \"ANCESTOR,PARENT,101,ADMIN,ETC\") AND FIND_IN_SET(\"ETC\". \"ANCESTOR,PARENT,101,ADMIN,ETC\"), \"PARENT+ETC\", NULL);\r\n        nodeAccessAssertions.push('IF(' + ruleSql.join(' AND ') + ', \"' + rule + '\", NULL)');\r\n    });\r\n    // Gather none-NULL assertions\r\n    nodeAccessAssertions = 'COALESCE(' + nodeAccessAssertions.join(', ') + ')';\r\n    // ---------------------\r\n    // So should we invert the given NULLness of the logic?\r\n    // ---------------------\r\n    return explicitFirstRule \r\n        ? 'IF(ISNULL(' + nodeAccessAssertions + '), 1, 0)' \r\n        : 'IF(ISNULL(' + nodeAccessAssertions + '), 0, ' + (withActingRights ? nodeAccessAssertions : '1') + ')';\r\n};\r\n\r\n/**\r\n * Gets rules array\r\n * \r\n * @param array                     rules\r\n * @param string                    accessType\r\n * \r\n * @return array\r\n */\r\nexport function rules(rules, accessType) {\r\n    if (_isObject(rules)) {\r\n        rules = rules[accessType];\r\n    }\r\n    return _isEmpty(rules) \r\n        ? [] \r\n        : _arrFrom(rules);\r\n};\r\n","\r\n/**\r\n * imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport Query, { createParams, getOwnerGuestRelationshipQuery } from './Query.js';\r\n\r\nexport default class Client {\r\n\t\r\n\t/**\r\n\t * Creates the UAC logic that sets the value of each field conditionally.\r\n\t *\r\n\t * @param object            params\r\n\t * @param array\t\t\t\ttableXSchema\r\n\t * @param object            user\r\n\t * @param array\t\t\t\tcolumns\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic select(params, tableXSchema, user, columns = []) {\r\n\t\tcolumns = _arrFrom(columns);\r\n\t\tif (!columns.length || columns[0] === '*') {\r\n\t\t\tcolumns = Object.keys(tableXSchema.fields);\r\n\t\t}\r\n        // ---------------\r\n        // OBJECT_QUERY\r\n        // ---------------\r\n        var OBJECT_QUERY = new Query(params, tableXSchema, user);\r\n\t\t// The UAC fields control\r\n\t\tif (0) {\r\n\t\t\t_each(OBJECT_QUERY.deriveFieldsAccess(columns, 'view'), (field, accessPassExpression) => {\r\n\t\t\t\tOBJECT_QUERY.select.push('IF(' + accessPassExpression + ' <> 0, ' + OBJECT_QUERY.alias + '.' + field + ', NULL) AS ' + field);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tOBJECT_QUERY.select.push(...columns);\r\n\t\t}\r\n        return OBJECT_QUERY;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Returns the list of all accounts that the given rights can be applied to.\r\n\t *\r\n\t * @param object            params\r\n\t * @param object            user\r\n\t * @param array\t \t\t\torganicRights\r\n\t * @param array\t \t\t\tpriorityAccounts\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic getRelatedAccounts(params, user, organicRights, priorityAccounts = []) {\r\n\t\t// ---------------------\r\n        var UAC_PARAMS = createParams(params, ['uac', 'account']);\r\n        // ---------------------\r\n\t\tvar ACCOUNT_QUERY = {\r\n\t\t\tschema: UAC_PARAMS.SCHEMAS.account,\r\n\t\t\talias: 'ACCOUNT',\r\n\t\t\tselect: [],\r\n\t\t\twhere: [],\r\n\t\t\torderBy: [],\r\n\t\t\ttoString() {\r\n\t\t\t\treturn 'SELECT ' + this.select.join(', ')\r\n\t\t\t\t+ ' FROM ' + this.schema.name + ' AS ' + this.alias\r\n\t\t\t\t+ ' RIGHT JOIN (' + this.AUTHOR_USER_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.on.join(' AND ')\r\n                + ' WHERE ' + this.where.join(' AND ') \r\n                + (this.orderBy.length ? ' ORDER BY ' + this.orderBy : '');\r\n\t\t\t}\r\n\t\t}\r\n\t\t// RIGHT JOIN\r\n\t\tACCOUNT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY = {\r\n\t\t\tquery: getOwnerGuestRelationshipQuery(UAC_PARAMS, user, false/* groupConcat */),\r\n\t\t\talias: 'AUTHOR_USER_RELATIONSHIP',\r\n\t\t\ton: [\r\n\t\t\t\tACCOUNT_QUERY.alias + '.' + UAC_PARAMS.SCHEMAS.account.primaryKey + ' = AUTHOR_USER_RELATIONSHIP.' + UAC_PARAMS.SCHEMAS.account.primaryKey,\r\n\t\t\t\t'NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)',\r\n\t\t\t],\r\n\t\t};\r\n\t\tif (priorityAccounts) {\r\n\t\t\t// But ensure that the following accounts are listed first, if actually in list\r\n\t\t\tACCOUNT_QUERY.select.push('FIND_IN_SET(' + ACCOUNT_QUERY.alias + '.' + UAC_PARAMS.SCHEMAS.account.primaryKey + ', \"' + priorityAccounts.join(',') + '\") AS priority');\r\n\t\t\tACCOUNT_QUERY.orderBy.push('priority DESC');\r\n\t\t}\r\n\t\tif (organicRights) {\r\n\t\t\tACCOUNT_QUERY.where.push('AUTHOR_USER_RELATIONSHIP.relationship in (\"' + organicRights.join('\", \"') + '\")');\r\n\t\t}\r\n\t\treturn ACCOUNT_QUERY;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the Query that finds descreet access types\r\n\t * for the current user on this table (or, table row).\r\n\t *\r\n\t * @param object            params\r\n\t * @param object            user\r\n\t * @param string|array\t\taccesses\r\n\t * @param string|int\t\toverObject\t\t\tThe ID of the subject object.\r\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(The object author will be basis for organic relationship.)\r\n\t * @param int\t\t\t\torAsRelatedTo\t\tWhen not overObject!\r\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(This user ID will be basis for organic relationship.)\r\n\t * @param bool\t\t\t\twithFields\r\n\t * @param bool\t\t\t\twithActingRights\r\n\t *\r\n\t * @return Query\r\n\t */\r\n\tstatic getAccessesDoc(params, user, accesses, overObject = null, orAsRelatedTo = null, withFields = false, withActingRights = false) {\r\n        // Either of the following two arguments are accepted. Not both\r\n\t\tif (overObject && orAsRelatedTo) {\r\n\t\t\tthrow new Error('UAC queries must be either over an object and its author (argument #2), or as related to a specific user (argument #3). But not both!');\r\n\t\t}\r\n        // ---------------\r\n        // OBJECT_QUERY\r\n        // ---------------\r\n        var OBJECT_QUERY = new Query(params, tableName, user);\r\n        // JOIN: The user's organic rights towards the author\r\n        if (OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY) {\r\n            OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY.on.push('NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)');\r\n\t\t}\r\n\t\tif (overObject) {\r\n\t\t\t// The author of the object at the given row in _TABLE\r\n            OBJECT_QUERY.where.push(OBJECT_QUERY.schema.primaryKey + ' = ' + overObject);\r\n\t\t} else if (OBJECT_QUERY.schema.attributionKey && orAsRelatedTo) {\r\n\t\t\t// The author specified in orAsRelatedTo or all possible relationships.\r\n\t\t\t// Whichever the case, _TABLE gets to play no role in this query...\r\n            OBJECT_QUERY.where.push(OBJECT_QUERY.schema.attributionKey + ' = ' + orAsRelatedTo);\r\n\t\t\tOBJECT_QUERY.limit = 1;\r\n        }\r\n        // ---------------\r\n        // DOC\r\n        // ---------------\r\n        if (!accesses.length || accesses === '*') {\r\n            accesses = Client.standardAccesses;\r\n        } else {\r\n            accesses = _arrFrom(accesses);\r\n        }\r\n\t\tvar entityJson = [],\r\n\t\t\tfieldsJson = {},\r\n\t\t\tfields = withFields ? Object.keys(OBJECT_QUERY.schema.fields) : [];\r\n\t\taccesses.forEach(accessType => {\r\n\t\t\tentityJson.push('JSON_OBJECT(\"' + accessType + '\", COALESCE(' + Query.deriveEntityAccess(accessType, withActingRights) + '))');\r\n\t\t\t_each(Query.deriveFieldsAccess(fields, accessType, withActingRights), (field, access) => {\r\n                if (!fieldsJson[field]) {\r\n                    fieldsJson[field] = [];\r\n                }\r\n\t\t\t\tfieldsJson[field].push('JSON_OBJECT(\"' + accessType + '\", ' + access + ')');\r\n\t\t\t});\r\n\t\t});\r\n\t\tif (accesses.length > 1) {\r\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + entityJson.join(', ') + ') AS uac');\r\n\t\t} else {\r\n\t\t\tOBJECT_QUERY.select.push(entityJson.join(', ') + ' AS uac');\r\n\t\t}\r\n\t\tif (fieldsJson.length) {\r\n\t\t\tvar allFieldsJson = [];\r\n\t\t\t_each(fieldsJson, (field, accessesDocs) => {\r\n\t\t\t\tif (accesses.length > 1) {\r\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", JSON_MERGE(' + accessesDocs.join(', ') + '))');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", ' + accessesDocs.join(', ') + ')');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + allFieldsJson.join(', ') + ') AS fields');\r\n\t\t}\r\n\t\treturn OBJECT_QUERY;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nClient.standardAccesses = [\r\n\t'view', \r\n\t'create', \r\n\t'update', \r\n\t'delete', \r\n\t'stats', \r\n\t'use',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tCallInterface,\r\n} from '../index.js';\r\nimport _instanceof from '@webqit/util/js/instanceof.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _find from '@webqit/util/obj/find.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArrowReferenceInterface from '../Expr/ArrowReferenceInterface.js';\r\nimport ArrowReference from '../Expr/ArrowReference.js';\r\nimport Reference from '../Expr/Reference.js';\r\nimport Table from '../Expr/Table.js';\r\nimport Base from '../Base/Base.js';\r\nimport _Factory from '../Base/_Factory.js';\r\nimport UACClient from '../Uac/Client.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Delete class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Stmt {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetBase(databases, params = {}, tables = []) {\r\n\t\tif (!tables.length) {\r\n\t\t\ttables = (_isArray(this.exprs.TABLE_REFERENCES) ? this.exprs.TABLE_REFERENCES : [this.exprs.TABLE_REFERENCES]);\r\n\t\t}\r\n\t\ttables = tables.concat(this.exprs.JOIN_CLAUSE || []).map(table => table.eval(databases, params));\r\n\t\tvar main = tables.shift(), joins = tables;\r\n\t\treturn new Base(main, joins, this.exprs.WHERE_CLAUSE, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetToString(params, callback) {\r\n\t\t// ---------------------\r\n\t\tvar t = params.t || 0, _t = (n = 0, when = true) => !when ? '' : \"\\r\\n\" + (\"\\t\".repeat(Math.max(0, t + n))), _params = {...params}; _params.t = t + 1;\r\n\t\t// ---------------------\r\n\t\tvar strArray = [];\r\n\t\t_each(this.exprs, (clauseType, expr, i) => {\r\n\t\t\tif (!expr && i > 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar str = null;\r\n\t\t\tif (clauseType === 'JOIN_CLAUSE') {\r\n\t\t\t\tvar clause = this.clauses[clauseType];\r\n\t\t\t\tstr = expr.map((join, i) => clause[i].toString().toUpperCase() + ' ' + join.stringify(_params)).join(_t());\r\n\t\t\t} else {\r\n\t\t\t\tvar clause = this.clauses[clauseType].toString().toUpperCase();\r\n\t\t\t\tif (clauseType === 'TABLE_REFERENCES') {\r\n\t\t\t\t\tstr = clause + ' ' + (\r\n\t\t\t\t\t\t_isArray(expr) ? expr.map(table => table.stringify(_params)).join(', ') : expr.stringify(_params)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!callback || !(str = callback(clauseType, expr, clause, _params, _t))) {\r\n\t\t\t\t\tif (_isArray(expr)) {\r\n\t\t\t\t\t\tstr = expr.map(x => _isFunction(x.stringify) ? x.stringify(_params) : expr).join(', ');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstr = clause + ' ' + expr.stringify(_params);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!str && i === 0) {\r\n\t\t\t\tstr = clause;\r\n\t\t\t}\r\n\t\t\tif (str) {\r\n\t\t\t\tstrArray.push(_t() + str);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn strArray.join('') + _t(-1);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic getParse(expr, withUac, stmtClauses, parseCallback, params, callback, literalValidateCallback = null) {\r\n\r\n\t\tvar useRegex = 'i'; // Match clauses; case-insensitively\r\n\t\tvar parse = Lexer.lex(expr, Object.values(stmtClauses), {useRegex:useRegex});\r\n\t\tif (parse.matches.length) {\r\n\t\t\t\r\n\t\t\t// ------------------\r\n\r\n\t\t\tvar EXPRS = {}, CLAUSES = {}, TABLES = {}, SCHEMAS = {}, VARS = [];\r\n\t\t\tparse.matches.forEach((clause, i) => {\r\n\t\t\t\tvar clauseType = _find(stmtClauses, c => clause.match(new RegExp(c, useRegex)), true/*deep*/);\r\n\t\t\t\tvar _expr = parse.tokens[i + 1].trim();\r\n\t\t\t\tvar _exprParse = null;\r\n\t\t\t\tif (clauseType === 'JOIN_CLAUSE') {\r\n\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\r\n\t\t\t\t\tif (_exprParse.type = clause.match(new RegExp('(INNER|CROSS|LEFT|RIGHT)', 'i'))) {\r\n\t\t\t\t\t\t_exprParse.type = _exprParse.type[0].toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!EXPRS[clauseType]) {\r\n\t\t\t\t\t\tEXPRS[clauseType] = [_exprParse];\r\n\t\t\t\t\t\tCLAUSES[clauseType] = [clause];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tEXPRS[clauseType].push(_exprParse);\r\n\t\t\t\t\t\tCLAUSES[clauseType].push(clause);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (clauseType === 'TABLE_REFERENCES' || clauseType === 'USING_CLAUSE'/* specific to the DELETE stmt */) {\r\n\t\t\t\t\t\tvar tables = Lexer.split(_expr, [',']).map(\r\n\t\t\t\t\t\t\ttable => parseCallback(table.trim(), [Table], {withUac, assertTableValidity: clauseType === 'TABLE_REFERENCES' && !parse.matches.includes('USING')})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tvar _exprParse = tables.length === 1 ? tables[0] : tables;\r\n\t\t\t\t\t} else if (!callback || !(_exprParse = callback(clauseType, _expr))) {\r\n\t\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Ramp up\r\n\t\t\t\t\tif (clauseType === 'WHERE_CLAUSE' && !EXPRS.JOIN_CLAUSE) {\r\n\t\t\t\t\t\t// Wheres must not come before joins\r\n\t\t\t\t\t\t// This might happen on adding smart joins below\r\n\t\t\t\t\t\t// So we secure a place for joins\r\n\t\t\t\t\t\tEXPRS.JOIN_CLAUSE = [];\r\n\t\t\t\t\t\tCLAUSES.JOIN_CLAUSE = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tEXPRS[clauseType] = _exprParse;\r\n\t\t\t\t\tCLAUSES[clauseType] = clause;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// ------------------\r\n\r\n\t\t\tconst TABLE_REFERENCES = EXPRS.USING_CLAUSE/* specific to the DELETE stmt */ || EXPRS.TABLE_REFERENCES;\r\n\t\t\t(_isArray(TABLE_REFERENCES) ? TABLE_REFERENCES : [TABLE_REFERENCES]).concat((EXPRS.JOIN_CLAUSE || []).map(j => j.table)).forEach((table, i) => {\r\n\t\t\t\tvar tableAlias = table.getAlias(), tableSchema = table.getSchema();\r\n\t\t\t\tTABLES[tableAlias] = table;\r\n\t\t\t\tSCHEMAS[tableAlias] = tableSchema;\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\tTABLES[''] = TABLES[tableAlias];\r\n\t\t\t\t\tSCHEMAS[''] = SCHEMAS[tableAlias];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// ------------------\r\n\r\n\t\t\t_each(EXPRS, (clauseType, _exprParse) => {\r\n\t\t\t\t_arrFrom(_exprParse, false/*castObjects*/).reduce((_VARS, __exprParse) => _VARS.concat(__exprParse.meta.vars).concat(__exprParse.meta.varsUnlodged), []).forEach(_var => {\r\n\t\t\t\t\tif (!(_var.role === 'CONTEXT')) {\r\n\t\t\t\t\t\tVARS.push(_var);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_var.role === 'CONTEXT' || _instanceof(_var, CallInterface)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// --------------\r\n\t\t\t\t\tvar ref_name, ref_context;\r\n\t\t\t\t\tif (_instanceof(_var, ArrowReferenceInterface)) {\r\n\t\t\t\t\t\tif (ArrowReference.isIncoming(_var + '')) {\r\n\t\t\t\t\t\t\tif (_var.context) {\r\n\t\t\t\t\t\t\t\tTABLES[_var.context + ''].associateReference(_var);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_var.interpreted = parseCallback(TABLES[''].getAlias() + '.' + _var, [Reference]);\r\n\t\t\t\t\t\t\t\tTABLES[''].associateReference(_var);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref_name = _var.name.split('~>')[0].replace(/`/g, '');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tref_name = _var.name.replace(/`/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// -------------\r\n\t\t\t\t\tif (_var.context) {\r\n\t\t\t\t\t\tref_context = _var.context.name.replace(/`/g, '');\r\n\t\t\t\t\t\tif (!SCHEMAS[ref_context] || (ref_name !== '*' && !(ref_name in SCHEMAS[ref_context].fields))) {\r\n\t\t\t\t\t\t\t// Qualified, but unknown column name!\r\n\t\t\t\t\t\t\tif (params.validation !== false) {\r\n\t\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is unknown!');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Or use as is\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (ref_name === '*') {\r\n\t\t\t\t\t\t\t_var.interpreted = Object.keys(SCHEMAS[ref_context].fields).map(field => parseCallback(ref_context + '.' + field, [Reference]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (ref_name === '*') {\r\n\t\t\t\t\t\tref_context = TABLES[''].getAlias();\r\n\t\t\t\t\t\tvar impliedFields;\r\n\t\t\t\t\t\tif ((impliedFields = Object.keys(SCHEMAS[''].fields)) && !impliedFields.length) {\r\n\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\tthrow new Error('The wildcard column specifier (*) cannot used on table \"' + ref_context + '\"; table defines no columns.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_var.interpreted = impliedFields.map(field => parseCallback(ref_context + '.' + field, [Reference]));\r\n\t\t\t\t\t} else if (!(literalValidateCallback && literalValidateCallback(ref_name, clauseType))) {\r\n\t\t\t\t\t\tref_context = Object.keys(SCHEMAS).filter(a => a).reduce((_ref_context, alias) => {\r\n\t\t\t\t\t\t\tif (ref_name in SCHEMAS[alias].fields) {\r\n\t\t\t\t\t\t\t\tif (_ref_context) {\r\n\t\t\t\t\t\t\t\t\t// Ambiguous column name!\r\n\t\t\t\t\t\t\t\t\tif (params.validation !== false) {\r\n\t\t\t\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is ambiguous!');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Use first context found\r\n\t\t\t\t\t\t\t\t\treturn _ref_context;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn alias;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, null);\r\n\t\t\t\t\t\tif (!ref_context) {\r\n\t\t\t\t\t\t\t// Unqualified, unknown column name!\r\n\t\t\t\t\t\t\tif (params.validation !== false) {\r\n\t\t\t\t\t\t\t\t// Throw\r\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is unknown!');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Force the column on main table\r\n\t\t\t\t\t\t\t\tref_context = TABLES[''].getAlias(), impliedFields;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_var.interpreted = parseCallback(ref_context + '.' + _var, [Reference]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ------------------\r\n\t\t\t\t\tTABLES[ref_context || ''].associateReference(_var);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// ------------------\r\n\r\n\t\t\t_each(TABLES, (alias, table) => {\r\n\t\t\t\tif (!alias) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar tableName = table.getName();\r\n\t\t\t\t// -----------\r\n\t\t\t\tif (params.withUac && !table.isDerivedQuery()/* Then UAC would already be applied */) {\r\n\t\t\t\t\ttable.interpreted = parseCallback('(' + UACClient.select(params, SCHEMAS[alias], null/* USER */, table.getAssociateReferences().map(ref => ref.name)/* columns */) + ') AS ' + (alias || tableName), [Table], {withUac: false});\r\n\t\t\t\t}\r\n\t\t\t\t// -----------\r\n\t\t\t\tvar arrowReferences;\r\n\t\t\t\tif ((arrowReferences = table.getAssociateReferences().filter(ref => _instanceof(ref, ArrowReferenceInterface))).length) {\r\n\t\t\t\t\tvar joins = {},\r\n\t\t\t\t\t\t_joins = [],\r\n\t\t\t\t\t\t_select = table.getAssociateReferences().filter(ref => !_instanceof(ref, ArrowReferenceInterface)).map(ref => tableName + '.' + ref.name);\r\n\t\t\t\t\t// ----------\r\n\t\t\t\t\tarrowReferences.forEach(ref => {\r\n\t\t\t\t\t\tvar join = ref.process(SCHEMAS[alias], params.DB_FACTORY);\r\n\t\t\t\t\t\tvar joinUUID = join.b.table.name + '__by__' + join.b.actingKey;\r\n\t\t\t\t\t\tif (!joins[joinUUID]) {\r\n\t\t\t\t\t\t\tjoins[joinUUID] = join\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_select.push(joinUUID + '.' + join.b.select + ' AS `' + ref.name.replace(/`/g, '') + '`');\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// ----------\r\n\t\t\t\t\t_each(joins, (joinUUID, join) => {\r\n\t\t\t\t\t\t_joins.push('LEFT JOIN ' + join.b.table.name + ' AS ' + joinUUID + ' ON ' + joinUUID + '.' + join.b.actingKey + ' = ' + tableName + '.' + join.a.actingKey);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// ----------\r\n\t\t\t\t\tvar stmt = '(SELECT' + (withUac ? ' WITH UAC' : '') \r\n\t\t\t\t\t\t+ ' ' + _unique(_select).join(', ') \r\n\t\t\t\t\t\t+ ' FROM ' + tableName\r\n\t\t\t\t\t\t+ ' ' + _joins.join(' ') \r\n\t\t\t\t\t\t+ ') AS ' + table.getAlias();\r\n\t\t\t\t\t(table.interpreted/* possibly by UAC evaluation */ || table).interpreted = parseCallback(stmt, [Table], {withUac});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// ------------------\r\n\r\n\t\t\treturn {exprs:EXPRS, clauses:CLAUSES, tables:TABLES, schemas:SCHEMAS, vars:VARS};\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _all from '@webqit/util/arr/all.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport DeleteInterface from './DeleteInterface.js';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Delete class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Delete extends _mixin(Stmt, DeleteInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(database, params = {}) {\r\n\r\n\t\t// --------------------\r\n\t\t// RESOLVE DELETION SOURCES AND TARGETS\r\n\t\t// --------------------\r\n\t\tvar targetTableNames,\r\n\t\t\tmainTable = this.exprs.TABLE_REFERENCES;\r\n\t\tif (this.exprs.DELETE_LIST.length) {\r\n\t\t\ttargetTableNames = this.exprs.DELETE_LIST.map(t => t.endsWith('.*') ? _before(t, '.*') : t);\r\n\t\t} else if (this.exprs.USING_CLAUSE) {\r\n\t\t\ttargetTableNames = _arrFrom(this.exprs.TABLE_REFERENCES, false).map(t => t.getAlias());\r\n\t\t\tmainTable = this.exprs.USING_CLAUSE;\r\n\t\t} else {\r\n\t\t\t// IMPORTANT: only first table in here\r\n\t\t\ttargetTableNames = [(_isArray(mainTable) ? mainTable[0] : mainTable).getAlias()];\r\n\t\t}\r\n\r\n\t\t// --------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// --------------------\r\n\t\tvar _params = {...params};\r\n\t\t_params.mode = 'readwrite';\r\n\t\tthis.base = this.getBase(database, _params, _arrFrom(mainTable, false));\r\n\r\n\t\t// --------------------\r\n\t\t// Finds named tables\r\n\t\t// --------------------\r\n\t\tvar targetTables = {},\r\n\t\t\tdeletionIDs = {},\r\n\t\t\ttables = await Promise.all(this.base.joins.concat(this.base.main));\r\n\t\ttargetTableNames.forEach(alias => {\r\n\t\t\ttargetTables[alias] = tables.filter(table => (table.params.alias || table.name) === alias)[0];\r\n\t\t\tif (!targetTables[alias]) {\r\n\t\t\t\tthrow new Error('\"' + alias + '\" in table list is not found in main query.');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// --------------------\r\n\t\t// Mine IDs\r\n\t\t// --------------------\r\n\t\tvar rowComposition;\r\n\t\twhile(rowComposition = await this.base.fetch()) {\r\n\t\t\ttargetTableNames.forEach(alias => {\r\n\t\t\t\tif (!deletionIDs[alias]) {\r\n\t\t\t\t\tdeletionIDs[alias] = [];\r\n\t\t\t\t}\r\n\t\t\t\tvar rowID = _arrFrom(targetTables[alias].schema.primaryKey).map(key => rowComposition[alias][key]);\r\n\t\t\t\tif (!deletionIDs[alias].filter(_rowID => _all(_rowID, (id, i) => id === rowID[i])).length) {\r\n\t\t\t\t\tdeletionIDs[alias].push(rowID);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// --------------------\r\n\t\t// Delete now\r\n\t\t// --------------------\r\n\t\tvar keys = await Promise.all(targetTableNames.map(alias => {\r\n\t\t\tif (deletionIDs[alias].length) {\r\n\t\t\t\treturn targetTables[alias].deleteAll(deletionIDs[alias]);\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\treturn {\r\n\t\t\ttables: tables.map(t => t.name),\r\n\t\t\tkeys,\r\n\t\t};;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.getToString(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'delete') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/DELETE[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'DELETE_LIST') {\r\n\t\t\t\t\treturn _expr.split(',').map(t => t.trim()).filter(t => t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (stmtParse.exprs.DELETE_LIST.length && stmtParse.exprs.USING_CLAUSE) {\r\n\t\t\t\tthrow new Error('The \"using\" keyword cannot be used in a query with explicitly-listed tables.');\r\n\t\t\t}\r\n\t\t\treturn new this(stmtParse.exprs, stmtParse.clauses, withUac);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nDelete.clauses = {\r\n\tDELETE_LIST: 'DELETE',\r\n\tTABLE_REFERENCES: 'FROM',\r\n\tUSING_CLAUSE: 'USING',\r\n\tWHERE_CLAUSE: 'WHERE',\r\n\t// inner join, cross join, {left|right} [outer] join\r\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * FieldInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FieldExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tAbstractionInterface,\r\n\tReferenceInterface,\r\n\tCallInterface,\r\n} from '../index.js';\r\nimport _instanceof from '@webqit/util/js/instanceof.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FieldInterface from './FieldInterface.js';\r\nimport AggrInterface from './AggrInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Field class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Field extends FieldInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, alias, claused = false) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = claused;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * --------------\r\n\t */\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tas(alias) {\r\n\t\tthis.alias = alias;\r\n\t\tthis.claused = true;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetContextName() {\r\n\t\tif (this.expr.interpreted) {\r\n\t\t\t// .interpreted is always fully qualified.\r\n\t\t\treturn _isArray(this.expr.interpreted) \r\n\t\t\t\t? this.expr.interpreted[0].context.name \r\n\t\t\t\t: this.expr.interpreted.context.name;\r\n\t\t}\r\n\t\t// May or may not b qualified\r\n\t\treturn this.expr.context ? (this.expr.context.name || '').replace(/`/g, '') : '';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\t// Without backticks\r\n\t\treturn (this.expr.name || '').replace(/`/g, '');\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn (this.alias || '').replace(/`/g, '') || this.getName() || this.expr.toString();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetCallExprs() {\r\n\t\treturn this.expr.meta.vars.slice().concat([this.expr]).filter(x => x instanceof CallInterface)\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAggrExprs() {\r\n\t\treturn this.expr.meta.vars.slice().concat([this.expr]).filter(x => x instanceof AggrInterface)\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, database, params = {}) {\r\n\t\t\r\n\t\tvar alias = this.getAlias();\r\n\t\tif (_instanceof(this.expr, ReferenceInterface)) {\r\n\r\n\t\t\tif (this.getName() === '*') {\r\n\t\t\t\tvar multiple = this.expr.getEval(tempRow, params);\r\n\t\t\t\t_each(multiple, (name, ref) => {\r\n\t\t\t\t\tif (params.mode === 'readwrite') {\r\n\t\t\t\t\t\tObject.defineProperty(multiple, name, {\r\n\t\t\t\t\t\t\tget() {\r\n\t\t\t\t\t\t\t\treturn ref.get();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset (val) {\r\n\t\t\t\t\t\t\t\tref.set(val);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmultiple[name] = ref.get();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn multiple;\r\n\t\t\t}\r\n\r\n\t\t\tvar reference = this.expr.getEval(tempRow, params);\r\n\t\t\tif (params.mode === 'readwrite') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tget [alias] () {\r\n\t\t\t\t\t\treturn reference.get();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tset [alias] (val) {\r\n\t\t\t\t\t\treference.set(val);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn _objFrom(alias, reference.get());\r\n\t\t}\r\n\r\n\t\tvar value;\r\n\t\tif (this.expr instanceof AbstractionInterface) {\r\n\t\t\tvalue = this.expr.eval(database, params);\r\n\t\t} else {\r\n\t\t\tvalue = this.expr.eval(tempRow, params);\r\n\t\t}\r\n\t\tif (params.mode === 'readwrite') {\r\n\t\t\treturn {\r\n\t\t\t\tget [alias] () {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t},\r\n\t\t\t\tset [alias] (val) {\r\n\t\t\t\t\tthrow new Error('\"' + alias + '\" cannot be modified; not a reference!');\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn _objFrom(alias, value);\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.expr.stringify(params), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, [' (as )?'], {useRegex:'i', preserveDelims:true});\r\n\t\tvar exprParse = null;\r\n\t\tvar alias = splits.pop().trim();\r\n\t\tvar claused = alias.substr(0, 3).toLowerCase() === 'as ';\r\n\t\tif (claused) {\r\n\t\t\t// With an \"AS\" clause, its easy to obtain the alias...\r\n\t\t\t// E.g: SELECT first_name AS fname, 4 + 5 AS result, 5 + 5\r\n\t\t\talias = alias.substr(3).trim();\r\n\t\t\texprParse = parseCallback(splits.join('').trim());\r\n\t\t} else if (splits.length && (!alias.match(/[^0-9a-zA-Z_]/) || _wrapped(alias, '`', '`'))) {\r\n\t\t\t// Without an \"AS\" clause, its hard to determine if an expression is actually aliased...\r\n\t\t\t// E.g: In the statement SELECT first_name fname, 4 + 5 result, 5 + 5 FROM ...,\r\n\t\t\t// we can only assume that the last space-separated expr is rhe alias.\r\n\t\t\t// When that fails, then it is most-likely there is no alias. \r\n\t\t\ttry {\r\n\t\t\t\texprParse = parseCallback(splits.join('').trim());\r\n\t\t\t} catch(e) {}\r\n\t\t}\r\n\t\tif (!exprParse) {\r\n\t\t\talias = null;\r\n\t\t\texprParse = parseCallback(expr);\r\n\t\t}\r\n\t\texprParse.isFieldName = true;\r\n\t\treturn new this(exprParse, alias, claused);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * GroupByInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'GroupByExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _inherit from '@webqit/util/obj/inherit.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport GroupByInterface from './GroupByInterface.js';\r\nimport Row from '../Base/Row.js';\r\n\r\n/**\r\n * ---------------------------\r\n * GroupBy class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class GroupBy extends GroupByInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(columns, having = null, withRollup = false) {\r\n\t\tsuper();\r\n\t\tthis.columns = columns;\r\n\t\tthis.having = having;\r\n\t\tthis.withRollup = withRollup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRows, params = {}) {\r\n\t\tvar groupBy = (rows, by, result) => {\r\n\t\t\t// This will end up either as\r\n\t\t\t// regular summary or rollup {super summary}\r\n\t\t\tif (by.length) {\r\n\t\t\t\t// Drilldown...\r\n\t\t\t\tvar grouping = {};\r\n\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\tvar _for = by[0].eval(row, params);\r\n\t\t\t\t\tgrouping[_for] = grouping[_for] || [];\r\n\t\t\t\t\tgrouping[_for].push(row);\r\n\t\t\t\t});\r\n\t\t\t\tObject.values(grouping).map(group => groupBy(group, by.slice(1), result));\r\n\t\t\t}\r\n\t\t\tif (!by.length/*We're on end nodes*/ || this.withRollup) {\r\n\t\t\t\tvar summaryRow = new Row(params); _inherit(summaryRow, rows[0]);\r\n\t\t\t\tsummaryRow.$ = _copy(summaryRow.$);\r\n\t\t\t\tsummaryRow.AGGR = {rows: rows, by: by};\r\n\t\t\t\t// HOW WE'LL DETERMINE A SUPER AGGREGATE ROW...\r\n\t\t\t\tsummaryRow.AGGR.isRollup = by.length && this.withRollup;\r\n\t\t\t\tif (summaryRow.AGGR.isRollup) {\r\n\t\t\t\t\tby.forEach(b => {\r\n\t\t\t\t\t\tb = b.stringify().indexOf('.') > -1 ? _after(b.stringify(), '.') : b.stringify();\r\n\t\t\t\t\t\tif (b in summaryRow.$) {\r\n\t\t\t\t\t\t\tsummaryRow.$[b] = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(summaryRow);\r\n\t\t\t\treturn summaryRow;\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar result = [];\r\n\t\tgroupBy(tempRows, this.columns.slice(), result);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [this.columns.map(c => c.stringify(params)).join(', ')];\r\n\t\tif (this.withRollup) {\r\n\t\t\tstr.push('WITH ROLLUP');\r\n\t\t}\r\n\t\tif (this.having) {\r\n\t\t\tstr.push('HAVING ' + this.having.stringify(params));\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP', 'HAVING'], {useRegex:'i'});\r\n\t\tvar columns = Lexer.split(parse.tokens.shift().trim(), [',']).map(\r\n\t\t\tc => parseCallback(c.trim())\r\n\t\t);\r\n\t\tvar having = null;\r\n\t\tvar withRollup = false;\r\n\t\tparse.matches.forEach(clauseType => {\r\n\t\t\tif (clauseType.toLowerCase().startsWith('with')) {\r\n\t\t\t\twithRollup = true;\r\n\t\t\t\tparse.tokens.shift();\r\n\t\t\t} else if (clauseType.toLowerCase().startsWith('having')) {\r\n\t\t\t\thaving = parseCallback(parse.tokens.shift().trim());\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn new this(columns, having, withRollup);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * InsertInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'InsertStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport InsertInterface from './InsertInterface.js';\r\nimport { Assignment } from '@web-native-js/subscript';\r\nimport Table from '../Expr/Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Insert class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Insert extends InsertInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(TABLE_REFERENCES, COLUMNS_LIST, VALUES_LIST, WITH_UAC, IGNORE, INSERT_TYPE, UPDATE_CLAUSE) {\r\n\t\tsuper();\r\n\t\tthis.TABLE_REFERENCES = TABLE_REFERENCES;\r\n\t\tthis.COLUMNS_LIST = COLUMNS_LIST;\r\n\t\tthis.VALUES_LIST = VALUES_LIST;\r\n\t\tthis.WITH_UAC = WITH_UAC;\r\n\t\tthis.IGNORE = IGNORE;\r\n\t\tthis.INSERT_TYPE = INSERT_TYPE;\r\n\t\tthis.UPDATE_CLAUSE = UPDATE_CLAUSE;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(context, params = {}) {\r\n\t\tvar _params = {...params};\r\n\t\t_params.mode = 'readwrite';\r\n\t\tvar tableBase = await this.TABLE_REFERENCES.eval(context, _params);\r\n\t\tvar tableSchema = tableBase.schema;\r\n\t\t// ---------------------------\r\n\t\tvar values = this.VALUES_LIST;\r\n\t\tvar insertType = this.INSERT_TYPE.toUpperCase();\r\n\t\tvar forceAutoIncrement = insertType === 'TABLE';\r\n\t\tif (insertType === 'SET') {\r\n\t\t\tvar columns = values.map(assignment => assignment.reference.name);\r\n\t\t\tvalues = [values.map(assignment => assignment.val.eval({}, params))];\r\n\t\t} else {\r\n\t\t\tvar columns = this.COLUMNS_LIST || (tableSchema.fields ? Object.keys(tableSchema.fields) : []);\r\n\t\t\tif (insertType === 'SELECT') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvalues = (await values.eval(context, params)).map(row => Object.values(row));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tthrow new Error('[\"' + values.stringify() + '\" in SELECT clause]: ' + e.message);\r\n\t\t\t\t}\r\n\t\t\t} else if (insertType === 'VALUES') {\r\n\t\t\t\tvalues = values.map(row => row.map(val => val.eval({}, params)));\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Invalid insert statement \"' + this + '\"!');\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolumns = columns.map(c => c + '');\r\n\r\n\t\tvar duplicateKeyCallback = this.UPDATE_CLAUSE ? newRow => {\r\n\t\t\tthis.UPDATE_CLAUSE.forEach(assignment => assignment.eval({$: newRow}, params));\r\n\t\t\treturn true\r\n\t\t} : (this.IGNORE ? () => false : null);\r\n\t\tvar keys = await tableBase.addAll(values, columns, duplicateKeyCallback, forceAutoIncrement);\r\n\r\n\t\treturn {\r\n\t\t\ttable: tableBase.name,\r\n\t\t\tkeys,\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\t// ---------------------\r\n\t\tvar t = params.t || 0, _t = (n = 0) => \"\\r\\n\" + (\"\\t\".repeat(Math.max(0, t + n))), _params = {...params}; _params.t = t + 1;\r\n\t\t// ---------------------\r\n\t\tvar str = [this.TABLE_REFERENCES.stringify(_params)];\r\n\t\tif (this.INSERT_TYPE.toUpperCase() === 'SET') {\r\n\t\t\tstr.push(_t(1) + 'SET ' + this.VALUES_LIST.map(assignment => assignment.stringify(_params)).join(', '));\r\n\t\t} else {\r\n\t\t\tif (this.COLUMNS_LIST.length) {\r\n\t\t\t\tstr.push('(' + this.COLUMNS_LIST.join(', ') + ')');\r\n\t\t\t}\r\n\t\t\tif (this.INSERT_TYPE.toUpperCase() === 'SELECT') {\r\n\t\t\t\tstr.push(this.VALUES_LIST.stringify(_params));\r\n\t\t\t} else {\r\n\t\t\t\tstr.push(_t() + 'VALUES ' + _t(1) + '(' + this.VALUES_LIST.map(\r\n\t\t\t\t\trow => row.map(\r\n\t\t\t\t\t\tval => val.stringify(_params)\r\n\t\t\t\t\t).join(', ')\r\n\t\t\t\t).join('),' + _t(1) + '(') + ')');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.UPDATE_CLAUSE) {\r\n\t\t\tstr.push(_t() + 'ON DUPLICATE KEY UPDATE ' + this.UPDATE_CLAUSE.map(assignment => assignment.stringify(_params)).join(', '));\r\n\t\t}\r\n\t\treturn 'INSERT ' + (this.IGNORE ? 'IGNORE ' : '') + 'INTO ' + str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.trim().match(/^INSERT([ ]+WITH[ ]+UAC)?([ ]+IGNORE)?([ ]+INTO)?/, 'i')) {\r\n\t\t\tvar withUac = false, ignore = false;\r\n\t\t\tif (expr.match(/INSERT[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tif (expr.match(/INSERT[ ]+IGNORE/i)) {\r\n\t\t\t\tignore = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+IGNORE/i, '');\r\n\t\t\t}\r\n\t\t\tvar parse = Lexer.lex(expr, Object.values(Insert.clauses), {useRegex:'i'});\r\n\t\t\tparse.tokens.shift();\r\n\t\t\tvar table = parse.tokens.shift().trim();\r\n\t\t\tvar columns = [];\r\n\t\t\tvar values = parse.tokens.shift();\r\n\t\t\tvar insertType = parse.matches[1].toUpperCase();\r\n\t\t\tif (insertType === 'SET') {\r\n\t\t\t\ttable = parseCallback(table, [Table]);\r\n\t\t\t\tvalues = Lexer.split(values.trim(), [','])\r\n\t\t\t\t\t.map(e => parseCallback(e.trim(), [Assignment]));\r\n\t\t\t} else {\r\n\t\t\t\tvar tableColumnSplit = Lexer.split(table, [' ']);\r\n\t\t\t\ttable = parseCallback(tableColumnSplit.shift().trim(), [Table]);\r\n\t\t\t\tif (tableColumnSplit.length) {\r\n\t\t\t\t\tcolumns = tableColumnSplit[0].trim();\r\n\t\t\t\t\tcolumns = Lexer.split(_wrapped(columns, '(', ')') ? _unwrap(columns, '(', ')') : columns, [','])\r\n\t\t\t\t\t\t.map(c => c.trim());\r\n\t\t\t\t}\r\n\t\t\t\tif (insertType === 'SELECT') {\r\n\t\t\t\t\tvalues = parseCallback('SELECT ' + values.trim());\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// insertType === 'VALUES' || insertType === 'VALUE'\r\n\t\t\t\t\tvalues = Lexer.split(values.trim(), [','])\r\n\t\t\t\t\t\t.map(row => Lexer.split(_unwrap(row.trim(), '(', ')'), [','])\r\n\t\t\t\t\t\t\t.map(val => parseCallback(val.trim())));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar onDuplicateKeyUpdate = parse.tokens.shift();\r\n\t\t\tif (onDuplicateKeyUpdate) {\r\n\t\t\t\tonDuplicateKeyUpdate = Lexer.split(onDuplicateKeyUpdate.trim(), [','])\r\n\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [Assignment]));\r\n\t\t\t}\r\n\t\t\tvar instance = new this(table, columns, values, withUac, ignore, insertType, onDuplicateKeyUpdate);\r\n\t\t\tinstance.parseCallback = parseCallback;\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nInsert.clauses = {\r\n\tTABLE_REFERENCES: 'INSERT([ ]+IGNORE)?([ ]+INTO)?',\r\n\tVALUES_LIST: '(VALUES|VALUE|SET|SELECT)',\r\n\tUPDATE_CLAUSE: 'ON[ ]+DUPLICATE[ ]+KEY[ ]+UPDATE',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'JoinConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport JoinInterface from './JoinInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Literal from './Literal.js';\r\nimport Table from './Table.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Join class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Join extends JoinInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(table, condition, conditionClause) {\r\n\t\tsuper();\r\n\t\tthis.table = table;\r\n\t\tthis.condition = condition;\r\n\t\tthis.conditionClause = conditionClause;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(database, params = {}) {\r\n\t\treturn this.table.eval(database, params).then(t => {\r\n\t\t\tt.join = {\r\n\t\t\t\ttype: this.type, // Expected to be added by context\r\n\t\t\t\tcondition: this.condition, \r\n\t\t\t\tconditionClause: this.conditionClause\r\n\t\t\t};\r\n\t\t\treturn t;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetName() {\r\n\t\treturn this.table.getName();\r\n\t}\t\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetAlias() {\r\n\t\treturn this.table.getAlias();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.table.stringify(params), \r\n\t\t\tthis.conditionClause, \r\n\t\t\tthis.condition.stringify(params)\r\n\t\t].join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Join.clauses);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar clause = parse.matches[0];\r\n\t\t\tvar table = parseCallback(parse.tokens[0], [Table]);\r\n\t\t\tvar condition = clause.trim().toUpperCase() === 'USING' \r\n\t\t\t\t? parseCallback(parse.tokens[1], [Literal])\r\n\t\t\t\t: parseCallback(parse.tokens[1]);\r\n\t\t\treturn new this(\r\n\t\t\t\ttable,\r\n\t\t\t\tcondition, \r\n\t\t\t\tclause\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nJoin.clauses = [' on ', ' using ', ' ON ', ' USING ',];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * JoinInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Placeholder'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * SelectInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'SelectStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _instanceof from '@webqit/util/js/instanceof.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _pushUnique from '@webqit/util/arr/pushUnique.js';\r\nimport _find from '@webqit/util/obj/find.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SelectInterface from './SelectInterface.js';\r\nimport AggrInterface from '../Expr/AggrInterface.js';\r\nimport Field from '../Expr/Field.js';\r\nimport Window from '../Expr/Window.js';\r\nimport GroupBy from '../Expr/GroupBy.js';\r\nimport OrderBy from '../Expr/OrderBy.js';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Select class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Select extends _mixin(Stmt, SelectInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac = false, flags = [], vars = []) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t\tthis.flags = flags;\r\n\t\tthis.vars = vars;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Fields\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetFields(resolve = false) {\r\n\t\treturn this.exprs.SELECT_LIST;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Table component\r\n\t * \r\n\t * @return Object|array\r\n\t */\r\n\tgetTable() {\r\n\t\treturn this.exprs.TABLE_REFERENCES;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Table and Join components\r\n\t * \r\n\t * @params Bool resolve\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetSources(resolve = false) {\r\n\t\tvar joins = this.getJoins() || [];\r\n\t\treturn _arrFrom(this.exprs.TABLE_REFERENCES, false).concat(resolve ? joins.map(j => j.table) : joins);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Where component\r\n\t * \r\n\t * @return Object\r\n\t */\r\n\tgetWhere() {\r\n\t\treturn this.exprs.WHERE_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Join components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetJoins() {\r\n\t\treturn this.exprs.JOIN_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's GroupBy components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetGroupBy() {\r\n\t\treturn this.exprs.GROUP_BY_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Windows components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetWindows() {\r\n\t\treturn this.exprs.WINDOWS_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's OrderBy components\r\n\t * \r\n\t * @return array\r\n\t */\r\n\tgetOrderBy() {\r\n\t\treturn this.exprs.ORDER_BY_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Offset components\r\n\t * \r\n\t * @return string\r\n\t */\r\n\tgetOffset() {\r\n\t\treturn this.exprs.OFFSET_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the SELECT STMT's Limit components\r\n\t * \r\n\t * @return string\r\n\t */\r\n\tgetLimit() {\r\n\t\treturn this.exprs.LIMIT_CLAUSE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(context, params = {}) {\r\n\t\t\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tthis.base = this.getBase(context, params);\r\n\t\t// BUILD (TEMP) ROWS, WHERE\r\n\t\tvar tempRows = [], tempRow;\r\n\t\twhile (tempRow = await this.base.fetch()) {\r\n\t\t\ttempRows.push(tempRow);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// BUILD RESPONSE ROWS INTO THE \"$\" KEY\r\n\t\t// ---------------------------\r\n\t\tvar applyFields = (tempRows, fields, collectAggrs = null) => {\r\n\t\t\tif (collectAggrs) {\r\n\t\t\t\tcollectAggrs = {aggr:[], win:[]};\r\n\t\t\t}\r\n\t\t\ttempRows.forEach(tempRow => {\r\n\t\t\t\tif (!tempRow.$) {\r\n\t\t\t\t\ttempRow.$ = {};\r\n\t\t\t\t}\r\n\t\t\t\tfields.forEach(field => {\r\n\t\t\t\t\tif (collectAggrs) {\r\n\t\t\t\t\t\t// This build will ignore AGGR columns for nowthis.\r\n\t\t\t\t\t\tvar aggrs = field.getAggrExprs();\r\n\t\t\t\t\t\tif (aggrs.length) {\r\n\t\t\t\t\t\t\t_pushUnique(aggrs.filter(x => x.window).length ? collectAggrs.win : collectAggrs.aggr, field);\r\n\t\t\t\t\t\t\t// But we'll set them to UNDEFINED (not NULL), to secure their slots\r\n\t\t\t\t\t\t\tif (!(field.getAlias() in tempRow.$)) {\r\n\t\t\t\t\t\t\t\ttempRow.$[field.getAlias()] = undefined;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar fieldValObject = field.eval(tempRow, context, params);\r\n\t\t\t\t\tObject.keys(fieldValObject).forEach(key => {\r\n\t\t\t\t\t\tObject.defineProperty(tempRow.$, key, Object.getOwnPropertyDescriptor(fieldValObject, key));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn collectAggrs;\r\n\t\t};\r\n\r\n\t\t// ---------------------------\r\n\t\t// UNDERSTAND AGGREGATIONS\r\n\t\t// ---------------------------\r\n\t\tvar aggrExprs = {aggr:[], win:[]};\r\n\t\tthis.vars.forEach(x => {\r\n\t\t\t//if (_instanceof(x, AggrInterface)) {\r\n\t\t\tif (_instanceof(x, AggrInterface)) {\r\n\t\t\t\t_pushUnique(x.window ? aggrExprs.win : aggrExprs.aggr, x);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// BUILD FIELDS\r\n\t\tvar aggrFields = applyFields(tempRows, this.getFields(), true/*collectAggrs*/);\r\n\r\n\t\t// ---------------------------\r\n\t\t// GROUP BY?\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.GROUP_BY_CLAUSE || aggrExprs.aggr.length) {\r\n\t\t\tvar groupBy = this.exprs.GROUP_BY_CLAUSE || new GroupBy([]);\r\n\t\t\ttempRows = groupBy.eval(tempRows, params);\r\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR columns\r\n\t\t\tapplyFields(tempRows, aggrFields.aggr);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// WINDOWING\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.WINDOWS_CLAUSE || aggrExprs.win.length) {\r\n\t\t\tvar completed = [];\r\n\t\t\taggrExprs.win.forEach(expr => {\r\n\t\t\t\tvar uuid = expr.window.stringify();\r\n\t\t\t\tif (completed.indexOf(uuid) === -1) {\r\n\t\t\t\t\texpr.window.eval(tempRows, this.exprs.WINDOWS_CLAUSE, params);\r\n\t\t\t\t\tcompleted.push(uuid);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR OVER () columns\r\n\t\t\tapplyFields(tempRows, aggrFields.win);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// ORDER BY\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.ORDER_BY_CLAUSE) {\r\n\t\t\ttempRows = this.exprs.ORDER_BY_CLAUSE.eval(tempRows, params);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// DISTINCT\r\n\t\t// ---------------------------\r\n\t\tif (this.flags.includes('DISTINCT')) {\r\n\t\t\ttempRows = tempRows.filter((tempRow, i) => i === _find(tempRows, _tempRow => _even(_tempRow, tempRow)));\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// LIMIT\r\n\t\t// ---------------------------\r\n\t\tif (this.exprs.OFFSET_CLAUSE || this.exprs.LIMIT_CLAUSE) {\r\n\t\t\tvar limit = this.exprs.LIMIT_CLAUSE ? this.exprs.LIMIT_CLAUSE.slice() : [];\r\n\t\t\tvar offset = this.exprs.OFFSET_CLAUSE || (limit.length === 2 ? limit.shift() : 0);\r\n\t\t\ttempRows = limit.length \r\n\t\t\t\t? tempRows.slice(offset, offset + limit[0]) \r\n\t\t\t\t: tempRows.slice(offset);\r\n\t\t}\r\n\r\n\t\t// ---------------------------\r\n\t\t// SEND RESPONSE ROWS\r\n\t\t// ---------------------------\r\n\t\treturn tempRows.map(tempRow => tempRow.$);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.getToString(params, (clauseType, expr, clause, _params) => {\r\n\t\t\tif (clauseType === 'SELECT_LIST') {\r\n\t\t\t\treturn clause + ' ' + (this.flags.length ? ' ' + this.flags.join(' ') : '') + expr.map(x => x.stringify(_params)).join(', ');\r\n\t\t\t} else if (clauseType === 'WINDOWS_CLAUSE') {\r\n\t\t\t\treturn clause + ' ' + Object.keys(expr).map(\r\n\t\t\t\t\twindowName => windowName + ' AS ' + expr[windowName].stringify(_params)\r\n\t\t\t\t).join(', ');\r\n\t\t\t} else if (clauseType === 'GROUP_BY_CLAUSE' || clauseType === 'ORDER_BY_CLAUSE') {\r\n\t\t\t\treturn clause + ' ' + expr.stringify(_params);\r\n\t\t\t} else if (clauseType === 'LIMIT_CLAUSE') {\r\n\t\t\t\treturn clause + ' ' + expr.join(', ');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'select') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/SELECT[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar aliases = [];\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'SELECT_LIST') {\r\n\t\t\t\t\treturn Lexer.split(_expr, [',']).map(field => {\r\n\t\t\t\t\t\tvar field = parseCallback(field.trim(), [Field]);\r\n\t\t\t\t\t\taliases.push(field.getAlias());\r\n\t\t\t\t\t\treturn field;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (clauseType === 'WINDOWS_CLAUSE') {\r\n\t\t\t\t\tvar windowsByName = {};\r\n\t\t\t\t\tLexer.split(_expr, [',']).forEach(window => {\r\n\t\t\t\t\t\t// WINDOW w AS (PARTITION BY country ORDER BY city ASC, state DESC), u AS (...)\r\n\t\t\t\t\t\t// NOTICE the space around \"as\", important in view of \"city ASC\"\r\n\t\t\t\t\t\tvar windowSplit = window.split(new RegExp(' as ', 'i'));\r\n\t\t\t\t\t\twindowsByName[windowSplit[0].trim()] = parseCallback(windowSplit[1].trim(), [Window]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn windowsByName;\r\n\t\t\t\t} else if (clauseType === 'GROUP_BY_CLAUSE') {\r\n\t\t\t\t\treturn parseCallback(_expr, [GroupBy]);\r\n\t\t\t\t} else if (clauseType === 'ORDER_BY_CLAUSE') {\r\n\t\t\t\t\treturn parseCallback(_expr, [OrderBy]);\r\n\t\t\t\t} else if (clauseType === 'LIMIT_CLAUSE') {\r\n\t\t\t\t\treturn _expr.split(',').map(n => parseInt(n));\r\n\t\t\t\t}\r\n\t\t\t}, (literal, clauseType) => (clauseType === 'ORDER_BY_CLAUSE' || clauseType === 'GROUP_BY_CLAUSE') && aliases.includes(literal));\r\n\r\n\t\t\treturn new this(\r\n\t\t\t\tstmtParse.exprs, \r\n\t\t\t\tstmtParse.clauses, \r\n\t\t\t\twithUac,\r\n\t\t\t\tstmtParse.clauses.SELECT_LIST.replace(/SELECT/i, '').split(' ').filter(flag => flag),\r\n\t\t\t\tstmtParse.vars,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nSelect.clauses = {\r\n\tSELECT_LIST: 'SELECT([ ]+(ALL|DISTINCT))?',\r\n\tTABLE_REFERENCES: 'FROM',\r\n\tWHERE_CLAUSE: 'WHERE',\r\n\t// INNER JOIN, CROSS JOIN, {LEFT|RIGHT} [OUTER] JOIN\r\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n\tGROUP_BY_CLAUSE: 'GROUP[ ]+BY',\r\n\tWINDOWS_CLAUSE: 'WINDOW',\r\n\tORDER_BY_CLAUSE: 'ORDER[ ]+BY',\r\n\tOFFSET_CLAUSE: 'OFFSET',\r\n\tLIMIT_CLAUSE: 'LIMIT',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { ExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * UnionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'UnionConstruct'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { IndependentExprInterface } from '@web-native-js/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * UpdateInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'UpdateStatement'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mixin from '@webqit/util/js/mixin.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport UpdateInterface from './UpdateInterface.js';\r\nimport { Assignment } from '@web-native-js/subscript';\r\nimport Stmt from './Stmt.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Update class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Update extends _mixin(Stmt, UpdateInterface) {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, clauses, withUac) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.clauses = clauses;\r\n\t\tthis.withUac = withUac;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tasync eval(database, params = {}) {\r\n\t\t// ---------------------------\r\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\r\n\t\t// ---------------------------\r\n\t\tvar _params = {...params};\r\n\t\t_params.mode = 'readwrite';\r\n\t\tthis.base = this.getBase(database, _params);\r\n\t\tvar rowComposition;\r\n\t\twhile(rowComposition = await this.base.fetch()) {\r\n\t\t\tthis.exprs.ASSIGNMENT_LIST.forEach(assignment => assignment.eval(rowComposition, params));\r\n\t\t}\r\n\t\tvar __keys = await this.base.syncCursors();\r\n\t\tvar __tables = await Promise.all(this.base.joins.concat(this.base.main)).then(list => list.map(t => t.name));\r\n\t\treturn {\r\n\t\t\ttables: __tables,\r\n\t\t\tkeys: __keys,\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.getToString(params, (clauseType, expr, clause, _params, _t) => {\r\n\t\t\tif (clauseType === 'ASSIGNMENT_LIST') {\r\n\t\t\t\treturn clause + ' ' + expr.map(assignment => assignment.stringify(_params)).join(', ');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'update') {\r\n\t\t\tvar withUac = false;\r\n\t\t\tif (expr.match(/UPDATE[ ]+WITH[ ]+UAC/i)) {\r\n\t\t\t\twithUac = true;\r\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\r\n\t\t\t}\r\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\r\n\t\t\t\tif (clauseType === 'ASSIGNMENT_LIST') {\r\n\t\t\t\t\treturn Lexer.split(_expr, [','])\r\n\t\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [Assignment]));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn new this(stmtParse.exprs, stmtParse.clauses, withUac);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nUpdate.clauses = {\r\n\tTABLE_REFERENCES: 'UPDATE',\r\n\tASSIGNMENT_LIST: 'SET',\r\n\tWHERE_CLAUSE: 'WHERE',\r\n\t// inner join, cross join, {left|right} [outer] join\r\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Rql from './Rql.js';\r\nimport ExprInterface from './ExprInterface.js';\r\n// Reuse\r\nimport {\r\n\tAbstraction,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tMath,\r\n\tNum,\r\n\tStr,\r\n\tVoid,\r\n} from '@web-native-js/subscript';\r\nimport {\r\n\tAbstractionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n} from '@web-native-js/subscript';\r\n// Extended\r\nimport {\r\n\tAssertionInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tReferenceInterface,\r\n} from '@web-native-js/subscript';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport Reference from './Expr/Reference.js';\r\n// New types\r\nimport Aggr from './Expr/Aggr.js';\r\nimport AggrInterface from './Expr/AggrInterface.js';\r\nimport ArrowReference from './Expr/ArrowReference.js';\r\nimport ArrowReferenceInterface from './Expr/ArrowReferenceInterface.js';\r\nimport Delete from './Stmt/Delete.js';\r\nimport DeleteInterface from './Stmt/DeleteInterface.js';\r\nimport Field from './Expr/Field.js';\r\nimport FieldInterface from './Expr/FieldInterface.js';\r\nimport GroupBy from './Expr/GroupBy.js';\r\nimport GroupByInterface from './Expr/GroupByInterface.js';\r\nimport Insert from './Stmt/Insert.js';\r\nimport InsertInterface from './Stmt/InsertInterface.js';\r\nimport Join from './Expr/Join.js';\r\nimport JoinInterface from './Expr/JoinInterface.js';\r\nimport OrderBy from './Expr/OrderBy.js';\r\nimport OrderByInterface from './Expr/OrderByInterface.js';\r\nimport Placeholder from './Expr/Placeholder.js';\r\nimport PlaceholderInterface from './Expr/PlaceholderInterface.js';\r\nimport Select from './Stmt/Select.js';\r\nimport SelectInterface from './Stmt/SelectInterface.js';\r\nimport Table from './Expr/Table.js';\r\nimport TableInterface from './Expr/TableInterface.js';\r\nimport Union from './Stmt/Union.js';\r\nimport UnionInterface from './Stmt/UnionInterface.js';\r\nimport Update from './Stmt/Update.js';\r\nimport UpdateInterface from './Stmt/UpdateInterface.js';\r\nimport Window from './Expr/Window.js';\r\nimport WindowInterface from './Expr/WindowInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nRql.grammars = {\r\n\t// Statements and union\r\n\tUnion: Union,\t\t\t\t// ... UNION ...\r\n\tSelect: Select,\t\t\t\t// SELECT ... FROM ...\r\n\tInsert: Insert,\t\t\t\t// INSERT INTO ...\r\n\tUpdate: Update,\t\t\t\t// UPDATE ...\r\n\tDelete: Delete,\t\t\t\t// DELETE FROM ...\r\n\t// Expressions\r\n\tJoin: Join,\t\t\t\t\t// table2 ON|USING ...\r\n\tAbstraction: Abstraction,\t// (...)\r\n\tCondition: Condition,\t\t// IF(..., ..., ...)\r\n\tAssertion: Assertion,\t\t// !field1 OR field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tAggr: Aggr,\t\t\t\t\t// MIN() OVER()\r\n\tCall: Call,\t\t\t\t\t// COUNT()\r\n\tPlaceholder: Placeholder,\t// ? :var\r\n\tArrowReference, ArrowReference, // ref1 ~> ref2\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Rql;\r\nexport {\r\n\tExprInterface,\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tAggr,\r\n\tArrowReference,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDelete,\r\n\tField,\r\n\tGroupBy,\r\n\tInsert,\r\n\tJoin,\r\n\tMath,\r\n\tNum,\r\n\tOrderBy,\r\n\tPlaceholder,\r\n\tReference,\r\n\tSelect,\r\n\tStr,\r\n\tTable,\r\n\tUnion,\r\n\tUpdate,\r\n\tVoid,\r\n\tWindow\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tAggrInterface,\r\n\tArrowReferenceInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeleteInterface,\r\n\tFieldInterface,\r\n\tGroupByInterface,\r\n\tInsertInterface,\r\n\tJoinInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tOrderByInterface,\r\n\tPlaceholderInterface,\r\n\tReferenceInterface,\r\n\tSelectInterface,\r\n\tStrInterface,\r\n\tTableInterface,\r\n\tUnionInterface,\r\n\tUpdateInterface,\r\n\tVoidInterface,\r\n\tWindowInterface\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport OrderBy from '../Expr/OrderBy.js';\r\nimport UnionInterface from './UnionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Union class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Union extends UnionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(query, queries, orderBy = null, limit = null) {\r\n\t\tsuper();\r\n\t\tthis.query = query;\r\n\t\tthis.queries = queries;\r\n\t\tthis.orderBy = orderBy;\r\n\t\tthis.limit = limit;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [[this.query.stringify(params)].concat(\r\n\t\t\tthis.queries.map(q => (q.onDuplicate ? q.onDuplicate.toUpperCase() + ' ' : '') + q.select.stringify(params))\r\n\t\t).join(' UNION ')];\r\n\t\tif (this.orderBy) {\r\n\t\t\tstr.push('ORDER BY ' + this.orderBy.stringify(params));\r\n\t\t}\r\n\t\tif (this.limit) {\r\n\t\t\tstr.push('LIMIT ' + this.limit.join(', '));\r\n\t\t}\r\n\t\treturn str.join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = null;\r\n\t\tvar paramsRegex = {useRegex: 'i'};\r\n\t\tif ((parse = Lexer.lex(expr, [' UNION([ ]+(ALL|DISTINCT))? '], paramsRegex)) && parse.matches.length) {\r\n\t\t\tvar selects = parse.tokens;\r\n\t\t\tvar clauses = parse.matches;\r\n\t\t\tvar orderBy = null;\r\n\t\t\tvar limit = null;\r\n\t\t\t// Are the selects parenthisized? Then there could be outer ORDER BY / LIMIT clauses\r\n\t\t\tif (selects[0].trim().startsWith('(')) {\r\n\t\t\t\tvar lastStmtSplit = Lexer.lex(selects.pop(), ['ORDER[ ]+BY', 'LIMIT'], paramsRegex);\r\n\t\t\t\tselects.push(lastStmtSplit.tokens.shift());\r\n\t\t\t\tlastStmtSplit.matches.forEach(clause => {\r\n\t\t\t\t\tvar _expr = lastStmtSplit.tokens.shift().trim();\r\n\t\t\t\t\tif (clause.toUpperCase().startsWith('ORDER')) {\r\n\t\t\t\t\t\torderBy = parseCallback(_expr, [OrderBy]);\r\n\t\t\t\t\t} else if (clause.toUpperCase().startsWith('LIMIT')) {\r\n\t\t\t\t\t\tlimit = _expr.split(',').map(n => parseInt(n));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(selects.shift().trim()),\r\n\t\t\t\tselects.map((select, i) => {return {\r\n\t\t\t\t\tselect: parseCallback(select.trim()),\r\n\t\t\t\t\tonDuplicate: (clauses[i].match(new RegExp('ALL|DISTINCT', 'i')) || [])[0]\r\n\t\t\t\t}}),\r\n\t\t\t\torderBy,\r\n\t\t\t\tlimit\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\tCondition as _Condition\r\n} from '@web-native-js/subscript';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends _Condition {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn 'IF (' + [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.match(/^if[ ]*?\\(/i)) {\r\n\t\t\tvar tokens = Lexer.split(_unwrap(expr.trim().substr(2).trim(), '(', ')'), [',']);\r\n\t\t\tif (tokens.length !== 3) {\r\n\t\t\t\tthrow new Error('Malformed condition expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(...tokens.map(expr => parseCallback(expr.trim())));\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport PlaceholderInterface from './PlaceholderInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\nexport default class Placeholder extends PlaceholderInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(name, notation) {\r\n\t\tsuper();\r\n\t\tthis.name = _isNumeric(name) ? parseInt(name) : name;\r\n\t\tthis.notation = notation;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, params = {}) {\r\n\t\tif (typeof this.name === 'number') {\r\n\t\t\tif (!params.vars) {\r\n\t\t\t\tthrow new Error('Annonymous placeholders require a \"params.vars\" array to be resolved.');\r\n\t\t\t}\r\n\t\t\treturn params.vars[this.name];\r\n\t\t}\r\n\t\tif (!params.vars) {\r\n\t\t\tthrow new Error('Named placeholders require a \"params.vars\" object to be resolved.');\r\n\t\t}\r\n\t\treturn params.vars[this.name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.notation === '?' ? '?' : this.notation + this.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.startsWith('?') || expr.startsWith(':')) {\r\n\t\t\treturn new this(expr.substr(1), expr.substr(0, 1));\r\n\t\t}\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Rql from './index.js';\r\n\r\n// As globals\r\nif (!window.WN) {\r\n\twindow.WN = {};\r\n}\r\nwindow.WN.Rql = Rql;\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Rql = Rql;\r\n"],"sourceRoot":""}